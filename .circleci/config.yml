# .circleci/config.yml

version: 2.1

orbs:
  node: circleci/node@1.1.6

jobs:
  build-and-test-emission:
    # Specify the Xcode version to use
    macos:
      xcode: "11.3.0"

    shell: /bin/bash --login -eo pipefail

    environment:
      # WARNING: These env vars are passed to PRs on forks.
      # WARNING: DO NOT PUT SENSITIVE INFORMATION HERE.
      ArtsyAPIClientSecret: "-"
      ArtsyAPIClientKey: "-"
      StripePublishableKey: "-"
      MapBoxAPIClientKey: "-"

      # For caching gems, relative to current directory
      BUNDLE_PATH: vendor/bundle
      BUNDLER_VERSION: 2.0.2

    steps:
      - run:
          name: List Simulators
          command: xcrun simctl list

      - run:
          name: Install Node 12 (Required for Yarn)
          command: |
            set +e
            touch $BASH_ENV
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
            echo 'nvm install v12.13.1' >> $BASH_ENV
            echo 'nvm alias default v12.13.1' >> $BASH_ENV

      - checkout

      - restore_cache:
          keys:
            - v3-gems-{{ checksum "emission/Example/Gemfile.lock" }}
            # Fall back to using the latest cache if no exact match is found.
            - v3-gems-

      - run:
          name: Bundle install
          command: cd emission/Example ; yarn ci:skip-native-if-possible || bundle check || bundle install
          environment:
            BUNDLE_JOBS: 4
            BUNDLE_RETRY: 3

      - save_cache:
          key: v3-gems-{{ checksum "emission/Example/Gemfile.lock" }}
          paths:
            - emission/Example/vendor/bundle

      - restore_cache:
          keys:
            - v3-yarn-{{ checksum "emission/yarn.lock" }}
            # Fall back to using the latest cache if no exact match is found.
            - v3-yarn-

      - run:
          name: Install Yarn Dependencies
          command: cd emission && yarn ci:skip-native-if-possible || yarn install --ignore-engines

      - save_cache:
          key: v3-yarn-{{ checksum "emission/yarn.lock" }}
          paths:
            - emission/node_modules

      - restore_cache:
          keys:
            - v9-pods-{{ checksum "emission/package.json" }}

      - run:
          name: Install CocoaPods If Necessary
          command: cd emission;
            yarn ci:skip-native-if-possible || { cd Example ; bundle exec pod check --ignore-dev-pods || bundle exec pod
            install ; }

      - save_cache:
          key: v9-pods-{{ checksum "emission/package.json" }}
          paths:
            - emission/Example/Pods

      - run:
          name: Package JavaScript for Testing
          command: cd emission;
            yarn ci:skip-native-if-possible || yarn bundle-for-native-ci

      - run:
          name: Set up build artefact directories
          command: mkdir -p /tmp/test_results/xcode

      - run:
          name: Run Unit Tests
          command: cd emission;
            yarn ci:skip-native-if-possible || { cd Example ; set -o pipefail && xcodebuild -workspace
            Emission.xcworkspace -scheme "Emission Example" -configuration Debug test -sdk iphonesimulator -destination
            "platform=iOS Simulator,OS=12.4,name=iPhone X" GCC_PREPROCESSOR_DEFINITIONS="\$GCC_PREPROCESSOR_DEFINITIONS
            RUNNING_ON_CI=1" | tee /tmp/xcode_test_raw.log | xcpretty -c --test --report junit --output
            /tmp/test_results/xcode/results.xml ; }

      - store_test_results:
          path: /tmp/test_results/

      - store_artifacts:
          path: /tmp/xcode_test_raw.log
          prefix: tests

  build-and-test-eigen:
    environment:
      # Public - Yay
      UPLOAD_IOS_SNAPSHOT_BUCKET_NAME: eigen-ci

      # Private - Keeps us in business! Yay
      #   AWS_ACCESS_KEY_ID: from_admin
      #   AWS_SECRET_ACCESS_KEY: from_admin
      #   DANGER_GITHUB_API_TOKEN: from_admin
      #   MATCH_PASSWORD : from_admin
      #   HOCKEY_API_TOKEN : from_admin
      #   FASTLANE_USERNAME : from_admin
      #   FASTLANE_PASSWORD : from_admin
      #   ArtsyAPIClientSecret: from_admin
      #   ArtsyAPIClientKey: from_admin
      #   ArtsyFacebookAppID: from_admin
      #   ArtsyTwitterKey: from_admin
      #   ArtsyTwitterSecret: from_admin
      #   ArtsyTwitterStagingKey: from_admin
      #   ArtsyTwitterStagingSecret: from_admin
      #   SegmentProductionWriteKey: from_admin
      #   SegmentDevWriteKey: from_admin
      #   AdjustProductionAppToken: from_admin
      #   ArtsyEchoProductionToken:  from_admin
      BUNDLE_PATH: vendor/bundle # path to install gems and use for caching

    # Specify the Xcode version to use.
    macos:
      xcode: "11.3.0"

    # Define the steps required to build the project.
    steps:
      # Get the code from the VCS provider.
      - checkout

      - run:
          name: Install Node 12 (Required for Yarn)
          command: |
            set +e
            touch $BASH_ENV
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
            echo 'nvm install v12.13.1' >> $BASH_ENV
            echo 'nvm alias default v12.13.1' >> $BASH_ENV

      - restore_cache:
          keys:
            - v1-gems-{{ checksum "Gemfile.lock" }}
            # Fall back to using the latest cache if no exact match is found.
            - v1-gems-

      # Install gems.
      - run:
          name: Bundle install
          command: bundle check || bundle install
          environment:
            BUNDLE_JOBS: 4
            BUNDLE_RETRY: 3

      - save_cache:
          key: v1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: List sims
          command: xcversion simulators

      - run:
          name: List devices
          command: instruments -s device

      - restore_cache:
          keys:
            - v4-pods-{{ checksum "Podfile.lock" }}
            # Fall back to using the latest cache if no exact match is found.
            - v4-pods-

      - run:
          name: Install Pods
          command: bundle exec pod check || bundle exec pod install

      - run:
          name: Bundle emission
          command: cd emission && yarn bundle-for-native-ci

      - save_cache:
          key: v4-pods-{{ checksum "Podfile.lock" }}
          paths:
            - Pods
            - rn_pods

      - run:
          name: Pre-Build App
          command: make ci

      - run:
          name: Run tests
          command: make ci-test

      - store_artifacts:
          path: xcode_build_raw.log
          prefix: build

      - store_artifacts:
          path: xcode_test_raw.log
          prefix: tests

      - store_test_results:
          path: test-results.xml

      - run:
          name: Danger
          command: bundle exec danger --danger_id=circle
            --dangerfile=Dangerfile.circle.rb --verbose

      - run:
          name: Deploy if beta
          command: make deploy_if_beta_branch

      - run:
          name: Promote if app_store_submission
          command: make promote_if_app_store_submission_branch

  update-metaphysics:
    executor:
      name: node/default
      tag: "12.13.1"

    shell: /bin/bash --login -eo pipefail

    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - "23:11:82:24:bb:cb:a8:1e:7a:eb:b1:f3:d6:e1:55:32"

      - restore_cache:
          keys:
            - v3-yarn-{{ checksum "emission/yarn.lock" }}
            # Fall back to using the latest cache if no exact match is found.
            - v3-yarn-

      - run:
          name: Install Yarn Dependencies
          command: cd emission && yarn install --ignore-engines

      - save_cache:
          key: v3-yarn-{{ checksum "emission/yarn.lock" }}
          paths:
            - emission/node_modules

      - run:
          name: Deploy via auto-release
          command: cd emission && yarn update-metaphysics

workflows:
  version: 2
  build-test:
    jobs:
      - build-and-test-eigen
      - build-and-test-emission
      - update-metaphysics:
          filters:
            branches:
              only:
                - master
                - beta
                - app_store_submission
