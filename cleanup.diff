diff --git a/data/complete.queryMap.json b/data/complete.queryMap.json
index 24093710b..872c616a8 100644
--- a/data/complete.queryMap.json
+++ b/data/complete.queryMap.json
@@ -1,46 +1,46 @@
 {
   "2a9481ee99ef977b10d9916f3943a168": "query TimeOffsetProviderQuery {\n  system {\n    time {\n      unix\n    }\n  }\n}\n",
-  "1d3a0f2206eb2af68823de0031311e4c": "query ShowQuery(\n  $showID: String!\n) {\n  show(id: $showID) {\n    ...Show_show\n    id\n  }\n}\n\nfragment Show_show on Show {\n  ...Detail_show\n}\n\nfragment Detail_show on Show {\n  internalID\n  slug\n  name\n  description\n  city\n  isStubShow\n  images {\n    internalID\n  }\n  ...ShowHeader_show\n  ...ShowArtworksPreview_show\n  ...ShowArtistsPreview_show\n  ...Shows_show\n  location {\n    ...LocationMap_location\n    openingHours {\n      __typename\n      ... on OpeningHoursArray {\n        schedules {\n          days\n          hours\n        }\n      }\n      ... on OpeningHoursText {\n        text\n      }\n    }\n    id\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    slug\n    id\n  }\n  counts {\n    artworks\n    artists\n  }\n  status\n  partner {\n    __typename\n    ... on Partner {\n      name\n      type\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ShowHeader_show on Show {\n  slug\n  internalID\n  id\n  name\n  press_release: pressRelease\n  is_followed: isFollowed\n  end_at: endAt\n  exhibition_period: exhibitionPeriod\n  status\n  isStubShow\n  partner {\n    __typename\n    ... on Partner {\n      name\n      slug\n      href\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  images {\n    url\n    aspect_ratio: aspectRatio\n  }\n  followedArtists: followedArtistsConnection(first: 3) {\n    edges {\n      node {\n        artist {\n          name\n          href\n          slug\n          internalID\n          id\n        }\n      }\n    }\n  }\n  artists {\n    name\n    href\n    slug\n    internalID\n    id\n  }\n}\n\nfragment ShowArtworksPreview_show on Show {\n  id\n  counts {\n    artworks\n  }\n  artworks: artworksConnection(first: 6) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment ShowArtistsPreview_show on Show {\n  internalID\n  slug\n  artists {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n}\n\nfragment Shows_show on Show {\n  nearbyShows: nearbyShowsConnection(first: 20) {\n    edges {\n      node {\n        id\n        ...ShowItem_show\n      }\n    }\n  }\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment ShowItem_show on Show {\n  internalID\n  slug\n  name\n  exhibition_period: exhibitionPeriod\n  end_at: endAt\n  images {\n    url\n    aspect_ratio: aspectRatio\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "7bb05c55dc75ddb9b229a4b618e7ee40": "query LotsByFollowedArtistsQuery(\n  $count: Int!\n  $cursor: String\n) {\n  ...LotsByFollowedArtists_query_1G22uz\n}\n\nfragment LotsByFollowedArtists_query_1G22uz on Query {\n  me {\n    lotsByFollowedArtistsConnection(first: $count, after: $cursor, liveSale: true, isAuction: true) {\n      edges {\n        cursor\n        node {\n          __typename\n          id\n        }\n        id\n      }\n      ...InfiniteScrollArtworksGrid_connection\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    id\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "2dd4364236b36dc590e5d59a7b101607": "query FairQuery(\n  $fairID: String!\n) {\n  fair(id: $fairID) {\n    ...Fair_fair\n    id\n  }\n}\n\nfragment Fair_fair on Fair {\n  id\n  slug\n  ...FairDetail_fair\n  organizer {\n    website\n    id\n  }\n  about\n  ticketsLink\n}\n\nfragment FairDetail_fair on Fair {\n  ...FairHeader_fair\n  slug\n  internalID\n  name\n  hours\n  isActive\n  location {\n    ...LocationMap_location\n    coordinates {\n      lat\n      lng\n    }\n    id\n  }\n  organizer {\n    website\n    id\n  }\n  about\n  ticketsLink\n  profile {\n    name\n    id\n  }\n  sponsoredContent {\n    activationText\n    pressReleaseUrl\n  }\n  shows: showsConnection(first: 5) {\n    pageInfo {\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        slug\n        internalID\n        artworks: artworksConnection(first: 4) {\n          edges {\n            node {\n              slug\n              id\n            }\n          }\n        }\n        ...FairBoothPreview_show\n        id\n        __typename\n      }\n    }\n  }\n}\n\nfragment FairHeader_fair on Fair {\n  slug\n  internalID\n  name\n  formattedOpeningHours\n  counts {\n    artists\n    partners\n  }\n  followed_content: followedContent {\n    artists {\n      name\n      href\n      slug\n      internalID\n      id\n    }\n    galleries {\n      internalID\n      name\n      id\n    }\n  }\n  partner_names: showsConnection(first: 2) {\n    edges {\n      node {\n        slug\n        partner {\n          __typename\n          ... on Partner {\n            profile {\n              name\n              slug\n              internalID\n              id\n            }\n          }\n          ... on Node {\n            id\n          }\n          ... on ExternalPartner {\n            id\n          }\n        }\n        id\n      }\n    }\n  }\n  artists_names: artistsConnection(first: 3) {\n    edges {\n      node {\n        name\n        href\n        slug\n        internalID\n        id\n      }\n    }\n  }\n  image {\n    image_url: imageURL\n    aspect_ratio: aspectRatio\n    url\n  }\n  profile {\n    icon {\n      internalID\n      href\n      height\n      width\n      url(version: \"square140\")\n    }\n    id\n    slug\n    name\n    is_followed: isFollowed\n  }\n  start_at: startAt\n  end_at: endAt\n  exhibition_period: exhibitionPeriod\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment FairBoothPreview_show on Show {\n  slug\n  internalID\n  name\n  is_fair_booth: isFairBooth\n  counts {\n    artworks\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      href\n      slug\n      internalID\n      id\n      profile {\n        internalID\n        is_followed: isFollowed\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  fair {\n    name\n    id\n  }\n  cover_image: coverImage {\n    url\n  }\n  location {\n    display\n    id\n  }\n  artworks: artworksConnection(first: 4) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "83820a65a9db744622aa7205caea5f76": "query ShowQuery(\n  $showID: String!\n) {\n  show(id: $showID) {\n    ...Show_show\n    id\n  }\n}\n\nfragment Show_show on Show {\n  ...Detail_show\n}\n\nfragment Detail_show on Show {\n  internalID\n  slug\n  description\n  ...ShowHeader_show\n  ...ShowArtworksPreview_show\n  ...ShowArtistsPreview_show\n  ...Shows_show\n  location {\n    ...LocationMap_location\n    openingHours {\n      __typename\n      ... on OpeningHoursArray {\n        schedules {\n          days\n          hours\n        }\n      }\n      ... on OpeningHoursText {\n        text\n      }\n    }\n    id\n  }\n  artistsWithoutArtworks {\n    slug\n    id\n  }\n  counts {\n    artworks\n    artists\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      type\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ShowHeader_show on Show {\n  slug\n  internalID\n  id\n  name\n  is_followed: isFollowed\n  end_at: endAt\n  exhibition_period: exhibitionPeriod\n  isStubShow\n  partner {\n    __typename\n    ... on Partner {\n      name\n      slug\n      href\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  images {\n    url\n    aspect_ratio: aspectRatio\n  }\n  followedArtists: followedArtistsConnection(first: 3) {\n    edges {\n      node {\n        artist {\n          name\n          href\n          slug\n          internalID\n          id\n        }\n      }\n    }\n  }\n  artists {\n    name\n    href\n    slug\n    internalID\n    id\n  }\n}\n\nfragment ShowArtworksPreview_show on Show {\n  id\n  counts {\n    artworks\n  }\n  artworks: artworksConnection(first: 6) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment ShowArtistsPreview_show on Show {\n  internalID\n  slug\n  artists {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n}\n\nfragment Shows_show on Show {\n  nearbyShows: nearbyShowsConnection(first: 20) {\n    edges {\n      node {\n        id\n        ...ShowItem_show\n      }\n    }\n  }\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment ShowItem_show on Show {\n  internalID\n  slug\n  name\n  exhibition_period: exhibitionPeriod\n  end_at: endAt\n  images {\n    url\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "f2aaf56f3cf74d34c8b4e9b2e7ae7835": "query LotsByFollowedArtistsQuery(\n  $count: Int!\n  $cursor: String\n) {\n  ...LotsByFollowedArtists_query_1G22uz\n}\n\nfragment LotsByFollowedArtists_query_1G22uz on Query {\n  me {\n    lotsByFollowedArtistsConnection(first: $count, after: $cursor, liveSale: true, isAuction: true) {\n      edges {\n        cursor\n        node {\n          __typename\n          id\n        }\n        id\n      }\n      ...InfiniteScrollArtworksGrid_connection\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    id\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "99c42c5c76ee5cffeb5352733d31f853": "query FairQuery(\n  $fairID: String!\n) {\n  fair(id: $fairID) {\n    ...Fair_fair\n    id\n  }\n}\n\nfragment Fair_fair on Fair {\n  id\n  ...FairDetail_fair\n}\n\nfragment FairDetail_fair on Fair {\n  ...FairHeader_fair\n  slug\n  internalID\n  name\n  hours\n  isActive\n  location {\n    ...LocationMap_location\n    coordinates {\n      lat\n      lng\n    }\n    id\n  }\n  organizer {\n    website\n    id\n  }\n  profile {\n    name\n    id\n  }\n  sponsoredContent {\n    pressReleaseUrl\n    activationText\n  }\n  shows: showsConnection(first: 5) {\n    pageInfo {\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        artworks: artworksConnection(first: 4) {\n          edges {\n            node {\n              slug\n              id\n            }\n          }\n        }\n        ...FairBoothPreview_show\n        id\n        __typename\n      }\n    }\n  }\n}\n\nfragment FairHeader_fair on Fair {\n  slug\n  name\n  formattedOpeningHours\n  startAt\n  endAt\n  exhibitionPeriod\n  counts {\n    artists\n  }\n  image {\n    url\n  }\n  followedContent {\n    artists {\n      name\n      href\n      slug\n      internalID\n      id\n    }\n  }\n  artistsConnection(first: 3) {\n    edges {\n      node {\n        name\n        href\n        slug\n        internalID\n        id\n      }\n    }\n  }\n  profile {\n    id\n    icon {\n      url(version: \"square140\")\n    }\n  }\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment FairBoothPreview_show on Show {\n  slug\n  internalID\n  counts {\n    artworks\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      href\n      slug\n      internalID\n      id\n      profile {\n        id\n        slug\n        internalID\n        isFollowed\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  coverImage {\n    url\n  }\n  location {\n    display\n    id\n  }\n  artworks: artworksConnection(first: 4) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
   "dd922620c574c3eed75338d9a2edf71d": "query CitySavedListQuery(\n  $count: Int!\n  $cursor: String\n  $citySlug: String!\n) {\n  ...CitySavedList_viewer_1G22uz\n}\n\nfragment CitySavedList_viewer_1G22uz on Query {\n  city(slug: $citySlug) {\n    name\n  }\n  me {\n    followsAndSaves {\n      shows: showsConnection(first: $count, status: RUNNING_AND_UPCOMING, city: $citySlug, after: $cursor) {\n        edges {\n          node {\n            slug\n            internalID\n            id\n            name\n            isStubShow\n            status\n            href\n            is_followed: isFollowed\n            exhibition_period: exhibitionPeriod\n            cover_image: coverImage {\n              url\n            }\n            location {\n              coordinates {\n                lat\n                lng\n              }\n              id\n            }\n            type\n            start_at: startAt\n            end_at: endAt\n            partner {\n              __typename\n              ... on Partner {\n                name\n                type\n                profile {\n                  image {\n                    url(version: \"square\")\n                  }\n                  id\n                }\n              }\n              ... on Node {\n                id\n              }\n              ... on ExternalPartner {\n                id\n              }\n            }\n            __typename\n          }\n          cursor\n        }\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n      }\n    }\n    id\n  }\n}\n",
-  "01ca1b098cc2d55915aa938ba0f515ae": "query FairArtistsRendererQuery(\n  $fairID: String!\n) {\n  fair(id: $fairID) {\n    ...FairArtists_fair\n    id\n  }\n}\n\nfragment FairArtists_fair on Fair {\n  slug\n  internalID\n  artists: artistsConnection(first: 10) {\n    pageInfo {\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        ...ArtistListItem_artist\n        sortable_id: sortableID\n        href\n        internalID\n        slug\n        id\n        __typename\n      }\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n",
-  "bbfabd259d81cf2ff2ada77917f36ad5": "query FairArtistsQuery(\n  $id: String!\n  $count: Int!\n  $cursor: String\n) {\n  fair(id: $id) {\n    ...FairArtists_fair_1G22uz\n    id\n  }\n}\n\nfragment FairArtists_fair_1G22uz on Fair {\n  slug\n  internalID\n  artists: artistsConnection(first: $count, after: $cursor) {\n    pageInfo {\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        ...ArtistListItem_artist\n        sortable_id: sortableID\n        href\n        internalID\n        slug\n        id\n        __typename\n      }\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n",
+  "b3cdae9c8f868ed4f5bbde50e08ed541": "query FairArtistsRendererQuery(\n  $fairID: String!\n) {\n  fair(id: $fairID) {\n    ...FairArtists_fair\n    id\n  }\n}\n\nfragment FairArtists_fair on Fair {\n  slug\n  internalID\n  artists: artistsConnection(first: 10) {\n    pageInfo {\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        ...ArtistListItem_artist\n        sortableID\n        id\n        __typename\n      }\n      cursor\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n",
+  "23c357620a5af8ece6b385299613e942": "query FairArtistsQuery(\n  $id: String!\n  $count: Int!\n  $cursor: String\n) {\n  fair(id: $id) {\n    ...FairArtists_fair_1G22uz\n    id\n  }\n}\n\nfragment FairArtists_fair_1G22uz on Fair {\n  slug\n  internalID\n  artists: artistsConnection(first: $count, after: $cursor) {\n    pageInfo {\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        ...ArtistListItem_artist\n        sortableID\n        id\n        __typename\n      }\n      cursor\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n",
   "eb939376879908647ec03922d6f8a30a": "query ShowArtistsQuery(\n  $showID: String!\n) {\n  show(id: $showID) {\n    ...ShowArtists_show\n    id\n  }\n}\n\nfragment ShowArtists_show on Show {\n  internalID\n  slug\n  artists_grouped_by_name: artistsGroupedByName {\n    letter\n    items {\n      ...ArtistListItem_artist\n      sortable_id: sortableID\n      href\n      id\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n",
   "d2759d79e2c03e7a4f20054093419f41": "query getConvectionGeminiKeyQuery {\n  system {\n    services {\n      convection {\n        geminiTemplateKey\n      }\n    }\n  }\n}\n",
-  "056a07a9d4b4e25e8ace5d965c930fa5": "query InboxRefetchQuery {\n  me {\n    ...Inbox_me\n    id\n  }\n}\n\nfragment Inbox_me on Me {\n  lot_standings: lotStandings(live: true) {\n    most_recent_bid: mostRecentBid {\n      id\n    }\n  }\n  conversations_existence_check: conversationsConnection(first: 1) {\n    edges {\n      node {\n        internalID\n        id\n      }\n    }\n  }\n  ...Conversations_me\n  ...ActiveBids_me\n}\n\nfragment Conversations_me on Me {\n  conversations: conversationsConnection(first: 10, after: \"\") {\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    edges {\n      node {\n        internalID\n        last_message: lastMessage\n        ...ConversationSnippet_conversation\n        id\n        __typename\n      }\n      cursor\n    }\n  }\n}\n\nfragment ActiveBids_me on Me {\n  lot_standings: lotStandings(live: true) {\n    most_recent_bid: mostRecentBid {\n      id\n    }\n    ...ActiveBid_bid\n  }\n}\n\nfragment ActiveBid_bid on LotStanding {\n  is_leading_bidder: isLeadingBidder\n  sale {\n    href\n    is_live_open: isLiveOpen\n    id\n  }\n  most_recent_bid: mostRecentBid {\n    id\n    max_bid: maxBid {\n      display\n    }\n    sale_artwork: saleArtwork {\n      artwork {\n        href\n        image {\n          url\n        }\n        artist_names: artistNames\n        id\n      }\n      counts {\n        bidder_positions: bidderPositions\n      }\n      highest_bid: highestBid {\n        display\n      }\n      lot_label: lotLabel\n      reserve_status: reserveStatus\n      id\n    }\n  }\n}\n\nfragment ConversationSnippet_conversation on Conversation {\n  internalID\n  to {\n    name\n    id\n  }\n  last_message: lastMessage\n  last_message_at: lastMessageAt\n  unread\n  items {\n    item {\n      __typename\n      ... on Artwork {\n        date\n        title\n        artist_names: artistNames\n        image {\n          url\n        }\n      }\n      ... on Show {\n        fair {\n          name\n          id\n        }\n        name\n        cover_image: coverImage {\n          url\n        }\n      }\n      ... on Node {\n        id\n      }\n    }\n  }\n}\n",
-  "3d92c2c1bba407045c0efcfd8b7755cf": "query BidFlowSelectMaxBidRendererQuery(\n  $saleArtworkNodeID: ID!\n) {\n  node(id: $saleArtworkNodeID) {\n    __typename\n    ...SelectMaxBid_sale_artwork\n    id\n  }\n}\n\nfragment SelectMaxBid_sale_artwork on SaleArtwork {\n  id\n  increments(useMyMaxBid: true) {\n    display\n    cents\n  }\n  ...ConfirmBid_sale_artwork\n}\n\nfragment ConfirmBid_sale_artwork on SaleArtwork {\n  internalID\n  sale {\n    slug\n    live_start_at: liveStartAt\n    end_at: endAt\n    id\n  }\n  artwork {\n    slug\n    title\n    date\n    artist_names: artistNames\n    image {\n      url(version: \"small\")\n    }\n    id\n  }\n  lot_label: lotLabel\n  ...BidResult_sale_artwork\n}\n\nfragment BidResult_sale_artwork on SaleArtwork {\n  minimum_next_bid: minimumNextBid {\n    amount\n    cents\n    display\n  }\n  sale {\n    live_start_at: liveStartAt\n    end_at: endAt\n    slug\n    id\n  }\n}\n",
+  "c4388a030cbb14d8469cb254e9a1cc53": "query InboxRefetchQuery {\n  me {\n    ...Inbox_me\n    id\n  }\n}\n\nfragment Inbox_me on Me {\n  lot_standings: lotStandings(live: true) {\n    most_recent_bid: mostRecentBid {\n      id\n    }\n  }\n  conversations_existence_check: conversationsConnection(first: 1) {\n    edges {\n      node {\n        internalID\n        id\n      }\n    }\n  }\n  ...Conversations_me\n  ...ActiveBids_me\n}\n\nfragment Conversations_me on Me {\n  conversations: conversationsConnection(first: 10, after: \"\") {\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    edges {\n      node {\n        internalID\n        last_message: lastMessage\n        ...ConversationSnippet_conversation\n        id\n        __typename\n      }\n      cursor\n    }\n  }\n}\n\nfragment ActiveBids_me on Me {\n  lot_standings: lotStandings(live: true) {\n    most_recent_bid: mostRecentBid {\n      id\n    }\n    ...ActiveBid_bid\n  }\n}\n\nfragment ActiveBid_bid on LotStanding {\n  is_leading_bidder: isLeadingBidder\n  sale {\n    href\n    is_live_open: isLiveOpen\n    id\n  }\n  most_recent_bid: mostRecentBid {\n    id\n    sale_artwork: saleArtwork {\n      artwork {\n        href\n        image {\n          url\n        }\n        artist_names: artistNames\n        id\n      }\n      counts {\n        bidder_positions: bidderPositions\n      }\n      highest_bid: highestBid {\n        display\n      }\n      lot_label: lotLabel\n      reserve_status: reserveStatus\n      id\n    }\n  }\n}\n\nfragment ConversationSnippet_conversation on Conversation {\n  internalID\n  to {\n    name\n    id\n  }\n  lastMessage\n  lastMessageAt\n  unread\n  items {\n    item {\n      __typename\n      ... on Artwork {\n        date\n        title\n        artistNames\n        image {\n          url\n        }\n      }\n      ... on Show {\n        fair {\n          name\n          id\n        }\n        name\n        coverImage {\n          url\n        }\n      }\n      ... on Node {\n        id\n      }\n    }\n  }\n}\n",
+  "f8fb2d7ad9bb72b52884f1e2e45fe513": "query BidFlowSelectMaxBidRendererQuery(\n  $saleArtworkNodeID: ID!\n) {\n  node(id: $saleArtworkNodeID) {\n    __typename\n    ...SelectMaxBid_sale_artwork\n    id\n  }\n}\n\nfragment SelectMaxBid_sale_artwork on SaleArtwork {\n  id\n  increments(useMyMaxBid: true) {\n    display\n  }\n  ...ConfirmBid_sale_artwork\n}\n\nfragment ConfirmBid_sale_artwork on SaleArtwork {\n  internalID\n  sale {\n    slug\n    live_start_at: liveStartAt\n    end_at: endAt\n    id\n  }\n  artwork {\n    slug\n    title\n    date\n    artist_names: artistNames\n    image {\n      url(version: \"small\")\n    }\n    id\n  }\n  lot_label: lotLabel\n  ...BidResult_sale_artwork\n}\n\nfragment BidResult_sale_artwork on SaleArtwork {\n  sale {\n    liveStartAt\n    endAt\n    slug\n    id\n  }\n}\n",
   "1381befaf61cac38d7102f134d1fb3e0": "query CityFairListQuery(\n  $count: Int!\n  $cursor: String\n  $citySlug: String!\n) {\n  city(slug: $citySlug) {\n    ...CityFairList_city_1G22uz\n  }\n}\n\nfragment CityFairList_city_1G22uz on City {\n  slug\n  fairs: fairsConnection(first: $count, after: $cursor, status: CURRENT, sort: START_AT_ASC) {\n    edges {\n      node {\n        internalID\n        name\n        exhibition_period: exhibitionPeriod\n        counts {\n          partners\n        }\n        location {\n          coordinates {\n            lat\n            lng\n          }\n          id\n        }\n        image {\n          image_url: imageURL\n          aspect_ratio: aspectRatio\n          url\n        }\n        profile {\n          icon {\n            internalID\n            href\n            height\n            width\n            url(version: \"square140\")\n          }\n          id\n          slug\n          name\n        }\n        start_at: startAt\n        end_at: endAt\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n",
-  "a53f4aae0b0be77d7be03e2a04353567": "query ShowTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    ...Show_show\n    id\n  }\n}\n\nfragment Show_show on Show {\n  ...Detail_show\n}\n\nfragment Detail_show on Show {\n  internalID\n  slug\n  name\n  description\n  city\n  isStubShow\n  images {\n    internalID\n  }\n  ...ShowHeader_show\n  ...ShowArtworksPreview_show\n  ...ShowArtistsPreview_show\n  ...Shows_show\n  location {\n    ...LocationMap_location\n    openingHours {\n      __typename\n      ... on OpeningHoursArray {\n        schedules {\n          days\n          hours\n        }\n      }\n      ... on OpeningHoursText {\n        text\n      }\n    }\n    id\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    slug\n    id\n  }\n  counts {\n    artworks\n    artists\n  }\n  status\n  partner {\n    __typename\n    ... on Partner {\n      name\n      type\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ShowHeader_show on Show {\n  slug\n  internalID\n  id\n  name\n  press_release: pressRelease\n  is_followed: isFollowed\n  end_at: endAt\n  exhibition_period: exhibitionPeriod\n  status\n  isStubShow\n  partner {\n    __typename\n    ... on Partner {\n      name\n      slug\n      href\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  images {\n    url\n    aspect_ratio: aspectRatio\n  }\n  followedArtists: followedArtistsConnection(first: 3) {\n    edges {\n      node {\n        artist {\n          name\n          href\n          slug\n          internalID\n          id\n        }\n      }\n    }\n  }\n  artists {\n    name\n    href\n    slug\n    internalID\n    id\n  }\n}\n\nfragment ShowArtworksPreview_show on Show {\n  id\n  counts {\n    artworks\n  }\n  artworks: artworksConnection(first: 6) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment ShowArtistsPreview_show on Show {\n  internalID\n  slug\n  artists {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n}\n\nfragment Shows_show on Show {\n  nearbyShows: nearbyShowsConnection(first: 20) {\n    edges {\n      node {\n        id\n        ...ShowItem_show\n      }\n    }\n  }\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment ShowItem_show on Show {\n  internalID\n  slug\n  name\n  exhibition_period: exhibitionPeriod\n  end_at: endAt\n  images {\n    url\n    aspect_ratio: aspectRatio\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "7a320775c865ac2e6c2eea5f54b81ebc": "query ShowTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    ...Show_show\n    id\n  }\n}\n\nfragment Show_show on Show {\n  ...Detail_show\n}\n\nfragment Detail_show on Show {\n  internalID\n  slug\n  description\n  ...ShowHeader_show\n  ...ShowArtworksPreview_show\n  ...ShowArtistsPreview_show\n  ...Shows_show\n  location {\n    ...LocationMap_location\n    openingHours {\n      __typename\n      ... on OpeningHoursArray {\n        schedules {\n          days\n          hours\n        }\n      }\n      ... on OpeningHoursText {\n        text\n      }\n    }\n    id\n  }\n  artistsWithoutArtworks {\n    slug\n    id\n  }\n  counts {\n    artworks\n    artists\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      type\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ShowHeader_show on Show {\n  slug\n  internalID\n  id\n  name\n  is_followed: isFollowed\n  end_at: endAt\n  exhibition_period: exhibitionPeriod\n  isStubShow\n  partner {\n    __typename\n    ... on Partner {\n      name\n      slug\n      href\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  images {\n    url\n    aspect_ratio: aspectRatio\n  }\n  followedArtists: followedArtistsConnection(first: 3) {\n    edges {\n      node {\n        artist {\n          name\n          href\n          slug\n          internalID\n          id\n        }\n      }\n    }\n  }\n  artists {\n    name\n    href\n    slug\n    internalID\n    id\n  }\n}\n\nfragment ShowArtworksPreview_show on Show {\n  id\n  counts {\n    artworks\n  }\n  artworks: artworksConnection(first: 6) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment ShowArtistsPreview_show on Show {\n  internalID\n  slug\n  artists {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n}\n\nfragment Shows_show on Show {\n  nearbyShows: nearbyShowsConnection(first: 20) {\n    edges {\n      node {\n        id\n        ...ShowItem_show\n      }\n    }\n  }\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment ShowItem_show on Show {\n  internalID\n  slug\n  name\n  exhibition_period: exhibitionPeriod\n  end_at: endAt\n  images {\n    url\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
   "88ea9bf65ed7340059e0307e6f048f7b": "mutation FairBoothHeaderMutation(\n  $input: FollowProfileInput!\n) {\n  followProfile(input: $input) {\n    profile {\n      slug\n      internalID\n      is_followed: isFollowed\n      id\n    }\n  }\n}\n",
   "dc9f6e5ffced10ac45b852617df1d0ab": "query CitySectionListQuery(\n  $count: Int!\n  $cursor: String\n  $citySlug: String!\n  $partnerType: PartnerShowPartnerType\n  $status: EventStatus\n  $dayThreshold: Int\n  $sort: ShowSorts\n) {\n  city(slug: $citySlug) {\n    ...CitySectionList_city_3BpxDU\n  }\n}\n\nfragment CitySectionList_city_3BpxDU on City {\n  name\n  shows: showsConnection(includeStubShows: true, first: $count, sort: $sort, after: $cursor, partnerType: $partnerType, status: $status, dayThreshold: $dayThreshold) {\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    edges {\n      node {\n        id\n        slug\n        internalID\n        isStubShow\n        is_followed: isFollowed\n        start_at: startAt\n        end_at: endAt\n        status\n        href\n        type\n        name\n        cover_image: coverImage {\n          url\n        }\n        exhibition_period: exhibitionPeriod\n        partner {\n          __typename\n          ... on Partner {\n            name\n            type\n            profile {\n              image {\n                url(version: \"square\")\n              }\n              id\n            }\n          }\n          ... on Node {\n            id\n          }\n          ... on ExternalPartner {\n            id\n          }\n        }\n        __typename\n      }\n      cursor\n    }\n  }\n}\n",
-  "ec5271410da1859f9c565ee5b9f750e4": "query FavoriteFairsQuery {\n  me {\n    ...Fairs_me\n    id\n  }\n}\n\nfragment Fairs_me on Me {\n  followsAndSaves {\n    fairs: fairsConnection(first: 10, after: \"\") {\n      edges {\n        node {\n          id\n          profile {\n            slug\n            is_followed: isFollowed\n            id\n          }\n          exhibition_period: exhibitionPeriod\n          name\n          counts {\n            partners\n          }\n          href\n          image {\n            url\n          }\n          start_at: startAt\n          end_at: endAt\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n",
+  "47abc6e55498189a7a9ebf3b14c90599": "query FavoriteFairsQuery {\n  me {\n    ...Fairs_me\n    id\n  }\n}\n\nfragment Fairs_me on Me {\n  followsAndSaves {\n    fairs: fairsConnection(first: 10, after: \"\") {\n      edges {\n        node {\n          id\n          profile {\n            slug\n            is_followed: isFollowed\n            id\n          }\n          exhibition_period: exhibitionPeriod\n          name\n          counts {\n            partners\n          }\n          href\n          image {\n            url\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n",
   "e7f9de7dcd788f850b7cfa7601d233bd": "query FairExhibitorsTestsQuery {\n  fair(id: \"art-basel-in-miami-beach-2018\") {\n    exhibitors_grouped_by_name: exhibitorsGroupedByName {\n      letter\n      exhibitors {\n        name\n        slug\n        profile_id: profileID\n      }\n    }\n    id\n  }\n}\n",
   "836d7fa217741306a9e462f3d5b78a0f": "query ArtworkAttributionClassFAQRendererQuery {\n  artworkAttributionClasses {\n    ...ArtworkAttributionClassFAQ_artworkAttributionClasses\n    id\n  }\n}\n\nfragment ArtworkAttributionClassFAQ_artworkAttributionClasses on AttributionClass {\n  name\n  longDescription\n}\n",
   "d63c1f2ea07ae174fa360a2f02ab6e5b": "query QueryRenderersCitySectionListQuery(\n  $citySlug: String!\n  $partnerType: PartnerShowPartnerType\n  $status: EventStatus\n  $dayThreshold: Int\n  $sort: ShowSorts\n) {\n  city(slug: $citySlug) {\n    ...CitySectionList_city_2xWq6T\n  }\n}\n\nfragment CitySectionList_city_2xWq6T on City {\n  name\n  shows: showsConnection(includeStubShows: true, first: 20, sort: $sort, after: \"\", partnerType: $partnerType, status: $status, dayThreshold: $dayThreshold) {\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    edges {\n      node {\n        id\n        slug\n        internalID\n        isStubShow\n        is_followed: isFollowed\n        start_at: startAt\n        end_at: endAt\n        status\n        href\n        type\n        name\n        cover_image: coverImage {\n          url\n        }\n        exhibition_period: exhibitionPeriod\n        partner {\n          __typename\n          ... on Partner {\n            name\n            type\n            profile {\n              image {\n                url(version: \"square\")\n              }\n              id\n            }\n          }\n          ... on Node {\n            id\n          }\n          ... on ExternalPartner {\n            id\n          }\n        }\n        __typename\n      }\n      cursor\n    }\n  }\n}\n",
   "0017c446e560a44ffaa61810564a6e41": "query QueryRenderersCitySavedListQuery(\n  $citySlug: String!\n) {\n  ...CitySavedList_viewer\n}\n\nfragment CitySavedList_viewer on Query {\n  city(slug: $citySlug) {\n    name\n  }\n  me {\n    followsAndSaves {\n      shows: showsConnection(first: 20, status: RUNNING_AND_UPCOMING, city: $citySlug, after: \"\") {\n        edges {\n          node {\n            slug\n            internalID\n            id\n            name\n            isStubShow\n            status\n            href\n            is_followed: isFollowed\n            exhibition_period: exhibitionPeriod\n            cover_image: coverImage {\n              url\n            }\n            location {\n              coordinates {\n                lat\n                lng\n              }\n              id\n            }\n            type\n            start_at: startAt\n            end_at: endAt\n            partner {\n              __typename\n              ... on Partner {\n                name\n                type\n                profile {\n                  image {\n                    url(version: \"square\")\n                  }\n                  id\n                }\n              }\n              ... on Node {\n                id\n              }\n              ... on ExternalPartner {\n                id\n              }\n            }\n            __typename\n          }\n          cursor\n        }\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n      }\n    }\n    id\n  }\n}\n",
   "7666b9950428a8696037134e848d383d": "query QueryRenderersCityFairListQuery(\n  $citySlug: String!\n) {\n  city(slug: $citySlug) {\n    ...CityFairList_city\n  }\n}\n\nfragment CityFairList_city on City {\n  slug\n  fairs: fairsConnection(first: 20, after: \"\", status: CURRENT, sort: START_AT_ASC) {\n    edges {\n      node {\n        internalID\n        name\n        exhibition_period: exhibitionPeriod\n        counts {\n          partners\n        }\n        location {\n          coordinates {\n            lat\n            lng\n          }\n          id\n        }\n        image {\n          image_url: imageURL\n          aspect_ratio: aspectRatio\n          url\n        }\n        profile {\n          icon {\n            internalID\n            href\n            height\n            width\n            url(version: \"square140\")\n          }\n          id\n          slug\n          name\n        }\n        start_at: startAt\n        end_at: endAt\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n",
   "154ce9c7c4d8db71cd98361081b6bc14": "query QueryRenderersCityBMWListQuery(\n  $citySlug: String!\n) {\n  city(slug: $citySlug) {\n    ...CityBMWList_city\n  }\n}\n\nfragment CityBMWList_city on City {\n  name\n  slug\n  sponsoredContent {\n    shows: showsConnection(first: 20, status: RUNNING, after: \"\", sort: PARTNER_ASC) {\n      edges {\n        node {\n          slug\n          internalID\n          id\n          name\n          status\n          href\n          is_followed: isFollowed\n          isStubShow\n          exhibition_period: exhibitionPeriod\n          cover_image: coverImage {\n            url\n          }\n          location {\n            coordinates {\n              lat\n              lng\n            }\n            id\n          }\n          type\n          start_at: startAt\n          end_at: endAt\n          partner {\n            __typename\n            ... on Partner {\n              name\n              type\n              profile {\n                image {\n                  url(version: \"square\")\n                }\n                id\n              }\n            }\n            ... on Node {\n              id\n            }\n            ... on ExternalPartner {\n              id\n            }\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n",
-  "fa9dd716401affd874bb8bec3f186ffb": "query QueryRenderersShowQuery(\n  $showID: String!\n) {\n  show(id: $showID) {\n    ...Show_show\n    id\n  }\n}\n\nfragment Show_show on Show {\n  ...Detail_show\n}\n\nfragment Detail_show on Show {\n  internalID\n  slug\n  name\n  description\n  city\n  isStubShow\n  images {\n    internalID\n  }\n  ...ShowHeader_show\n  ...ShowArtworksPreview_show\n  ...ShowArtistsPreview_show\n  ...Shows_show\n  location {\n    ...LocationMap_location\n    openingHours {\n      __typename\n      ... on OpeningHoursArray {\n        schedules {\n          days\n          hours\n        }\n      }\n      ... on OpeningHoursText {\n        text\n      }\n    }\n    id\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    slug\n    id\n  }\n  counts {\n    artworks\n    artists\n  }\n  status\n  partner {\n    __typename\n    ... on Partner {\n      name\n      type\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ShowHeader_show on Show {\n  slug\n  internalID\n  id\n  name\n  press_release: pressRelease\n  is_followed: isFollowed\n  end_at: endAt\n  exhibition_period: exhibitionPeriod\n  status\n  isStubShow\n  partner {\n    __typename\n    ... on Partner {\n      name\n      slug\n      href\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  images {\n    url\n    aspect_ratio: aspectRatio\n  }\n  followedArtists: followedArtistsConnection(first: 3) {\n    edges {\n      node {\n        artist {\n          name\n          href\n          slug\n          internalID\n          id\n        }\n      }\n    }\n  }\n  artists {\n    name\n    href\n    slug\n    internalID\n    id\n  }\n}\n\nfragment ShowArtworksPreview_show on Show {\n  id\n  counts {\n    artworks\n  }\n  artworks: artworksConnection(first: 6) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment ShowArtistsPreview_show on Show {\n  internalID\n  slug\n  artists {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n}\n\nfragment Shows_show on Show {\n  nearbyShows: nearbyShowsConnection(first: 20) {\n    edges {\n      node {\n        id\n        ...ShowItem_show\n      }\n    }\n  }\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment ShowItem_show on Show {\n  internalID\n  slug\n  name\n  exhibition_period: exhibitionPeriod\n  end_at: endAt\n  images {\n    url\n    aspect_ratio: aspectRatio\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "57ee6236b4901300f0ee6bc5b63ef1a1": "query QueryRenderersFairQuery(\n  $fairID: String!\n) {\n  fair(id: $fairID) {\n    ...Fair_fair\n    id\n  }\n}\n\nfragment Fair_fair on Fair {\n  id\n  slug\n  ...FairDetail_fair\n  organizer {\n    website\n    id\n  }\n  about\n  ticketsLink\n}\n\nfragment FairDetail_fair on Fair {\n  ...FairHeader_fair\n  slug\n  internalID\n  name\n  hours\n  isActive\n  location {\n    ...LocationMap_location\n    coordinates {\n      lat\n      lng\n    }\n    id\n  }\n  organizer {\n    website\n    id\n  }\n  about\n  ticketsLink\n  profile {\n    name\n    id\n  }\n  sponsoredContent {\n    activationText\n    pressReleaseUrl\n  }\n  shows: showsConnection(first: 5) {\n    pageInfo {\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        slug\n        internalID\n        artworks: artworksConnection(first: 4) {\n          edges {\n            node {\n              slug\n              id\n            }\n          }\n        }\n        ...FairBoothPreview_show\n        id\n        __typename\n      }\n    }\n  }\n}\n\nfragment FairHeader_fair on Fair {\n  slug\n  internalID\n  name\n  formattedOpeningHours\n  counts {\n    artists\n    partners\n  }\n  followed_content: followedContent {\n    artists {\n      name\n      href\n      slug\n      internalID\n      id\n    }\n    galleries {\n      internalID\n      name\n      id\n    }\n  }\n  partner_names: showsConnection(first: 2) {\n    edges {\n      node {\n        slug\n        partner {\n          __typename\n          ... on Partner {\n            profile {\n              name\n              slug\n              internalID\n              id\n            }\n          }\n          ... on Node {\n            id\n          }\n          ... on ExternalPartner {\n            id\n          }\n        }\n        id\n      }\n    }\n  }\n  artists_names: artistsConnection(first: 3) {\n    edges {\n      node {\n        name\n        href\n        slug\n        internalID\n        id\n      }\n    }\n  }\n  image {\n    image_url: imageURL\n    aspect_ratio: aspectRatio\n    url\n  }\n  profile {\n    icon {\n      internalID\n      href\n      height\n      width\n      url(version: \"square140\")\n    }\n    id\n    slug\n    name\n    is_followed: isFollowed\n  }\n  start_at: startAt\n  end_at: endAt\n  exhibition_period: exhibitionPeriod\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment FairBoothPreview_show on Show {\n  slug\n  internalID\n  name\n  is_fair_booth: isFairBooth\n  counts {\n    artworks\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      href\n      slug\n      internalID\n      id\n      profile {\n        internalID\n        is_followed: isFollowed\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  fair {\n    name\n    id\n  }\n  cover_image: coverImage {\n    url\n  }\n  location {\n    display\n    id\n  }\n  artworks: artworksConnection(first: 4) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "8ed72db052cdb49a3f8fbc74df3fcb33": "query QueryRenderersCollectionQuery(\n  $collectionID: String!\n) {\n  collection: marketingCollection(slug: $collectionID) {\n    ...Collection_collection\n  }\n}\n\nfragment Collection_collection on MarketingCollection {\n  slug\n  title\n  description\n  headerImage\n  category\n  credit\n  ...CollectionHeader_collection\n}\n\nfragment CollectionHeader_collection on MarketingCollection {\n  slug\n  title\n  description\n  headerImage\n  category\n  credit\n}\n",
+  "ea21177513a76534df734d1651dae71b": "query QueryRenderersShowQuery(\n  $showID: String!\n) {\n  show(id: $showID) {\n    ...Show_show\n    id\n  }\n}\n\nfragment Show_show on Show {\n  ...Detail_show\n}\n\nfragment Detail_show on Show {\n  internalID\n  slug\n  description\n  ...ShowHeader_show\n  ...ShowArtworksPreview_show\n  ...ShowArtistsPreview_show\n  ...Shows_show\n  location {\n    ...LocationMap_location\n    openingHours {\n      __typename\n      ... on OpeningHoursArray {\n        schedules {\n          days\n          hours\n        }\n      }\n      ... on OpeningHoursText {\n        text\n      }\n    }\n    id\n  }\n  artistsWithoutArtworks {\n    slug\n    id\n  }\n  counts {\n    artworks\n    artists\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      type\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ShowHeader_show on Show {\n  slug\n  internalID\n  id\n  name\n  is_followed: isFollowed\n  end_at: endAt\n  exhibition_period: exhibitionPeriod\n  isStubShow\n  partner {\n    __typename\n    ... on Partner {\n      name\n      slug\n      href\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  images {\n    url\n    aspect_ratio: aspectRatio\n  }\n  followedArtists: followedArtistsConnection(first: 3) {\n    edges {\n      node {\n        artist {\n          name\n          href\n          slug\n          internalID\n          id\n        }\n      }\n    }\n  }\n  artists {\n    name\n    href\n    slug\n    internalID\n    id\n  }\n}\n\nfragment ShowArtworksPreview_show on Show {\n  id\n  counts {\n    artworks\n  }\n  artworks: artworksConnection(first: 6) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment ShowArtistsPreview_show on Show {\n  internalID\n  slug\n  artists {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n}\n\nfragment Shows_show on Show {\n  nearbyShows: nearbyShowsConnection(first: 20) {\n    edges {\n      node {\n        id\n        ...ShowItem_show\n      }\n    }\n  }\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment ShowItem_show on Show {\n  internalID\n  slug\n  name\n  exhibition_period: exhibitionPeriod\n  end_at: endAt\n  images {\n    url\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "a5c28274df0901326eba513530cda030": "query QueryRenderersFairQuery(\n  $fairID: String!\n) {\n  fair(id: $fairID) {\n    ...Fair_fair\n    id\n  }\n}\n\nfragment Fair_fair on Fair {\n  id\n  ...FairDetail_fair\n}\n\nfragment FairDetail_fair on Fair {\n  ...FairHeader_fair\n  slug\n  internalID\n  name\n  hours\n  isActive\n  location {\n    ...LocationMap_location\n    coordinates {\n      lat\n      lng\n    }\n    id\n  }\n  organizer {\n    website\n    id\n  }\n  profile {\n    name\n    id\n  }\n  sponsoredContent {\n    pressReleaseUrl\n    activationText\n  }\n  shows: showsConnection(first: 5) {\n    pageInfo {\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        artworks: artworksConnection(first: 4) {\n          edges {\n            node {\n              slug\n              id\n            }\n          }\n        }\n        ...FairBoothPreview_show\n        id\n        __typename\n      }\n    }\n  }\n}\n\nfragment FairHeader_fair on Fair {\n  slug\n  name\n  formattedOpeningHours\n  startAt\n  endAt\n  exhibitionPeriod\n  counts {\n    artists\n  }\n  image {\n    url\n  }\n  followedContent {\n    artists {\n      name\n      href\n      slug\n      internalID\n      id\n    }\n  }\n  artistsConnection(first: 3) {\n    edges {\n      node {\n        name\n        href\n        slug\n        internalID\n        id\n      }\n    }\n  }\n  profile {\n    id\n    icon {\n      url(version: \"square140\")\n    }\n  }\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment FairBoothPreview_show on Show {\n  slug\n  internalID\n  counts {\n    artworks\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      href\n      slug\n      internalID\n      id\n      profile {\n        id\n        slug\n        internalID\n        isFollowed\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  coverImage {\n    url\n  }\n  location {\n    display\n    id\n  }\n  artworks: artworksConnection(first: 4) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "18fe2187f5a732516ea47696a1ef21df": "query QueryRenderersCollectionQuery(\n  $collectionID: String!\n) {\n  collection: marketingCollection(slug: $collectionID) {\n    ...Collection_collection\n  }\n}\n\nfragment Collection_collection on MarketingCollection {\n  ...CollectionHeader_collection\n}\n\nfragment CollectionHeader_collection on MarketingCollection {\n  title\n  description\n}\n",
   "82ce08bed0f640d2f4d4c84e4a50e012": "query QueryRenderersMyProfileQuery {\n  me {\n    ...MyProfile_me\n    id\n  }\n}\n\nfragment MyProfile_me on Me {\n  name\n  initials\n}\n",
-  "6ac07550f58c7a8a2c827a60ebf10545": "query QueryRenderersInboxQuery {\n  me {\n    ...Inbox_me\n    id\n  }\n}\n\nfragment Inbox_me on Me {\n  lot_standings: lotStandings(live: true) {\n    most_recent_bid: mostRecentBid {\n      id\n    }\n  }\n  conversations_existence_check: conversationsConnection(first: 1) {\n    edges {\n      node {\n        internalID\n        id\n      }\n    }\n  }\n  ...Conversations_me\n  ...ActiveBids_me\n}\n\nfragment Conversations_me on Me {\n  conversations: conversationsConnection(first: 10, after: \"\") {\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    edges {\n      node {\n        internalID\n        last_message: lastMessage\n        ...ConversationSnippet_conversation\n        id\n        __typename\n      }\n      cursor\n    }\n  }\n}\n\nfragment ActiveBids_me on Me {\n  lot_standings: lotStandings(live: true) {\n    most_recent_bid: mostRecentBid {\n      id\n    }\n    ...ActiveBid_bid\n  }\n}\n\nfragment ActiveBid_bid on LotStanding {\n  is_leading_bidder: isLeadingBidder\n  sale {\n    href\n    is_live_open: isLiveOpen\n    id\n  }\n  most_recent_bid: mostRecentBid {\n    id\n    max_bid: maxBid {\n      display\n    }\n    sale_artwork: saleArtwork {\n      artwork {\n        href\n        image {\n          url\n        }\n        artist_names: artistNames\n        id\n      }\n      counts {\n        bidder_positions: bidderPositions\n      }\n      highest_bid: highestBid {\n        display\n      }\n      lot_label: lotLabel\n      reserve_status: reserveStatus\n      id\n    }\n  }\n}\n\nfragment ConversationSnippet_conversation on Conversation {\n  internalID\n  to {\n    name\n    id\n  }\n  last_message: lastMessage\n  last_message_at: lastMessageAt\n  unread\n  items {\n    item {\n      __typename\n      ... on Artwork {\n        date\n        title\n        artist_names: artistNames\n        image {\n          url\n        }\n      }\n      ... on Show {\n        fair {\n          name\n          id\n        }\n        name\n        cover_image: coverImage {\n          url\n        }\n      }\n      ... on Node {\n        id\n      }\n    }\n  }\n}\n",
+  "6218c716f78e0e6159caac8e0906f62d": "query QueryRenderersInboxQuery {\n  me {\n    ...Inbox_me\n    id\n  }\n}\n\nfragment Inbox_me on Me {\n  lot_standings: lotStandings(live: true) {\n    most_recent_bid: mostRecentBid {\n      id\n    }\n  }\n  conversations_existence_check: conversationsConnection(first: 1) {\n    edges {\n      node {\n        internalID\n        id\n      }\n    }\n  }\n  ...Conversations_me\n  ...ActiveBids_me\n}\n\nfragment Conversations_me on Me {\n  conversations: conversationsConnection(first: 10, after: \"\") {\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    edges {\n      node {\n        internalID\n        last_message: lastMessage\n        ...ConversationSnippet_conversation\n        id\n        __typename\n      }\n      cursor\n    }\n  }\n}\n\nfragment ActiveBids_me on Me {\n  lot_standings: lotStandings(live: true) {\n    most_recent_bid: mostRecentBid {\n      id\n    }\n    ...ActiveBid_bid\n  }\n}\n\nfragment ActiveBid_bid on LotStanding {\n  is_leading_bidder: isLeadingBidder\n  sale {\n    href\n    is_live_open: isLiveOpen\n    id\n  }\n  most_recent_bid: mostRecentBid {\n    id\n    sale_artwork: saleArtwork {\n      artwork {\n        href\n        image {\n          url\n        }\n        artist_names: artistNames\n        id\n      }\n      counts {\n        bidder_positions: bidderPositions\n      }\n      highest_bid: highestBid {\n        display\n      }\n      lot_label: lotLabel\n      reserve_status: reserveStatus\n      id\n    }\n  }\n}\n\nfragment ConversationSnippet_conversation on Conversation {\n  internalID\n  to {\n    name\n    id\n  }\n  lastMessage\n  lastMessageAt\n  unread\n  items {\n    item {\n      __typename\n      ... on Artwork {\n        date\n        title\n        artistNames\n        image {\n          url\n        }\n      }\n      ... on Show {\n        fair {\n          name\n          id\n        }\n        name\n        coverImage {\n          url\n        }\n      }\n      ... on Node {\n        id\n      }\n    }\n  }\n}\n",
   "3007a6190dbcdcedd305cda5048bdf59": "query QueryRenderersInquiryQuery(\n  $artworkID: String!\n) {\n  artwork(id: $artworkID) {\n    ...Inquiry_artwork\n    id\n  }\n}\n\nfragment Inquiry_artwork on Artwork {\n  slug\n  internalID\n  contact_message: contactMessage\n  partner {\n    name\n    id\n  }\n  ...ArtworkPreview_artwork\n}\n\nfragment ArtworkPreview_artwork on Artwork {\n  slug\n  internalID\n  title\n  artist_names: artistNames\n  date\n  image {\n    url\n  }\n}\n",
-  "0760d786a02e77be8a94f7090d526067": "query QueryRenderersWorksForYouQuery(\n  $selectedArtist: String!\n) {\n  ...WorksForYou_query_2hRnfI\n}\n\nfragment WorksForYou_query_2hRnfI on Query {\n  me {\n    followsAndSaves {\n      notifications: bundledArtworksByArtistConnection(sort: PUBLISHED_AT_DESC, first: 10) {\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        edges {\n          node {\n            id\n            ...Notification_notification\n            __typename\n          }\n          cursor\n        }\n      }\n    }\n    id\n  }\n  selectedArtist: artist(id: $selectedArtist) {\n    slug\n    href\n    name\n    image {\n      resized(height: 80, width: 80) {\n        url\n      }\n    }\n    artworks: artworksConnection(sort: PUBLISHED_AT_DESC, first: 6) {\n      edges {\n        node {\n          ...GenericGrid_artworks\n          id\n        }\n      }\n    }\n    id\n  }\n}\n\nfragment Notification_notification on FollowedArtistsArtworksGroup {\n  summary\n  artists\n  artworks: artworksConnection(first: 10) {\n    edges {\n      node {\n        artists(shallow: true) {\n          href\n          id\n        }\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n  image {\n    resized(height: 80, width: 80) {\n      url\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "b3b0be912fa7b057f6e7b69c4d7a24f8": "query QueryRenderersGeneQuery(\n  $geneID: String!\n  $medium: String\n  $price_range: String\n) {\n  gene(id: $geneID) {\n    ...Gene_gene_3zv0k0\n    id\n  }\n}\n\nfragment Gene_gene_3zv0k0 on Gene {\n  id\n  internalID\n  ...Header_gene\n  ...About_gene\n  artworks: filterArtworksConnection(first: 10, after: \"\", medium: $medium, priceRange: $price_range, sort: \"-partner_updated_at\", aggregations: [MEDIUM, PRICE_RANGE, TOTAL], forSale: true) {\n    counts {\n      total\n    }\n    aggregations {\n      slice\n      counts {\n        value\n        name\n        count\n      }\n    }\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    id\n  }\n}\n\nfragment Header_gene on Gene {\n  internalID\n  slug\n  id\n  isFollowed\n  name\n}\n\nfragment About_gene on Gene {\n  ...Biography_gene\n  trending_artists: trendingArtists {\n    ...RelatedArtists_artists\n    id\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n\nfragment Biography_gene on Gene {\n  description\n}\n\nfragment RelatedArtists_artists on Artist {\n  id\n  ...RelatedArtist_artist\n}\n\nfragment RelatedArtist_artist on Artist {\n  href\n  name\n  counts {\n    for_sale_artworks: forSaleArtworks\n    artworks\n  }\n  image {\n    url(version: \"large\")\n  }\n}\n",
-  "d08d7ec3c246ed80ed2af98505d8e3a3": "query QueryRenderersForYouQuery {\n  forYou: homePage {\n    ...ForYou_forYou\n  }\n}\n\nfragment ForYou_forYou on HomePage {\n  artwork_modules: artworkModules(maxRails: -1, maxFollowedGeneRails: -1, order: [ACTIVE_BIDS, RECENTLY_VIEWED_WORKS, RECOMMENDED_WORKS, FOLLOWED_ARTISTS, RELATED_ARTISTS, FOLLOWED_GALLERIES, SAVED_WORKS, LIVE_AUCTIONS, CURRENT_FAIRS, FOLLOWED_GENES, GENERIC_GENES], exclude: [FOLLOWED_ARTISTS]) {\n    id\n    ...ArtworkCarousel_rail\n  }\n  artist_modules: artistModules {\n    id\n    ...ArtistRail_rail\n  }\n  fairs_module: fairsModule {\n    ...FairsRail_fairs_module\n  }\n}\n\nfragment ArtworkCarousel_rail on HomePageArtworkModule {\n  ...ArtworkCarouselHeader_rail\n  id\n  key\n  params {\n    medium\n    price_range: priceRange\n  }\n  context {\n    __typename\n    ... on HomePageFollowedArtistArtworkModule {\n      artist {\n        href\n        id\n      }\n    }\n    ... on HomePageRelatedArtistArtworkModule {\n      artist {\n        href\n        id\n      }\n    }\n    ... on Fair {\n      href\n      id\n    }\n    ... on Gene {\n      href\n    }\n    ... on Sale {\n      href\n    }\n    ... on Node {\n      id\n    }\n  }\n  results {\n    ...GenericGrid_artworks\n    id\n  }\n}\n\nfragment ArtistRail_rail on HomePageArtistModule {\n  id\n  key\n  results {\n    id\n    internalID\n    ...ArtistCard_artist\n  }\n}\n\nfragment FairsRail_fairs_module on HomePageFairsModule {\n  results {\n    id\n    slug\n    name\n    profile {\n      slug\n      id\n    }\n    mobile_image: mobileImage {\n      internalID\n      url\n    }\n  }\n}\n\nfragment ArtistCard_artist on Artist {\n  id\n  slug\n  internalID\n  href\n  name\n  formattedArtworksCount\n  formattedNationalityAndBirthday\n  image {\n    url(version: \"large\")\n  }\n}\n\nfragment ArtworkCarouselHeader_rail on HomePageArtworkModule {\n  title\n  key\n  followedArtistContext: context {\n    __typename\n    ... on HomePageFollowedArtistArtworkModule {\n      artist {\n        internalID\n        slug\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on Fair {\n      id\n    }\n  }\n  relatedArtistContext: context {\n    __typename\n    ... on HomePageRelatedArtistArtworkModule {\n      artist {\n        internalID\n        slug\n        id\n      }\n      based_on: basedOn {\n        name\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on Fair {\n      id\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "9e09d2bf9687286cc5ff5190b834359d": "query QueryRenderersConversationQuery(\n  $conversationID: String!\n) {\n  me {\n    ...Conversation_me\n    id\n  }\n}\n\nfragment Conversation_me on Me {\n  conversation(id: $conversationID) {\n    internalID\n    id\n    to {\n      name\n      initials\n      id\n    }\n    from {\n      email\n      id\n    }\n    last_message_id: lastMessageID\n    ...Messages_conversation\n    initial_message: initialMessage\n    unread\n  }\n}\n\nfragment Messages_conversation on Conversation {\n  id\n  internalID\n  from {\n    name\n    email\n    initials\n    id\n  }\n  to {\n    name\n    initials\n    id\n  }\n  initial_message: initialMessage\n  messages(first: 10, sort: DESC) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasPreviousPage\n      hasNextPage\n    }\n    edges {\n      cursor\n      node {\n        id\n        impulse_id: impulseID\n        is_from_user: isFromUser\n        body\n        attachments {\n          internalID\n          id\n        }\n        ...Message_message\n        __typename\n      }\n    }\n  }\n  items {\n    artwork: item {\n      __typename\n      ... on Artwork {\n        href\n        ...ArtworkPreview_artwork\n      }\n      ... on Node {\n        id\n      }\n    }\n    show: item {\n      __typename\n      ... on Show {\n        href\n        ...ShowPreview_show\n      }\n      ... on Node {\n        id\n      }\n    }\n  }\n}\n\nfragment Message_message on Message {\n  body\n  created_at: createdAt\n  is_from_user: isFromUser\n  from {\n    name\n    email\n  }\n  invoice {\n    payment_url: paymentURL\n    ...InvoicePreview_invoice\n    id\n  }\n  attachments {\n    id\n    internalID\n    content_type: contentType\n    download_url: downloadURL\n    file_name: fileName\n    ...ImagePreview_attachment\n    ...PDFPreview_attachment\n  }\n}\n\nfragment ArtworkPreview_artwork on Artwork {\n  slug\n  internalID\n  title\n  artist_names: artistNames\n  date\n  image {\n    url\n  }\n}\n\nfragment ShowPreview_show on Show {\n  slug\n  internalID\n  name\n  cover_image: coverImage {\n    url\n  }\n  fair {\n    name\n    id\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment InvoicePreview_invoice on Invoice {\n  payment_url: paymentURL\n  state\n  total\n  lewitt_invoice_id: lewittInvoiceID\n}\n\nfragment ImagePreview_attachment on Attachment {\n  download_url: downloadURL\n  ...AttachmentPreview_attachment\n}\n\nfragment PDFPreview_attachment on Attachment {\n  file_name: fileName\n  ...AttachmentPreview_attachment\n}\n\nfragment AttachmentPreview_attachment on Attachment {\n  internalID\n}\n",
-  "b15d66d6742139d778366cabf951be30": "query QueryRenderersBidFlowQuery(\n  $artworkID: String!\n  $saleID: String!\n) {\n  artwork(id: $artworkID) {\n    sale_artwork: saleArtwork(saleID: $saleID) {\n      ...BidFlow_sale_artwork\n      id\n    }\n    id\n  }\n  me {\n    ...BidFlow_me\n    id\n  }\n}\n\nfragment BidFlow_sale_artwork on SaleArtwork {\n  ...SelectMaxBid_sale_artwork\n}\n\nfragment BidFlow_me on Me {\n  ...SelectMaxBid_me\n}\n\nfragment SelectMaxBid_me on Me {\n  ...ConfirmBid_me\n}\n\nfragment ConfirmBid_me on Me {\n  has_qualified_credit_cards: hasQualifiedCreditCards\n  bidders(saleID: $saleID) {\n    qualified_for_bidding: qualifiedForBidding\n    id\n  }\n}\n\nfragment SelectMaxBid_sale_artwork on SaleArtwork {\n  id\n  increments(useMyMaxBid: true) {\n    display\n    cents\n  }\n  ...ConfirmBid_sale_artwork\n}\n\nfragment ConfirmBid_sale_artwork on SaleArtwork {\n  internalID\n  sale {\n    slug\n    live_start_at: liveStartAt\n    end_at: endAt\n    id\n  }\n  artwork {\n    slug\n    title\n    date\n    artist_names: artistNames\n    image {\n      url(version: \"small\")\n    }\n    id\n  }\n  lot_label: lotLabel\n  ...BidResult_sale_artwork\n}\n\nfragment BidResult_sale_artwork on SaleArtwork {\n  minimum_next_bid: minimumNextBid {\n    amount\n    cents\n    display\n  }\n  sale {\n    live_start_at: liveStartAt\n    end_at: endAt\n    slug\n    id\n  }\n}\n",
+  "53627c5acf2d8fe8e5b9f8887a9a7333": "query QueryRenderersWorksForYouQuery(\n  $selectedArtist: String!\n) {\n  ...WorksForYou_query_2hRnfI\n}\n\nfragment WorksForYou_query_2hRnfI on Query {\n  me {\n    followsAndSaves {\n      notifications: bundledArtworksByArtistConnection(sort: PUBLISHED_AT_DESC, first: 10) {\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        edges {\n          node {\n            id\n            ...Notification_notification\n            __typename\n          }\n          cursor\n        }\n      }\n    }\n    id\n  }\n  selectedArtist: artist(id: $selectedArtist) {\n    slug\n    href\n    name\n    image {\n      resized(height: 80, width: 80) {\n        url\n      }\n    }\n    artworks: artworksConnection(sort: PUBLISHED_AT_DESC, first: 6) {\n      edges {\n        node {\n          ...GenericGrid_artworks\n          id\n        }\n      }\n    }\n    id\n  }\n}\n\nfragment Notification_notification on FollowedArtistsArtworksGroup {\n  summary\n  artists\n  artworks: artworksConnection(first: 10) {\n    edges {\n      node {\n        artists(shallow: true) {\n          href\n          id\n        }\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n  image {\n    resized(height: 80, width: 80) {\n      url\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "581e58af4d1688ca76314b374515b96d": "query QueryRenderersGeneQuery(\n  $geneID: String!\n  $medium: String\n  $price_range: String\n) {\n  gene(id: $geneID) {\n    ...Gene_gene_3zv0k0\n    id\n  }\n}\n\nfragment Gene_gene_3zv0k0 on Gene {\n  id\n  internalID\n  ...Header_gene\n  ...About_gene\n  artworks: filterArtworksConnection(first: 10, after: \"\", medium: $medium, priceRange: $price_range, sort: \"-partner_updated_at\", aggregations: [MEDIUM, PRICE_RANGE, TOTAL], forSale: true) {\n    counts {\n      total\n    }\n    aggregations {\n      slice\n      counts {\n        value\n        name\n        count\n      }\n    }\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    id\n  }\n}\n\nfragment Header_gene on Gene {\n  internalID\n  slug\n  id\n  isFollowed\n  name\n}\n\nfragment About_gene on Gene {\n  ...Biography_gene\n  trending_artists: trendingArtists {\n    ...RelatedArtists_artists\n    id\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n\nfragment Biography_gene on Gene {\n  description\n}\n\nfragment RelatedArtists_artists on Artist {\n  id\n  ...RelatedArtist_artist\n}\n\nfragment RelatedArtist_artist on Artist {\n  href\n  name\n  counts {\n    forSaleArtworks\n    artworks\n  }\n  image {\n    url(version: \"large\")\n  }\n}\n",
+  "7744da3dcf9f8162717c9e8e1a4189f7": "query QueryRenderersForYouQuery {\n  forYou: homePage {\n    ...ForYou_forYou\n  }\n}\n\nfragment ForYou_forYou on HomePage {\n  artwork_modules: artworkModules(maxRails: -1, maxFollowedGeneRails: -1, order: [ACTIVE_BIDS, RECENTLY_VIEWED_WORKS, RECOMMENDED_WORKS, FOLLOWED_ARTISTS, RELATED_ARTISTS, FOLLOWED_GALLERIES, SAVED_WORKS, LIVE_AUCTIONS, CURRENT_FAIRS, FOLLOWED_GENES, GENERIC_GENES], exclude: [FOLLOWED_ARTISTS]) {\n    id\n    ...ArtworkCarousel_rail\n  }\n  artist_modules: artistModules {\n    id\n    ...ArtistRail_rail\n  }\n  fairs_module: fairsModule {\n    ...FairsRail_fairs_module\n  }\n}\n\nfragment ArtworkCarousel_rail on HomePageArtworkModule {\n  ...ArtworkCarouselHeader_rail\n  id\n  key\n  params {\n    medium\n    price_range: priceRange\n  }\n  context {\n    __typename\n    ... on HomePageFollowedArtistArtworkModule {\n      artist {\n        href\n        id\n      }\n    }\n    ... on HomePageRelatedArtistArtworkModule {\n      artist {\n        href\n        id\n      }\n    }\n    ... on Fair {\n      href\n      id\n    }\n    ... on Gene {\n      href\n    }\n    ... on Sale {\n      href\n    }\n    ... on Node {\n      id\n    }\n  }\n  results {\n    ...GenericGrid_artworks\n    id\n  }\n}\n\nfragment ArtistRail_rail on HomePageArtistModule {\n  id\n  key\n  results {\n    id\n    internalID\n    ...ArtistCard_artist\n  }\n}\n\nfragment FairsRail_fairs_module on HomePageFairsModule {\n  results {\n    id\n    slug\n    profile {\n      slug\n      id\n    }\n    mobileImage {\n      url\n    }\n  }\n}\n\nfragment ArtistCard_artist on Artist {\n  id\n  slug\n  internalID\n  href\n  name\n  formattedArtworksCount\n  formattedNationalityAndBirthday\n  image {\n    url(version: \"large\")\n  }\n}\n\nfragment ArtworkCarouselHeader_rail on HomePageArtworkModule {\n  title\n  key\n  followedArtistContext: context {\n    __typename\n    ... on HomePageFollowedArtistArtworkModule {\n      artist {\n        internalID\n        slug\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on Fair {\n      id\n    }\n  }\n  relatedArtistContext: context {\n    __typename\n    ... on HomePageRelatedArtistArtworkModule {\n      artist {\n        internalID\n        slug\n        id\n      }\n      based_on: basedOn {\n        name\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on Fair {\n      id\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "da82499be4eb913b14a04bb2eed65582": "query QueryRenderersConversationQuery(\n  $conversationID: String!\n) {\n  me {\n    ...Conversation_me\n    id\n  }\n}\n\nfragment Conversation_me on Me {\n  conversation(id: $conversationID) {\n    internalID\n    id\n    lastMessageID\n    unread\n    to {\n      name\n      id\n    }\n    from {\n      email\n      id\n    }\n    ...Messages_conversation\n  }\n}\n\nfragment Messages_conversation on Conversation {\n  id\n  internalID\n  from {\n    name\n    email\n    initials\n    id\n  }\n  to {\n    name\n    initials\n    id\n  }\n  initial_message: initialMessage\n  messages(first: 10, sort: DESC) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasPreviousPage\n      hasNextPage\n    }\n    edges {\n      cursor\n      node {\n        id\n        impulse_id: impulseID\n        is_from_user: isFromUser\n        body\n        attachments {\n          internalID\n          id\n        }\n        ...Message_message\n        __typename\n      }\n    }\n  }\n  items {\n    artwork: item {\n      __typename\n      ... on Artwork {\n        href\n        ...ArtworkPreview_artwork\n      }\n      ... on Node {\n        id\n      }\n    }\n    show: item {\n      __typename\n      ... on Show {\n        href\n        ...ShowPreview_show\n      }\n      ... on Node {\n        id\n      }\n    }\n  }\n}\n\nfragment Message_message on Message {\n  body\n  created_at: createdAt\n  is_from_user: isFromUser\n  from {\n    name\n    email\n  }\n  invoice {\n    payment_url: paymentURL\n    ...InvoicePreview_invoice\n    id\n  }\n  attachments {\n    id\n    internalID\n    content_type: contentType\n    download_url: downloadURL\n    file_name: fileName\n    ...ImagePreview_attachment\n    ...PDFPreview_attachment\n  }\n}\n\nfragment ArtworkPreview_artwork on Artwork {\n  slug\n  internalID\n  title\n  artist_names: artistNames\n  date\n  image {\n    url\n  }\n}\n\nfragment ShowPreview_show on Show {\n  slug\n  internalID\n  name\n  cover_image: coverImage {\n    url\n  }\n  fair {\n    name\n    id\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment InvoicePreview_invoice on Invoice {\n  payment_url: paymentURL\n  state\n  total\n  lewitt_invoice_id: lewittInvoiceID\n}\n\nfragment ImagePreview_attachment on Attachment {\n  download_url: downloadURL\n  ...AttachmentPreview_attachment\n}\n\nfragment PDFPreview_attachment on Attachment {\n  file_name: fileName\n  ...AttachmentPreview_attachment\n}\n\nfragment AttachmentPreview_attachment on Attachment {\n  internalID\n}\n",
+  "224761847ef5f0359658f2a2b49e5b82": "query QueryRenderersBidFlowQuery(\n  $artworkID: String!\n  $saleID: String!\n) {\n  artwork(id: $artworkID) {\n    sale_artwork: saleArtwork(saleID: $saleID) {\n      ...BidFlow_sale_artwork\n      id\n    }\n    id\n  }\n  me {\n    ...BidFlow_me\n    id\n  }\n}\n\nfragment BidFlow_sale_artwork on SaleArtwork {\n  ...SelectMaxBid_sale_artwork\n}\n\nfragment BidFlow_me on Me {\n  ...SelectMaxBid_me\n}\n\nfragment SelectMaxBid_me on Me {\n  ...ConfirmBid_me\n}\n\nfragment ConfirmBid_me on Me {\n  has_qualified_credit_cards: hasQualifiedCreditCards\n  bidders(saleID: $saleID) {\n    id\n  }\n}\n\nfragment SelectMaxBid_sale_artwork on SaleArtwork {\n  id\n  increments(useMyMaxBid: true) {\n    display\n  }\n  ...ConfirmBid_sale_artwork\n}\n\nfragment ConfirmBid_sale_artwork on SaleArtwork {\n  internalID\n  sale {\n    slug\n    live_start_at: liveStartAt\n    end_at: endAt\n    id\n  }\n  artwork {\n    slug\n    title\n    date\n    artist_names: artistNames\n    image {\n      url(version: \"small\")\n    }\n    id\n  }\n  lot_label: lotLabel\n  ...BidResult_sale_artwork\n}\n\nfragment BidResult_sale_artwork on SaleArtwork {\n  sale {\n    liveStartAt\n    endAt\n    slug\n    id\n  }\n}\n",
   "2f122dcbf2ba168b4064dbda946e403c": "query QueryRenderersRegistrationFlowQuery(\n  $saleID: String!\n) {\n  sale(id: $saleID) {\n    name\n    ...RegistrationFlow_sale\n    id\n  }\n  me {\n    ...RegistrationFlow_me\n    id\n  }\n}\n\nfragment RegistrationFlow_sale on Sale {\n  ...Registration_sale\n}\n\nfragment RegistrationFlow_me on Me {\n  ...Registration_me\n}\n\nfragment Registration_me on Me {\n  has_credit_cards: hasCreditCards\n}\n\nfragment Registration_sale on Sale {\n  slug\n  end_at: endAt\n  is_preview: isPreview\n  live_start_at: liveStartAt\n  name\n  start_at: startAt\n}\n",
-  "83b53fcd8f01ee91b72538b2c2b85dbc": "query QueryRenderersArtistQuery(\n  $artistID: String!\n  $isPad: Boolean!\n) {\n  artist(id: $artistID) {\n    ...Artist_artist\n    id\n  }\n}\n\nfragment Artist_artist on Artist {\n  internalID\n  slug\n  has_metadata: hasMetadata\n  counts {\n    artworks\n    partner_shows: partnerShows\n    related_artists: relatedArtists\n    articles\n  }\n  ...Header_artist\n  ...About_artist\n  ...Shows_artist\n  ...Artworks_artist\n}\n\nfragment Header_artist on Artist {\n  id\n  internalID\n  slug\n  isFollowed\n  name\n  nationality\n  birthday\n  counts {\n    follows\n  }\n}\n\nfragment About_artist on Artist {\n  has_metadata: hasMetadata\n  is_display_auction_link: isDisplayAuctionLink\n  slug\n  ...Biography_artist\n  related {\n    artists: artistsConnection(first: 16) {\n      edges {\n        node {\n          ...RelatedArtists_artists\n          id\n        }\n      }\n    }\n  }\n  articles: articlesConnection(first: 10) {\n    edges {\n      node {\n        ...Articles_articles\n        id\n      }\n    }\n  }\n}\n\nfragment Shows_artist on Artist {\n  currentShows: showsConnection(status: \"running\", first: 10) {\n    edges {\n      node {\n        ...VariableSizeShowsList_shows\n        id\n      }\n    }\n  }\n  upcomingShows: showsConnection(status: \"upcoming\", first: 10) {\n    edges {\n      node {\n        ...VariableSizeShowsList_shows\n        id\n      }\n    }\n  }\n  pastSmallShows: showsConnection(status: \"closed\", first: 20) @skip(if: $isPad) {\n    edges {\n      node {\n        ...SmallList_shows\n        id\n      }\n    }\n  }\n  pastLargeShows: showsConnection(status: \"closed\", first: 20) @include(if: $isPad) {\n    edges {\n      node {\n        ...VariableSizeShowsList_shows\n        id\n      }\n    }\n  }\n}\n\nfragment Artworks_artist on Artist {\n  counts {\n    artworks\n    for_sale_artworks: forSaleArtworks\n  }\n  ...ArtistForSaleArtworksGrid_artist\n  ...ArtistNotForSaleArtworksGrid_artist\n}\n\nfragment ArtistForSaleArtworksGrid_artist on Artist {\n  id\n  forSaleArtworks: artworksConnection(first: 10, filter: [IS_FOR_SALE], sort: PARTNER_UPDATED_AT_DESC) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment ArtistNotForSaleArtworksGrid_artist on Artist {\n  id\n  notForSaleArtworks: artworksConnection(first: 10, filter: [IS_NOT_FOR_SALE], sort: PARTNER_UPDATED_AT_DESC) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n\nfragment VariableSizeShowsList_shows on Show {\n  id\n  ...ArtistShow_show\n}\n\nfragment SmallList_shows on Show {\n  ...ArtistShow_show\n}\n\nfragment ArtistShow_show on Show {\n  slug\n  href\n  is_fair_booth: isFairBooth\n  cover_image: coverImage {\n    url(version: \"large\")\n  }\n  ...Metadata_show\n}\n\nfragment Metadata_show on Show {\n  kind\n  name\n  exhibition_period: exhibitionPeriod\n  status_update: statusUpdate\n  status\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on ExternalPartner {\n      name\n      id\n    }\n    ... on Node {\n      id\n    }\n  }\n  location {\n    city\n    id\n  }\n}\n\nfragment Biography_artist on Artist {\n  bio\n  blurb\n}\n\nfragment RelatedArtists_artists on Artist {\n  id\n  ...RelatedArtist_artist\n}\n\nfragment Articles_articles on Article {\n  id\n  ...Article_article\n}\n\nfragment Article_article on Article {\n  thumbnail_title: thumbnailTitle\n  href\n  author {\n    name\n    id\n  }\n  thumbnail_image: thumbnailImage {\n    url(version: \"large\")\n  }\n}\n\nfragment RelatedArtist_artist on Artist {\n  href\n  name\n  counts {\n    for_sale_artworks: forSaleArtworks\n    artworks\n  }\n  image {\n    url(version: \"large\")\n  }\n}\n",
-  "97ecbd272f32e08e96c01515dd329505": "query FairExhibitorsQuery(\n  $fairID: String!\n) {\n  fair(id: $fairID) {\n    ...FairExhibitors_fair\n    id\n  }\n}\n\nfragment FairExhibitors_fair on Fair {\n  slug\n  internalID\n  exhibitors_grouped_by_name: exhibitorsGroupedByName {\n    letter\n    exhibitors {\n      name\n      slug\n      profile_id: profileID\n      partner_id: partnerID\n    }\n  }\n}\n",
+  "6a4a323ea2211b9b7873dcf15e2d68e3": "query QueryRenderersArtistQuery(\n  $artistID: String!\n  $isPad: Boolean!\n) {\n  artist(id: $artistID) {\n    ...Artist_artist\n    id\n  }\n}\n\nfragment Artist_artist on Artist {\n  internalID\n  slug\n  has_metadata: hasMetadata\n  counts {\n    artworks\n    partner_shows: partnerShows\n    related_artists: relatedArtists\n    articles\n  }\n  ...Header_artist\n  ...About_artist\n  ...Shows_artist\n  ...Artworks_artist\n}\n\nfragment Header_artist on Artist {\n  id\n  internalID\n  slug\n  isFollowed\n  name\n  nationality\n  birthday\n  counts {\n    follows\n  }\n}\n\nfragment About_artist on Artist {\n  has_metadata: hasMetadata\n  is_display_auction_link: isDisplayAuctionLink\n  slug\n  ...Biography_artist\n  related {\n    artists: artistsConnection(first: 16) {\n      edges {\n        node {\n          ...RelatedArtists_artists\n          id\n        }\n      }\n    }\n  }\n  articles: articlesConnection(first: 10) {\n    edges {\n      node {\n        ...Articles_articles\n        id\n      }\n    }\n  }\n}\n\nfragment Shows_artist on Artist {\n  currentShows: showsConnection(status: \"running\", first: 10) {\n    edges {\n      node {\n        ...VariableSizeShowsList_shows\n        id\n      }\n    }\n  }\n  upcomingShows: showsConnection(status: \"upcoming\", first: 10) {\n    edges {\n      node {\n        ...VariableSizeShowsList_shows\n        id\n      }\n    }\n  }\n  pastSmallShows: showsConnection(status: \"closed\", first: 20) @skip(if: $isPad) {\n    edges {\n      node {\n        ...SmallList_shows\n        id\n      }\n    }\n  }\n  pastLargeShows: showsConnection(status: \"closed\", first: 20) @include(if: $isPad) {\n    edges {\n      node {\n        ...VariableSizeShowsList_shows\n        id\n      }\n    }\n  }\n}\n\nfragment Artworks_artist on Artist {\n  counts {\n    artworks\n    for_sale_artworks: forSaleArtworks\n  }\n  ...ArtistForSaleArtworksGrid_artist\n  ...ArtistNotForSaleArtworksGrid_artist\n}\n\nfragment ArtistForSaleArtworksGrid_artist on Artist {\n  id\n  forSaleArtworks: artworksConnection(first: 10, filter: [IS_FOR_SALE], sort: PARTNER_UPDATED_AT_DESC) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment ArtistNotForSaleArtworksGrid_artist on Artist {\n  id\n  notForSaleArtworks: artworksConnection(first: 10, filter: [IS_NOT_FOR_SALE], sort: PARTNER_UPDATED_AT_DESC) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n\nfragment VariableSizeShowsList_shows on Show {\n  id\n  ...ArtistShow_show\n}\n\nfragment SmallList_shows on Show {\n  ...ArtistShow_show\n}\n\nfragment ArtistShow_show on Show {\n  slug\n  href\n  is_fair_booth: isFairBooth\n  cover_image: coverImage {\n    url(version: \"large\")\n  }\n  ...Metadata_show\n}\n\nfragment Metadata_show on Show {\n  kind\n  name\n  exhibition_period: exhibitionPeriod\n  status_update: statusUpdate\n  status\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on ExternalPartner {\n      name\n      id\n    }\n    ... on Node {\n      id\n    }\n  }\n  location {\n    city\n    id\n  }\n}\n\nfragment Biography_artist on Artist {\n  bio\n  blurb\n}\n\nfragment RelatedArtists_artists on Artist {\n  id\n  ...RelatedArtist_artist\n}\n\nfragment Articles_articles on Article {\n  id\n  ...Article_article\n}\n\nfragment Article_article on Article {\n  thumbnail_title: thumbnailTitle\n  href\n  author {\n    name\n    id\n  }\n  thumbnail_image: thumbnailImage {\n    url(version: \"large\")\n  }\n}\n\nfragment RelatedArtist_artist on Artist {\n  href\n  name\n  counts {\n    forSaleArtworks\n    artworks\n  }\n  image {\n    url(version: \"large\")\n  }\n}\n",
+  "6b058c78a40a534099b28f58ab79db64": "query FairExhibitorsQuery(\n  $fairID: String!\n) {\n  fair(id: $fairID) {\n    ...FairExhibitors_fair\n    id\n  }\n}\n\nfragment FairExhibitors_fair on Fair {\n  slug\n  internalID\n  exhibitorsGroupedByName {\n    letter\n    exhibitors {\n      name\n      slug\n      profileID\n      partnerID\n    }\n  }\n}\n",
   "f5acd6385f4c2064ac1b44f5f3530ddf": "query ArtistHeaderQuery(\n  $artistID: String!\n) {\n  artist(id: $artistID) {\n    ...Header_artist\n    id\n  }\n}\n\nfragment Header_artist on Artist {\n  id\n  internalID\n  slug\n  isFollowed\n  name\n  nationality\n  birthday\n  counts {\n    follows\n  }\n}\n",
   "2e4ea89cbe5286eb16a06f7f471945d8": "query ShowEventSectionTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    events {\n      ...ShowEventSection_event\n    }\n    id\n  }\n}\n\nfragment ShowEventSection_event on ShowEventType {\n  event_type: eventType\n  description\n  start_at: startAt\n  end_at: endAt\n}\n",
   "856318eea3bd6ca43b0e7b6e3c4b799c": "query ConsignmentsArtistQuery(\n  $query: String!\n) {\n  searchConnection(query: $query, first: 10, entities: [ARTIST], mode: AUTOSUGGEST) {\n    edges {\n      node {\n        __typename\n        ... on Artist {\n          internalID\n          name\n          image {\n            url\n          }\n        }\n        ... on Node {\n          id\n        }\n      }\n    }\n  }\n}\n",
-  "090c7f1bfb0cfe1e52990e3e331735e0": "query FairsQuery(\n  $count: Int!\n  $cursor: String\n) {\n  me {\n    ...Fairs_me_1G22uz\n    id\n  }\n}\n\nfragment Fairs_me_1G22uz on Me {\n  followsAndSaves {\n    fairs: fairsConnection(first: $count, after: $cursor) {\n      edges {\n        node {\n          id\n          profile {\n            slug\n            is_followed: isFollowed\n            id\n          }\n          exhibition_period: exhibitionPeriod\n          name\n          counts {\n            partners\n          }\n          href\n          image {\n            url\n          }\n          start_at: startAt\n          end_at: endAt\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n",
-  "264f7bdab64c1a3472de8bf33b0fd698": "query ShowArtworksPreviewTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    ...ShowArtworksPreview_show\n    id\n  }\n}\n\nfragment ShowArtworksPreview_show on Show {\n  id\n  counts {\n    artworks\n  }\n  artworks: artworksConnection(first: 6) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "ebbb043e0af94839bdf6eace942f47ac": "query DetailTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    ...Detail_show\n    id\n  }\n}\n\nfragment Detail_show on Show {\n  internalID\n  slug\n  name\n  description\n  city\n  isStubShow\n  images {\n    internalID\n  }\n  ...ShowHeader_show\n  ...ShowArtworksPreview_show\n  ...ShowArtistsPreview_show\n  ...Shows_show\n  location {\n    ...LocationMap_location\n    openingHours {\n      __typename\n      ... on OpeningHoursArray {\n        schedules {\n          days\n          hours\n        }\n      }\n      ... on OpeningHoursText {\n        text\n      }\n    }\n    id\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    slug\n    id\n  }\n  counts {\n    artworks\n    artists\n  }\n  status\n  partner {\n    __typename\n    ... on Partner {\n      name\n      type\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ShowHeader_show on Show {\n  slug\n  internalID\n  id\n  name\n  press_release: pressRelease\n  is_followed: isFollowed\n  end_at: endAt\n  exhibition_period: exhibitionPeriod\n  status\n  isStubShow\n  partner {\n    __typename\n    ... on Partner {\n      name\n      slug\n      href\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  images {\n    url\n    aspect_ratio: aspectRatio\n  }\n  followedArtists: followedArtistsConnection(first: 3) {\n    edges {\n      node {\n        artist {\n          name\n          href\n          slug\n          internalID\n          id\n        }\n      }\n    }\n  }\n  artists {\n    name\n    href\n    slug\n    internalID\n    id\n  }\n}\n\nfragment ShowArtworksPreview_show on Show {\n  id\n  counts {\n    artworks\n  }\n  artworks: artworksConnection(first: 6) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment ShowArtistsPreview_show on Show {\n  internalID\n  slug\n  artists {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n}\n\nfragment Shows_show on Show {\n  nearbyShows: nearbyShowsConnection(first: 20) {\n    edges {\n      node {\n        id\n        ...ShowItem_show\n      }\n    }\n  }\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment ShowItem_show on Show {\n  internalID\n  slug\n  name\n  exhibition_period: exhibitionPeriod\n  end_at: endAt\n  images {\n    url\n    aspect_ratio: aspectRatio\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "0db860c34b07fefd1a0cf48e5ceb780b": "query FairsQuery(\n  $count: Int!\n  $cursor: String\n) {\n  me {\n    ...Fairs_me_1G22uz\n    id\n  }\n}\n\nfragment Fairs_me_1G22uz on Me {\n  followsAndSaves {\n    fairs: fairsConnection(first: $count, after: $cursor) {\n      edges {\n        node {\n          id\n          profile {\n            slug\n            is_followed: isFollowed\n            id\n          }\n          exhibition_period: exhibitionPeriod\n          name\n          counts {\n            partners\n          }\n          href\n          image {\n            url\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n",
+  "c9cdbe49285e576f732007a415eff478": "query ShowArtworksPreviewTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    ...ShowArtworksPreview_show\n    id\n  }\n}\n\nfragment ShowArtworksPreview_show on Show {\n  id\n  counts {\n    artworks\n  }\n  artworks: artworksConnection(first: 6) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "eb3334f2f0a392023ea218c814a2a8e3": "query DetailTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    ...Detail_show\n    id\n  }\n}\n\nfragment Detail_show on Show {\n  internalID\n  slug\n  description\n  ...ShowHeader_show\n  ...ShowArtworksPreview_show\n  ...ShowArtistsPreview_show\n  ...Shows_show\n  location {\n    ...LocationMap_location\n    openingHours {\n      __typename\n      ... on OpeningHoursArray {\n        schedules {\n          days\n          hours\n        }\n      }\n      ... on OpeningHoursText {\n        text\n      }\n    }\n    id\n  }\n  artistsWithoutArtworks {\n    slug\n    id\n  }\n  counts {\n    artworks\n    artists\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      type\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ShowHeader_show on Show {\n  slug\n  internalID\n  id\n  name\n  is_followed: isFollowed\n  end_at: endAt\n  exhibition_period: exhibitionPeriod\n  isStubShow\n  partner {\n    __typename\n    ... on Partner {\n      name\n      slug\n      href\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  images {\n    url\n    aspect_ratio: aspectRatio\n  }\n  followedArtists: followedArtistsConnection(first: 3) {\n    edges {\n      node {\n        artist {\n          name\n          href\n          slug\n          internalID\n          id\n        }\n      }\n    }\n  }\n  artists {\n    name\n    href\n    slug\n    internalID\n    id\n  }\n}\n\nfragment ShowArtworksPreview_show on Show {\n  id\n  counts {\n    artworks\n  }\n  artworks: artworksConnection(first: 6) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment ShowArtistsPreview_show on Show {\n  internalID\n  slug\n  artists {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n}\n\nfragment Shows_show on Show {\n  nearbyShows: nearbyShowsConnection(first: 20) {\n    edges {\n      node {\n        id\n        ...ShowItem_show\n      }\n    }\n  }\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment ShowItem_show on Show {\n  internalID\n  slug\n  name\n  exhibition_period: exhibitionPeriod\n  end_at: endAt\n  images {\n    url\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
   "35619b0bc76edbfd09c0e8f17d2a6e17": "mutation ArtistRailFollowMutation(\n  $input: FollowArtistInput!\n  $excludeArtistIDs: [String]!\n) {\n  followArtist(input: $input) {\n    artist {\n      related {\n        suggestedConnection(first: 1, excludeArtistIDs: $excludeArtistIDs, excludeFollowedArtists: true, excludeArtistsWithoutForsaleArtworks: true) {\n          edges {\n            node {\n              id\n              slug\n              internalID\n              href\n              name\n              formattedArtworksCount\n              formattedNationalityAndBirthday\n              image {\n                url(version: \"large\")\n              }\n            }\n          }\n        }\n      }\n      id\n    }\n  }\n}\n",
   "23992ce871e2853abced73653712aa60": "query MapRendererQuery(\n  $citySlug: String!\n  $maxInt: Int!\n) {\n  ...GlobalMap_viewer_3La17j\n}\n\nfragment GlobalMap_viewer_3La17j on Query {\n  city(slug: $citySlug) {\n    name\n    slug\n    coordinates {\n      lat\n      lng\n    }\n    sponsoredContent {\n      introText\n      artGuideUrl\n      featuredShows {\n        slug\n        internalID\n        id\n        name\n        status\n        isStubShow\n        href\n        is_followed: isFollowed\n        exhibition_period: exhibitionPeriod\n        cover_image: coverImage {\n          url\n        }\n        location {\n          coordinates {\n            lat\n            lng\n          }\n          id\n        }\n        type\n        start_at: startAt\n        end_at: endAt\n        partner {\n          __typename\n          ... on Partner {\n            name\n            type\n          }\n          ... on Node {\n            id\n          }\n          ... on ExternalPartner {\n            id\n          }\n        }\n      }\n      shows: showsConnection(first: 1, sort: START_AT_ASC) {\n        totalCount\n      }\n    }\n    upcomingShows: showsConnection(includeStubShows: true, status: UPCOMING, dayThreshold: 14, first: $maxInt, sort: START_AT_ASC) {\n      edges {\n        node {\n          slug\n          internalID\n          id\n          isStubShow\n          name\n          status\n          href\n          is_followed: isFollowed\n          exhibition_period: exhibitionPeriod\n          cover_image: coverImage {\n            url\n          }\n          location {\n            coordinates {\n              lat\n              lng\n            }\n            id\n          }\n          type\n          start_at: startAt\n          end_at: endAt\n          partner {\n            __typename\n            ... on Partner {\n              name\n              type\n              profile {\n                image {\n                  url(version: \"square\")\n                }\n                id\n              }\n            }\n            ... on Node {\n              id\n            }\n            ... on ExternalPartner {\n              id\n            }\n          }\n        }\n      }\n    }\n    shows: showsConnection(includeStubShows: true, status: RUNNING, first: $maxInt, sort: PARTNER_ASC) {\n      edges {\n        node {\n          slug\n          internalID\n          id\n          isStubShow\n          name\n          status\n          href\n          is_followed: isFollowed\n          exhibition_period: exhibitionPeriod\n          cover_image: coverImage {\n            url\n          }\n          location {\n            coordinates {\n              lat\n              lng\n            }\n            id\n          }\n          type\n          start_at: startAt\n          end_at: endAt\n          partner {\n            __typename\n            ... on Partner {\n              name\n              type\n              profile {\n                image {\n                  url(version: \"square\")\n                }\n                id\n              }\n            }\n            ... on Node {\n              id\n            }\n            ... on ExternalPartner {\n              id\n            }\n          }\n        }\n      }\n    }\n    fairs: fairsConnection(first: $maxInt, status: CURRENT, sort: START_AT_ASC) {\n      edges {\n        node {\n          id\n          slug\n          name\n          exhibition_period: exhibitionPeriod\n          counts {\n            partners\n          }\n          location {\n            coordinates {\n              lat\n              lng\n            }\n            id\n          }\n          image {\n            image_url: imageURL\n            aspect_ratio: aspectRatio\n            url\n          }\n          profile {\n            icon {\n              internalID\n              href\n              height\n              width\n              url(version: \"square140\")\n            }\n            id\n            slug\n            name\n          }\n          start_at: startAt\n          end_at: endAt\n        }\n      }\n    }\n  }\n}\n",
   "fb272ba544200e2e2beef09e1fe0a2f3": "query MockRelayRendererFixturesBadQuery {\n  something_that_is_not_expected: artwork(id: \"mona-lisa\") {\n    ...MockRelayRendererFixtures_artwork\n    id\n  }\n}\n\nfragment MockRelayRendererFixtures_artwork on Artwork {\n  image {\n    url\n  }\n  artist {\n    slug\n    id\n  }\n  ...MockRelayRendererFixtures_artworkMetadata\n}\n\nfragment MockRelayRendererFixtures_artworkMetadata on Artwork {\n  title\n}\n",
@@ -48,100 +48,100 @@
   "cbf4686647f004d150e5f1a608cbe861": "query MockRelayRendererFixturesArtistQuery(\n  $id: String!\n) {\n  artist(id: $id) {\n    ...MockRelayRendererFixtures_artist\n    id\n  }\n}\n\nfragment MockRelayRendererFixtures_artist on Artist {\n  name\n}\n",
   "1193f18a6f5e42b6136f4502f4479ccb": "mutation createConsignmentSubmissionMutation(\n  $input: CreateSubmissionMutationInput!\n) {\n  createConsignmentSubmission(input: $input) {\n    consignmentSubmission {\n      internalID\n    }\n  }\n}\n",
   "75f1868d21d1e1c518860ab0088a3466": "query GlobalMapTestsQuery(\n  $citySlug: String!\n  $maxInt: Int!\n) {\n  ...GlobalMap_viewer_3La17j\n}\n\nfragment GlobalMap_viewer_3La17j on Query {\n  city(slug: $citySlug) {\n    name\n    slug\n    coordinates {\n      lat\n      lng\n    }\n    sponsoredContent {\n      introText\n      artGuideUrl\n      featuredShows {\n        slug\n        internalID\n        id\n        name\n        status\n        isStubShow\n        href\n        is_followed: isFollowed\n        exhibition_period: exhibitionPeriod\n        cover_image: coverImage {\n          url\n        }\n        location {\n          coordinates {\n            lat\n            lng\n          }\n          id\n        }\n        type\n        start_at: startAt\n        end_at: endAt\n        partner {\n          __typename\n          ... on Partner {\n            name\n            type\n          }\n          ... on Node {\n            id\n          }\n          ... on ExternalPartner {\n            id\n          }\n        }\n      }\n      shows: showsConnection(first: 1, sort: START_AT_ASC) {\n        totalCount\n      }\n    }\n    upcomingShows: showsConnection(includeStubShows: true, status: UPCOMING, dayThreshold: 14, first: $maxInt, sort: START_AT_ASC) {\n      edges {\n        node {\n          slug\n          internalID\n          id\n          isStubShow\n          name\n          status\n          href\n          is_followed: isFollowed\n          exhibition_period: exhibitionPeriod\n          cover_image: coverImage {\n            url\n          }\n          location {\n            coordinates {\n              lat\n              lng\n            }\n            id\n          }\n          type\n          start_at: startAt\n          end_at: endAt\n          partner {\n            __typename\n            ... on Partner {\n              name\n              type\n              profile {\n                image {\n                  url(version: \"square\")\n                }\n                id\n              }\n            }\n            ... on Node {\n              id\n            }\n            ... on ExternalPartner {\n              id\n            }\n          }\n        }\n      }\n    }\n    shows: showsConnection(includeStubShows: true, status: RUNNING, first: $maxInt, sort: PARTNER_ASC) {\n      edges {\n        node {\n          slug\n          internalID\n          id\n          isStubShow\n          name\n          status\n          href\n          is_followed: isFollowed\n          exhibition_period: exhibitionPeriod\n          cover_image: coverImage {\n            url\n          }\n          location {\n            coordinates {\n              lat\n              lng\n            }\n            id\n          }\n          type\n          start_at: startAt\n          end_at: endAt\n          partner {\n            __typename\n            ... on Partner {\n              name\n              type\n              profile {\n                image {\n                  url(version: \"square\")\n                }\n                id\n              }\n            }\n            ... on Node {\n              id\n            }\n            ... on ExternalPartner {\n              id\n            }\n          }\n        }\n      }\n    }\n    fairs: fairsConnection(first: $maxInt, status: CURRENT, sort: START_AT_ASC) {\n      edges {\n        node {\n          id\n          slug\n          name\n          exhibition_period: exhibitionPeriod\n          counts {\n            partners\n          }\n          location {\n            coordinates {\n              lat\n              lng\n            }\n            id\n          }\n          image {\n            image_url: imageURL\n            aspect_ratio: aspectRatio\n            url\n          }\n          profile {\n            icon {\n              internalID\n              href\n              height\n              width\n              url(version: \"square140\")\n            }\n            id\n            slug\n            name\n          }\n          start_at: startAt\n          end_at: endAt\n        }\n      }\n    }\n  }\n}\n",
-  "c1d3334f30a6e53f1f12185a7f35b5da": "query ArtistNotForSaleArtworksGridQuery(\n  $id: ID!\n  $count: Int!\n  $cursor: String\n  $filter: [ArtistArtworksFilters]\n) {\n  node(id: $id) {\n    __typename\n    ... on Artist {\n      ...ArtistNotForSaleArtworksGrid_artist_3KQYpM\n    }\n    id\n  }\n}\n\nfragment ArtistNotForSaleArtworksGrid_artist_3KQYpM on Artist {\n  id\n  notForSaleArtworks: artworksConnection(first: $count, after: $cursor, filter: $filter, sort: PARTNER_UPDATED_AT_DESC) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "17c5328bb5c648f21dcba00f6627e56f": "query ImageCarouselTestsQuery {\n  artwork(id: \"unused\") {\n    images {\n      ...ImageCarousel_images\n    }\n    id\n  }\n}\n\nfragment ImageCarousel_images on Image {\n  image_url: imageURL\n  width\n  height\n  deepZoom {\n    image: Image {\n      tileSize: TileSize\n      url: Url\n      format: Format\n      size: Size {\n        width: Width\n        height: Height\n      }\n    }\n  }\n}\n",
+  "cd62d00a3731b452c856d657e4fb237f": "query ArtistNotForSaleArtworksGridQuery(\n  $id: ID!\n  $count: Int!\n  $cursor: String\n  $filter: [ArtistArtworksFilters]\n) {\n  node(id: $id) {\n    __typename\n    ... on Artist {\n      ...ArtistNotForSaleArtworksGrid_artist_3KQYpM\n    }\n    id\n  }\n}\n\nfragment ArtistNotForSaleArtworksGrid_artist_3KQYpM on Artist {\n  id\n  notForSaleArtworks: artworksConnection(first: $count, after: $cursor, filter: $filter, sort: PARTNER_UPDATED_AT_DESC) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "23ef66a0dbbd53bcf52766b0e420c2db": "query ImageCarouselTestsQuery {\n  artwork(id: \"unused\") {\n    images {\n      ...ImageCarousel_images\n    }\n    id\n  }\n}\n\nfragment ImageCarousel_images on Image {\n  url: imageURL\n  width\n  height\n  deepZoom {\n    image: Image {\n      tileSize: TileSize\n      url: Url\n      format: Format\n      size: Size {\n        width: Width\n        height: Height\n      }\n    }\n  }\n}\n",
   "1b7cfa5b786e32f0faccd54efa1c07bd": "query FollowArtistButtonTestsErrorQuery {\n  artist(id: \"artistID\") {\n    ...FollowArtistButton_artist\n    id\n  }\n}\n\nfragment FollowArtistButton_artist on Artist {\n  id\n  slug\n  internalID\n  is_followed: isFollowed\n}\n",
   "fd193e93b0118d71e98014c6426956a7": "query FollowArtistButtonTestsQuery {\n  artist(id: \"artistID\") {\n    ...FollowArtistButton_artist\n    id\n  }\n}\n\nfragment FollowArtistButton_artist on Artist {\n  id\n  slug\n  internalID\n  is_followed: isFollowed\n}\n",
-  "c55da51c2f8b353a0e0a7f0d4253f608": "query FairDetailTestsQuery {\n  fair(id: \"sofa-chicago-2018\") {\n    ...FairDetail_fair\n    id\n  }\n}\n\nfragment FairDetail_fair on Fair {\n  ...FairHeader_fair\n  slug\n  internalID\n  name\n  hours\n  isActive\n  location {\n    ...LocationMap_location\n    coordinates {\n      lat\n      lng\n    }\n    id\n  }\n  organizer {\n    website\n    id\n  }\n  about\n  ticketsLink\n  profile {\n    name\n    id\n  }\n  sponsoredContent {\n    activationText\n    pressReleaseUrl\n  }\n  shows: showsConnection(first: 5) {\n    pageInfo {\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        slug\n        internalID\n        artworks: artworksConnection(first: 4) {\n          edges {\n            node {\n              slug\n              id\n            }\n          }\n        }\n        ...FairBoothPreview_show\n        id\n        __typename\n      }\n    }\n  }\n}\n\nfragment FairHeader_fair on Fair {\n  slug\n  internalID\n  name\n  formattedOpeningHours\n  counts {\n    artists\n    partners\n  }\n  followed_content: followedContent {\n    artists {\n      name\n      href\n      slug\n      internalID\n      id\n    }\n    galleries {\n      internalID\n      name\n      id\n    }\n  }\n  partner_names: showsConnection(first: 2) {\n    edges {\n      node {\n        slug\n        partner {\n          __typename\n          ... on Partner {\n            profile {\n              name\n              slug\n              internalID\n              id\n            }\n          }\n          ... on Node {\n            id\n          }\n          ... on ExternalPartner {\n            id\n          }\n        }\n        id\n      }\n    }\n  }\n  artists_names: artistsConnection(first: 3) {\n    edges {\n      node {\n        name\n        href\n        slug\n        internalID\n        id\n      }\n    }\n  }\n  image {\n    image_url: imageURL\n    aspect_ratio: aspectRatio\n    url\n  }\n  profile {\n    icon {\n      internalID\n      href\n      height\n      width\n      url(version: \"square140\")\n    }\n    id\n    slug\n    name\n    is_followed: isFollowed\n  }\n  start_at: startAt\n  end_at: endAt\n  exhibition_period: exhibitionPeriod\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment FairBoothPreview_show on Show {\n  slug\n  internalID\n  name\n  is_fair_booth: isFairBooth\n  counts {\n    artworks\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      href\n      slug\n      internalID\n      id\n      profile {\n        internalID\n        is_followed: isFollowed\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  fair {\n    name\n    id\n  }\n  cover_image: coverImage {\n    url\n  }\n  location {\n    display\n    id\n  }\n  artworks: artworksConnection(first: 4) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "350e55b3cbaf6eae547ff4030aa3a319": "query FavoriteArtistsQuery {\n  me {\n    ...Artists_me\n    id\n  }\n}\n\nfragment Artists_me on Me {\n  followsAndSaves {\n    artists: artistsConnection(first: 10) {\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      edges {\n        node {\n          artist {\n            slug\n            id\n            name\n            href\n            image {\n              url\n            }\n          }\n          id\n          __typename\n        }\n        cursor\n      }\n    }\n  }\n}\n",
-  "c31e339940fd7dcf22e3e120670d26fb": "query ArtistsMeQuery(\n  $count: Int!\n  $cursor: String\n) {\n  me {\n    ...Artists_me_1G22uz\n    id\n  }\n}\n\nfragment Artists_me_1G22uz on Me {\n  followsAndSaves {\n    artists: artistsConnection(first: $count, after: $cursor) {\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      edges {\n        node {\n          artist {\n            slug\n            id\n            name\n            href\n            image {\n              url\n            }\n          }\n          id\n          __typename\n        }\n        cursor\n      }\n    }\n  }\n}\n",
-  "5a4cf26f4fd23009e67008c634e06a57": "query ConfirmBidRefetchQuery(\n  $saleID: String!\n) {\n  me {\n    has_qualified_credit_cards: hasQualifiedCreditCards\n    bidders(saleID: $saleID) {\n      qualified_for_bidding: qualifiedForBidding\n      id\n    }\n    id\n  }\n}\n",
+  "b7457bd4f48b1794aed02ed22f67fb87": "query FairDetailTestsQuery {\n  fair(id: \"sofa-chicago-2018\") {\n    ...FairDetail_fair\n    id\n  }\n}\n\nfragment FairDetail_fair on Fair {\n  ...FairHeader_fair\n  slug\n  internalID\n  name\n  hours\n  isActive\n  location {\n    ...LocationMap_location\n    coordinates {\n      lat\n      lng\n    }\n    id\n  }\n  organizer {\n    website\n    id\n  }\n  profile {\n    name\n    id\n  }\n  sponsoredContent {\n    pressReleaseUrl\n    activationText\n  }\n  shows: showsConnection(first: 5) {\n    pageInfo {\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        artworks: artworksConnection(first: 4) {\n          edges {\n            node {\n              slug\n              id\n            }\n          }\n        }\n        ...FairBoothPreview_show\n        id\n        __typename\n      }\n    }\n  }\n}\n\nfragment FairHeader_fair on Fair {\n  slug\n  name\n  formattedOpeningHours\n  startAt\n  endAt\n  exhibitionPeriod\n  counts {\n    artists\n  }\n  image {\n    url\n  }\n  followedContent {\n    artists {\n      name\n      href\n      slug\n      internalID\n      id\n    }\n  }\n  artistsConnection(first: 3) {\n    edges {\n      node {\n        name\n        href\n        slug\n        internalID\n        id\n      }\n    }\n  }\n  profile {\n    id\n    icon {\n      url(version: \"square140\")\n    }\n  }\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment FairBoothPreview_show on Show {\n  slug\n  internalID\n  counts {\n    artworks\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      href\n      slug\n      internalID\n      id\n      profile {\n        id\n        slug\n        internalID\n        isFollowed\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  coverImage {\n    url\n  }\n  location {\n    display\n    id\n  }\n  artworks: artworksConnection(first: 4) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "061a9341a1ac948f1dbd1c2d75adbe43": "query FavoriteArtistsQuery {\n  me {\n    ...Artists_me\n    id\n  }\n}\n\nfragment Artists_me on Me {\n  followsAndSaves {\n    artists: artistsConnection(first: 10) {\n      edges {\n        node {\n          artist {\n            id\n            name\n            href\n            image {\n              url\n            }\n          }\n          id\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n",
+  "b108ebed90e257a8a29d53a085165670": "query ArtistsMeQuery(\n  $count: Int!\n  $cursor: String\n) {\n  me {\n    ...Artists_me_1G22uz\n    id\n  }\n}\n\nfragment Artists_me_1G22uz on Me {\n  followsAndSaves {\n    artists: artistsConnection(first: $count, after: $cursor) {\n      edges {\n        node {\n          artist {\n            id\n            name\n            href\n            image {\n              url\n            }\n          }\n          id\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n",
+  "ad1642dc31d8cc664803d629a050b4e9": "query ConfirmBidRefetchQuery(\n  $saleID: String!\n) {\n  me {\n    has_qualified_credit_cards: hasQualifiedCreditCards\n    bidders(saleID: $saleID) {\n      id\n    }\n    id\n  }\n}\n",
   "5f83a293e2149669ee69cff774a0dca8": "mutation ConfirmBidCreateBidderPositionMutation(\n  $input: BidderPositionInput!\n) {\n  createBidderPosition(input: $input) {\n    result {\n      status\n      message_header: messageHeader\n      message_description_md: messageDescriptionMD\n      position {\n        internalID\n        suggested_next_bid: suggestedNextBid {\n          cents\n          display\n        }\n        id\n      }\n    }\n  }\n}\n",
   "f489cab3e59f4336d6c66f8c43b94ff2": "mutation ConfirmBidCreateCreditCardMutation(\n  $input: CreditCardInput!\n) {\n  createCreditCard(input: $input) {\n    creditCardOrError {\n      __typename\n      ... on CreditCardMutationSuccess {\n        creditCard {\n          internalID\n          brand\n          name\n          last_digits: lastDigits\n          expiration_month: expirationMonth\n          expiration_year: expirationYear\n          id\n        }\n      }\n      ... on CreditCardMutationFailure {\n        mutationError {\n          type\n          message\n          detail\n        }\n      }\n    }\n  }\n}\n",
   "3580c0fe3b32d9febb4e67be71192572": "mutation ConfirmBidUpdateUserMutation(\n  $input: UpdateMyProfileInput!\n) {\n  updateMyUserProfile(input: $input) {\n    clientMutationId\n    user {\n      phone\n      id\n    }\n  }\n}\n",
   "1ea4accf486ff232043793948e64bfb1": "query ArtworkActionsTestsErrorQuery {\n  artwork(id: \"artworkID\") {\n    ...ArtworkActions_artwork\n    id\n  }\n}\n\nfragment ArtworkActions_artwork on Artwork {\n  id\n  internalID\n  slug\n  title\n  href\n  is_saved: isSaved\n  is_hangable: isHangable\n  artists {\n    name\n    id\n  }\n  image {\n    url\n  }\n  widthCm\n  heightCm\n}\n",
   "3796eb0cb21ed4cd41bb584cbd47f2ac": "query ArtworkActionsTestsQuery {\n  artwork(id: \"artworkID\") {\n    ...ArtworkActions_artwork\n    id\n  }\n}\n\nfragment ArtworkActions_artwork on Artwork {\n  id\n  internalID\n  slug\n  title\n  href\n  is_saved: isSaved\n  is_hangable: isHangable\n  artists {\n    name\n    id\n  }\n  image {\n    url\n  }\n  widthCm\n  heightCm\n}\n",
-  "75597785eb99da82db66f8e66b560832": "query indexTestsFairBothPreviewQuery {\n  show(id: \"abxy-blk-and-blue\") {\n    ...FairBoothPreview_show\n    id\n  }\n}\n\nfragment FairBoothPreview_show on Show {\n  slug\n  internalID\n  name\n  is_fair_booth: isFairBooth\n  counts {\n    artworks\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      href\n      slug\n      internalID\n      id\n      profile {\n        internalID\n        is_followed: isFollowed\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  fair {\n    name\n    id\n  }\n  cover_image: coverImage {\n    url\n  }\n  location {\n    display\n    id\n  }\n  artworks: artworksConnection(first: 4) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "bba5bc29ee7e21ae8127d485fb6eb422": "query ArtistForSaleArtworksGridQuery(\n  $id: ID!\n  $count: Int!\n  $cursor: String\n  $filter: [ArtistArtworksFilters]\n) {\n  node(id: $id) {\n    __typename\n    ... on Artist {\n      ...ArtistForSaleArtworksGrid_artist_3KQYpM\n    }\n    id\n  }\n}\n\nfragment ArtistForSaleArtworksGrid_artist_3KQYpM on Artist {\n  id\n  forSaleArtworks: artworksConnection(first: $count, after: $cursor, filter: $filter, sort: PARTNER_UPDATED_AT_DESC) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "199205a09cc26a053f7a5351773e6c3d": "query indexTestsFairBothPreviewQuery {\n  show(id: \"abxy-blk-and-blue\") {\n    ...FairBoothPreview_show\n    id\n  }\n}\n\nfragment FairBoothPreview_show on Show {\n  slug\n  internalID\n  counts {\n    artworks\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      href\n      slug\n      internalID\n      id\n      profile {\n        id\n        slug\n        internalID\n        isFollowed\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  coverImage {\n    url\n  }\n  location {\n    display\n    id\n  }\n  artworks: artworksConnection(first: 4) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "0d1a3d414b1287aa0f6ae0c677644085": "query ArtistForSaleArtworksGridQuery(\n  $id: ID!\n  $count: Int!\n  $cursor: String\n  $filter: [ArtistArtworksFilters]\n) {\n  node(id: $id) {\n    __typename\n    ... on Artist {\n      ...ArtistForSaleArtworksGrid_artist_3KQYpM\n    }\n    id\n  }\n}\n\nfragment ArtistForSaleArtworksGrid_artist_3KQYpM on Artist {\n  id\n  forSaleArtworks: artworksConnection(first: $count, after: $cursor, filter: $filter, sort: PARTNER_UPDATED_AT_DESC) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
   "55a8c7797e0ad70ce3351836d4745c74": "mutation createGeminiAssetWithS3CredentialsMutation(\n  $input: CreateGeminiEntryForAssetInput!\n) {\n  createGeminiEntryForAsset(input: $input) {\n    asset {\n      token\n    }\n  }\n}\n",
   "bced02f9a2ec70e1c9d00d739b3e3247": "mutation EventMutation(\n  $input: FollowShowInput!\n) {\n  followShow(input: $input) {\n    show {\n      slug\n      internalID\n      is_followed: isFollowed\n      id\n    }\n  }\n}\n",
-  "02fa370b7f84f13fe092962b51b6eef3": "query FairDetailShowsQuery(\n  $id: String!\n  $count: Int!\n  $cursor: String\n) {\n  fair(id: $id) {\n    ...FairDetail_fair_1G22uz\n    id\n  }\n}\n\nfragment FairDetail_fair_1G22uz on Fair {\n  ...FairHeader_fair\n  slug\n  internalID\n  name\n  hours\n  isActive\n  location {\n    ...LocationMap_location\n    coordinates {\n      lat\n      lng\n    }\n    id\n  }\n  organizer {\n    website\n    id\n  }\n  about\n  ticketsLink\n  profile {\n    name\n    id\n  }\n  sponsoredContent {\n    activationText\n    pressReleaseUrl\n  }\n  shows: showsConnection(first: $count, after: $cursor) {\n    pageInfo {\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        slug\n        internalID\n        artworks: artworksConnection(first: 4) {\n          edges {\n            node {\n              slug\n              id\n            }\n          }\n        }\n        ...FairBoothPreview_show\n        id\n        __typename\n      }\n    }\n  }\n}\n\nfragment FairHeader_fair on Fair {\n  slug\n  internalID\n  name\n  formattedOpeningHours\n  counts {\n    artists\n    partners\n  }\n  followed_content: followedContent {\n    artists {\n      name\n      href\n      slug\n      internalID\n      id\n    }\n    galleries {\n      internalID\n      name\n      id\n    }\n  }\n  partner_names: showsConnection(first: 2) {\n    edges {\n      node {\n        slug\n        partner {\n          __typename\n          ... on Partner {\n            profile {\n              name\n              slug\n              internalID\n              id\n            }\n          }\n          ... on Node {\n            id\n          }\n          ... on ExternalPartner {\n            id\n          }\n        }\n        id\n      }\n    }\n  }\n  artists_names: artistsConnection(first: 3) {\n    edges {\n      node {\n        name\n        href\n        slug\n        internalID\n        id\n      }\n    }\n  }\n  image {\n    image_url: imageURL\n    aspect_ratio: aspectRatio\n    url\n  }\n  profile {\n    icon {\n      internalID\n      href\n      height\n      width\n      url(version: \"square140\")\n    }\n    id\n    slug\n    name\n    is_followed: isFollowed\n  }\n  start_at: startAt\n  end_at: endAt\n  exhibition_period: exhibitionPeriod\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment FairBoothPreview_show on Show {\n  slug\n  internalID\n  name\n  is_fair_booth: isFairBooth\n  counts {\n    artworks\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      href\n      slug\n      internalID\n      id\n      profile {\n        internalID\n        is_followed: isFollowed\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  fair {\n    name\n    id\n  }\n  cover_image: coverImage {\n    url\n  }\n  location {\n    display\n    id\n  }\n  artworks: artworksConnection(first: 4) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "182eb234d04f02be5e0d6681188f04c6": "query FairDetailShowsQuery(\n  $id: String!\n  $count: Int!\n  $cursor: String\n) {\n  fair(id: $id) {\n    ...FairDetail_fair_1G22uz\n    id\n  }\n}\n\nfragment FairDetail_fair_1G22uz on Fair {\n  ...FairHeader_fair\n  slug\n  internalID\n  name\n  hours\n  isActive\n  location {\n    ...LocationMap_location\n    coordinates {\n      lat\n      lng\n    }\n    id\n  }\n  organizer {\n    website\n    id\n  }\n  profile {\n    name\n    id\n  }\n  sponsoredContent {\n    pressReleaseUrl\n    activationText\n  }\n  shows: showsConnection(first: $count, after: $cursor) {\n    pageInfo {\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        artworks: artworksConnection(first: 4) {\n          edges {\n            node {\n              slug\n              id\n            }\n          }\n        }\n        ...FairBoothPreview_show\n        id\n        __typename\n      }\n    }\n  }\n}\n\nfragment FairHeader_fair on Fair {\n  slug\n  name\n  formattedOpeningHours\n  startAt\n  endAt\n  exhibitionPeriod\n  counts {\n    artists\n  }\n  image {\n    url\n  }\n  followedContent {\n    artists {\n      name\n      href\n      slug\n      internalID\n      id\n    }\n  }\n  artistsConnection(first: 3) {\n    edges {\n      node {\n        name\n        href\n        slug\n        internalID\n        id\n      }\n    }\n  }\n  profile {\n    id\n    icon {\n      url(version: \"square140\")\n    }\n  }\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment FairBoothPreview_show on Show {\n  slug\n  internalID\n  counts {\n    artworks\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      href\n      slug\n      internalID\n      id\n      profile {\n        id\n        slug\n        internalID\n        isFollowed\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  coverImage {\n    url\n  }\n  location {\n    display\n    id\n  }\n  artworks: artworksConnection(first: 4) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
   "7e259ce40d6cc7ef866f7905023fb82f": "mutation FollowArtistButtonMutation(\n  $input: FollowArtistInput!\n) {\n  followArtist(input: $input) {\n    artist {\n      id\n      is_followed: isFollowed\n    }\n  }\n}\n",
   "d6dcea734ed2c6dc355355d8a3a1c833": "mutation ShowHeaderFollowShowMutation(\n  $input: FollowShowInput!\n) {\n  followShow(input: $input) {\n    show {\n      slug\n      internalID\n      is_followed: isFollowed\n      id\n    }\n  }\n}\n",
   "1fd08eb4c6fe06451485859f8af8e314": "query ArtistListItemTestsQuery {\n  artist(id: \"pablo-picasso\") {\n    ...ArtistListItem_artist\n    id\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n",
   "5177deeca0d7ff411ca8c5807f3e8618": "mutation ArtworkActionsSaveMutation(\n  $input: SaveArtworkInput!\n) {\n  saveArtwork(input: $input) {\n    artwork {\n      id\n      is_saved: isSaved\n    }\n  }\n}\n",
-  "5fbc15e44c3fcc0459d43153dba0babf": "query AuctionPriceTestsQuery {\n  artwork(id: \"auction_artwork_estimate_premium\") {\n    ...AuctionPrice_artwork\n    id\n  }\n}\n\nfragment AuctionPrice_artwork on Artwork {\n  slug\n  sale {\n    internalID\n    isWithBuyersPremium\n    isClosed\n    isLiveOpen\n    id\n  }\n  saleArtwork {\n    isWithReserve\n    reserveMessage\n    reserveStatus\n    currentBid {\n      display\n    }\n    counts {\n      bidderPositions\n    }\n    id\n  }\n  myLotStanding(live: true) {\n    activeBid {\n      isWinning\n      id\n    }\n    mostRecentBid {\n      maxBid {\n        display\n      }\n      id\n    }\n  }\n}\n",
+  "6d244de9906e4602332d1cf51d127e2b": "query AuctionPriceTestsQuery {\n  artwork(id: \"auction_artwork_estimate_premium\") {\n    ...AuctionPrice_artwork\n    id\n  }\n}\n\nfragment AuctionPrice_artwork on Artwork {\n  sale {\n    internalID\n    isWithBuyersPremium\n    isClosed\n    isLiveOpen\n    id\n  }\n  saleArtwork {\n    reserveMessage\n    currentBid {\n      display\n    }\n    counts {\n      bidderPositions\n    }\n    id\n  }\n  myLotStanding(live: true) {\n    activeBid {\n      isWinning\n      id\n    }\n    mostRecentBid {\n      maxBid {\n        display\n      }\n      id\n    }\n  }\n}\n",
   "623bbe0f804e946ff688616d607f4bd2": "mutation addAssetToConsignmentMutation(\n  $input: AddAssetToConsignmentSubmissionInput!\n) {\n  addAssetToConsignmentSubmission(input: $input) {\n    asset {\n      submissionID\n      id\n    }\n  }\n}\n",
-  "1b26881965feca5694937ecc9e4fbeba": "query GeneQuery(\n  $id: ID!\n  $count: Int!\n  $cursor: String\n  $sort: String\n  $medium: String\n  $price_range: String\n) {\n  node(id: $id) {\n    __typename\n    ... on Gene {\n      ...Gene_gene_2jVhZq\n    }\n    id\n  }\n}\n\nfragment Gene_gene_2jVhZq on Gene {\n  id\n  internalID\n  ...Header_gene\n  ...About_gene\n  artworks: filterArtworksConnection(first: $count, after: $cursor, medium: $medium, priceRange: $price_range, sort: $sort, aggregations: [MEDIUM, PRICE_RANGE, TOTAL], forSale: true) {\n    counts {\n      total\n    }\n    aggregations {\n      slice\n      counts {\n        value\n        name\n        count\n      }\n    }\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    id\n  }\n}\n\nfragment Header_gene on Gene {\n  internalID\n  slug\n  id\n  isFollowed\n  name\n}\n\nfragment About_gene on Gene {\n  ...Biography_gene\n  trending_artists: trendingArtists {\n    ...RelatedArtists_artists\n    id\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n\nfragment Biography_gene on Gene {\n  description\n}\n\nfragment RelatedArtists_artists on Artist {\n  id\n  ...RelatedArtist_artist\n}\n\nfragment RelatedArtist_artist on Artist {\n  href\n  name\n  counts {\n    for_sale_artworks: forSaleArtworks\n    artworks\n  }\n  image {\n    url(version: \"large\")\n  }\n}\n",
-  "7feb04a62bb6a47d8a8ad1e4becdcb27": "query SalesQuery {\n  ...Sales_query\n}\n\nfragment Sales_query on Query {\n  salesConnection(live: true, isAuction: true, first: 100, sort: TIMELY_AT_NAME_ASC) {\n    edges {\n      node {\n        ...SaleListItem_sale\n        href\n        live_start_at: liveStartAt\n        id\n      }\n    }\n  }\n  ...LotsByFollowedArtists_query\n}\n\nfragment SaleListItem_sale on Sale {\n  slug\n  name\n  href\n  is_open: isOpen\n  is_live_open: isLiveOpen\n  live_url_if_open: liveURLIfOpen\n  start_at: startAt\n  end_at: endAt\n  registration_ends_at: registrationEndsAt\n  live_start_at: liveStartAt\n  display_timely_at: displayTimelyAt\n  cover_image: coverImage {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n}\n\nfragment LotsByFollowedArtists_query on Query {\n  me {\n    lotsByFollowedArtistsConnection(first: 10, liveSale: true, isAuction: true) {\n      edges {\n        cursor\n        node {\n          __typename\n          id\n        }\n        id\n      }\n      ...InfiniteScrollArtworksGrid_connection\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    id\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "49fbcf23b33529059885936dcd6a97f2": "query GeneQuery(\n  $id: ID!\n  $count: Int!\n  $cursor: String\n  $sort: String\n  $medium: String\n  $price_range: String\n) {\n  node(id: $id) {\n    __typename\n    ... on Gene {\n      ...Gene_gene_2jVhZq\n    }\n    id\n  }\n}\n\nfragment Gene_gene_2jVhZq on Gene {\n  id\n  internalID\n  ...Header_gene\n  ...About_gene\n  artworks: filterArtworksConnection(first: $count, after: $cursor, medium: $medium, priceRange: $price_range, sort: $sort, aggregations: [MEDIUM, PRICE_RANGE, TOTAL], forSale: true) {\n    counts {\n      total\n    }\n    aggregations {\n      slice\n      counts {\n        value\n        name\n        count\n      }\n    }\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    id\n  }\n}\n\nfragment Header_gene on Gene {\n  internalID\n  slug\n  id\n  isFollowed\n  name\n}\n\nfragment About_gene on Gene {\n  ...Biography_gene\n  trending_artists: trendingArtists {\n    ...RelatedArtists_artists\n    id\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n\nfragment Biography_gene on Gene {\n  description\n}\n\nfragment RelatedArtists_artists on Artist {\n  id\n  ...RelatedArtist_artist\n}\n\nfragment RelatedArtist_artist on Artist {\n  href\n  name\n  counts {\n    forSaleArtworks\n    artworks\n  }\n  image {\n    url(version: \"large\")\n  }\n}\n",
+  "2567e9692a5e88c53a9cf039dab4d0b4": "query SalesQuery {\n  ...Sales_query\n}\n\nfragment Sales_query on Query {\n  salesConnection(live: true, isAuction: true, first: 100, sort: TIMELY_AT_NAME_ASC) {\n    edges {\n      node {\n        ...SaleListItem_sale\n        live_start_at: liveStartAt\n        id\n      }\n    }\n  }\n  ...LotsByFollowedArtists_query\n}\n\nfragment SaleListItem_sale on Sale {\n  name\n  href\n  liveURLIfOpen\n  liveStartAt\n  displayTimelyAt\n  coverImage {\n    url(version: \"large\")\n  }\n}\n\nfragment LotsByFollowedArtists_query on Query {\n  me {\n    lotsByFollowedArtistsConnection(first: 10, liveSale: true, isAuction: true) {\n      edges {\n        cursor\n        node {\n          __typename\n          id\n        }\n        id\n      }\n      ...InfiniteScrollArtworksGrid_connection\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    id\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
   "d56c9ab97d9553bcc60be71e5bf293c8": "query FairBMWArtActivationTestsQuery {\n  fair(id: \"art-basel-in-miami-beach-2018\") {\n    slug\n    internalID\n    sponsoredContent {\n      activationText\n      pressReleaseUrl\n    }\n    id\n  }\n}\n",
   "7d9a8d2edf5e67ad757ac629a5251ae0": "mutation MakeOfferButtonOrderMutation(\n  $input: CommerceCreateOfferOrderWithArtworkInput!\n) {\n  commerceCreateOfferOrderWithArtwork(input: $input) {\n    orderOrError {\n      __typename\n      ... on CommerceOrderWithMutationSuccess {\n        order {\n          __typename\n          internalID\n          mode\n        }\n      }\n      ... on CommerceOrderWithMutationFailure {\n        error {\n          type\n          code\n          data\n        }\n      }\n    }\n  }\n}\n",
-  "3e552ef30cf75bce92cc14182ab003ab": "query SalesRendererQuery {\n  ...Sales_query\n}\n\nfragment Sales_query on Query {\n  salesConnection(live: true, isAuction: true, first: 100, sort: TIMELY_AT_NAME_ASC) {\n    edges {\n      node {\n        ...SaleListItem_sale\n        href\n        live_start_at: liveStartAt\n        id\n      }\n    }\n  }\n  ...LotsByFollowedArtists_query\n}\n\nfragment SaleListItem_sale on Sale {\n  slug\n  name\n  href\n  is_open: isOpen\n  is_live_open: isLiveOpen\n  live_url_if_open: liveURLIfOpen\n  start_at: startAt\n  end_at: endAt\n  registration_ends_at: registrationEndsAt\n  live_start_at: liveStartAt\n  display_timely_at: displayTimelyAt\n  cover_image: coverImage {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n}\n\nfragment LotsByFollowedArtists_query on Query {\n  me {\n    lotsByFollowedArtistsConnection(first: 10, liveSale: true, isAuction: true) {\n      edges {\n        cursor\n        node {\n          __typename\n          id\n        }\n        id\n      }\n      ...InfiniteScrollArtworksGrid_connection\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    id\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "ab88257156b8275d75cf08e24c1d6bb7": "query SalesRendererQuery {\n  ...Sales_query\n}\n\nfragment Sales_query on Query {\n  salesConnection(live: true, isAuction: true, first: 100, sort: TIMELY_AT_NAME_ASC) {\n    edges {\n      node {\n        ...SaleListItem_sale\n        live_start_at: liveStartAt\n        id\n      }\n    }\n  }\n  ...LotsByFollowedArtists_query\n}\n\nfragment SaleListItem_sale on Sale {\n  name\n  href\n  liveURLIfOpen\n  liveStartAt\n  displayTimelyAt\n  coverImage {\n    url(version: \"large\")\n  }\n}\n\nfragment LotsByFollowedArtists_query on Query {\n  me {\n    lotsByFollowedArtistsConnection(first: 10, liveSale: true, isAuction: true) {\n      edges {\n        cursor\n        node {\n          __typename\n          id\n        }\n        id\n      }\n      ...InfiniteScrollArtworksGrid_connection\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n    id\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
   "d049c29f027bb21204ebd3afc42cb1a2": "mutation ArtistListItemFollowArtistMutation(\n  $input: FollowArtistInput!\n) {\n  followArtist(input: $input) {\n    artist {\n      id\n      is_followed: isFollowed\n    }\n  }\n}\n",
   "94e40972daf378665e3b505de12b0b43": "mutation HeaderFollowArtistMutation(\n  $input: FollowArtistInput!\n) {\n  followArtist(input: $input) {\n    artist {\n      id\n      isFollowed\n    }\n  }\n}\n",
   "390163a2c0e0d6080e2fc0a6780e2530": "mutation getGeminiCredentialsForEnvironmentMutation(\n  $input: RequestCredentialsForAssetUploadInput!\n) {\n  requestCredentialsForAssetUpload(input: $input) {\n    asset {\n      signature\n      credentials\n      policyEncoded\n      policyDocument {\n        expiration\n        conditions {\n          acl\n          bucket\n          geminiKey\n          successActionStatus\n        }\n      }\n    }\n  }\n}\n",
-  "f312805c2a946c3fcded0303eeacdafe": "query FavoriteCategoriesQuery {\n  me {\n    ...Categories_me\n    id\n  }\n}\n\nfragment Categories_me on Me {\n  followsAndSaves {\n    genes: genesConnection(first: 10) {\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      edges {\n        node {\n          gene {\n            slug\n            id\n            name\n            href\n            image {\n              url\n            }\n          }\n          id\n          __typename\n        }\n        cursor\n      }\n    }\n  }\n}\n",
+  "a2ef576b1d9097e449c1b55acc829a34": "query FavoriteCategoriesQuery {\n  me {\n    ...Categories_me\n    id\n  }\n}\n\nfragment Categories_me on Me {\n  followsAndSaves {\n    genes: genesConnection(first: 10) {\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      edges {\n        node {\n          gene {\n            id\n            name\n            href\n            image {\n              url\n            }\n          }\n          id\n          __typename\n        }\n        cursor\n      }\n    }\n  }\n}\n",
   "68cc3854a45b4d6ed04997d8c7e1dc2f": "query FairBMWArtActivationQuery(\n  $fairID: String!\n) {\n  fair(id: $fairID) {\n    ...FairBMWArtActivation_fair\n    id\n  }\n}\n\nfragment FairBMWArtActivation_fair on Fair {\n  slug\n  internalID\n  sponsoredContent {\n    activationText\n    pressReleaseUrl\n  }\n}\n",
-  "7a93170ffd8d9e8140b4aa5e4512ba56": "query indexTestsFairHeaderQuery {\n  fair(id: \"sofa-chicago-2018\") {\n    ...FairHeader_fair\n    id\n  }\n}\n\nfragment FairHeader_fair on Fair {\n  slug\n  internalID\n  name\n  formattedOpeningHours\n  counts {\n    artists\n    partners\n  }\n  followed_content: followedContent {\n    artists {\n      name\n      href\n      slug\n      internalID\n      id\n    }\n    galleries {\n      internalID\n      name\n      id\n    }\n  }\n  partner_names: showsConnection(first: 2) {\n    edges {\n      node {\n        slug\n        partner {\n          __typename\n          ... on Partner {\n            profile {\n              name\n              slug\n              internalID\n              id\n            }\n          }\n          ... on Node {\n            id\n          }\n          ... on ExternalPartner {\n            id\n          }\n        }\n        id\n      }\n    }\n  }\n  artists_names: artistsConnection(first: 3) {\n    edges {\n      node {\n        name\n        href\n        slug\n        internalID\n        id\n      }\n    }\n  }\n  image {\n    image_url: imageURL\n    aspect_ratio: aspectRatio\n    url\n  }\n  profile {\n    icon {\n      internalID\n      href\n      height\n      width\n      url(version: \"square140\")\n    }\n    id\n    slug\n    name\n    is_followed: isFollowed\n  }\n  start_at: startAt\n  end_at: endAt\n  exhibition_period: exhibitionPeriod\n}\n",
-  "e928bb2c7379715a89aaf2ce42f9cb66": "query FavoriteArtworksQuery {\n  me {\n    ...Artworks_me\n    id\n  }\n}\n\nfragment Artworks_me on Me {\n  followsAndSaves {\n    artworks: artworksConnection(private: true, first: 10, after: \"\") {\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n      edges {\n        node {\n          ...GenericGrid_artworks\n          id\n          __typename\n        }\n        cursor\n      }\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "04f68f567ed2e3613298376a114382fa": "query indexTestsFairHeaderQuery {\n  fair(id: \"sofa-chicago-2018\") {\n    ...FairHeader_fair\n    id\n  }\n}\n\nfragment FairHeader_fair on Fair {\n  slug\n  name\n  formattedOpeningHours\n  startAt\n  endAt\n  exhibitionPeriod\n  counts {\n    artists\n  }\n  image {\n    url\n  }\n  followedContent {\n    artists {\n      name\n      href\n      slug\n      internalID\n      id\n    }\n  }\n  artistsConnection(first: 3) {\n    edges {\n      node {\n        name\n        href\n        slug\n        internalID\n        id\n      }\n    }\n  }\n  profile {\n    id\n    icon {\n      url(version: \"square140\")\n    }\n  }\n}\n",
+  "f1cec110977c7b8026cba7481b97d38d": "query FavoriteArtworksQuery {\n  me {\n    ...Artworks_me\n    id\n  }\n}\n\nfragment Artworks_me on Me {\n  followsAndSaves {\n    artworks: artworksConnection(private: true, first: 10, after: \"\") {\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n      edges {\n        node {\n          ...GenericGrid_artworks\n          id\n          __typename\n        }\n        cursor\n      }\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
   "d058ac6fae7e713368c47fade602780a": "mutation SavedFairItemRowMutation(\n  $input: FollowProfileInput!\n) {\n  followProfile(input: $input) {\n    profile {\n      slug\n      is_followed: isFollowed\n      id\n    }\n  }\n}\n",
   "ba1091e35407c87ac76b2bfecb788de7": "query ArtistsGroupedByNameTestsQuery {\n  artist(id: \"pablo-picasso\") {\n    ...ArtistListItem_artist\n    id\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n",
-  "214cddfbf797555cfca5305331f75127": "query ArtworksQuery(\n  $count: Int!\n  $cursor: String\n) {\n  me {\n    ...Artworks_me_1G22uz\n    id\n  }\n}\n\nfragment Artworks_me_1G22uz on Me {\n  followsAndSaves {\n    artworks: artworksConnection(private: true, first: $count, after: $cursor) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n      edges {\n        node {\n          ...GenericGrid_artworks\n          id\n          __typename\n        }\n        cursor\n      }\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "43d5289a4d6e1373641b40c8d284d094": "query WorksForYouQuery(\n  $count: Int!\n  $cursor: String\n) {\n  ...WorksForYou_query_1G22uz\n}\n\nfragment WorksForYou_query_1G22uz on Query {\n  me {\n    followsAndSaves {\n      notifications: bundledArtworksByArtistConnection(sort: PUBLISHED_AT_DESC, first: $count, after: $cursor) {\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        edges {\n          node {\n            id\n            ...Notification_notification\n            __typename\n          }\n          cursor\n        }\n      }\n    }\n    id\n  }\n  selectedArtist: artist(id: \"\") {\n    slug\n    href\n    name\n    image {\n      resized(height: 80, width: 80) {\n        url\n      }\n    }\n    artworks: artworksConnection(sort: PUBLISHED_AT_DESC, first: 6) {\n      edges {\n        node {\n          ...GenericGrid_artworks\n          id\n        }\n      }\n    }\n    id\n  }\n}\n\nfragment Notification_notification on FollowedArtistsArtworksGroup {\n  summary\n  artists\n  artworks: artworksConnection(first: 10) {\n    edges {\n      node {\n        artists(shallow: true) {\n          href\n          id\n        }\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n  image {\n    resized(height: 80, width: 80) {\n      url\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "da2e859381cb65cd9d5eaa42d0effffa": "query CommercialButtonsTestsRenderQuery {\n  artwork(id: \"artworkID\") {\n    ...CommercialButtons_artwork\n    id\n  }\n}\n\nfragment CommercialButtons_artwork on Artwork {\n  slug\n  internalID\n  isAcquireable\n  isOfferable\n  isInquireable\n  isBiddable\n  isInAuction\n  isBuyNowable\n  editionSets {\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  ...BuyNowButton_artwork\n  ...BidButton_artwork\n  ...MakeOfferButton_artwork\n}\n\nfragment BuyNowButton_artwork on Artwork {\n  internalID\n  saleMessage\n}\n\nfragment BidButton_artwork on Artwork {\n  slug\n  sale {\n    slug\n    internalID\n    registrationStatus {\n      qualifiedForBidding\n      id\n    }\n    isPreview\n    isOpen\n    isLiveOpen\n    isClosed\n    isRegistrationClosed\n    id\n  }\n  myLotStanding(live: true) {\n    mostRecentBid {\n      maxBid {\n        cents\n      }\n      id\n    }\n  }\n  saleArtwork {\n    increments {\n      cents\n      display\n    }\n    id\n  }\n}\n\nfragment MakeOfferButton_artwork on Artwork {\n  internalID\n}\n",
-  "2169f64fa04bc267a271a15d9bf97acc": "query CommercialButtonsTestsMutationQuery {\n  artwork(id: \"artworkID\") {\n    ...CommercialButtons_artwork\n    id\n  }\n}\n\nfragment CommercialButtons_artwork on Artwork {\n  slug\n  internalID\n  isAcquireable\n  isOfferable\n  isInquireable\n  isBiddable\n  isInAuction\n  isBuyNowable\n  editionSets {\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  ...BuyNowButton_artwork\n  ...BidButton_artwork\n  ...MakeOfferButton_artwork\n}\n\nfragment BuyNowButton_artwork on Artwork {\n  internalID\n  saleMessage\n}\n\nfragment BidButton_artwork on Artwork {\n  slug\n  sale {\n    slug\n    internalID\n    registrationStatus {\n      qualifiedForBidding\n      id\n    }\n    isPreview\n    isOpen\n    isLiveOpen\n    isClosed\n    isRegistrationClosed\n    id\n  }\n  myLotStanding(live: true) {\n    mostRecentBid {\n      maxBid {\n        cents\n      }\n      id\n    }\n  }\n  saleArtwork {\n    increments {\n      cents\n      display\n    }\n    id\n  }\n}\n\nfragment MakeOfferButton_artwork on Artwork {\n  internalID\n}\n",
-  "09fc4312cc6d21e7b3584d6e01a1ab83": "mutation FairBoothPreviewMutation(\n  $input: FollowProfileInput!\n) {\n  followProfile(input: $input) {\n    profile {\n      slug\n      internalID\n      is_followed: isFollowed\n      id\n    }\n  }\n}\n",
-  "0df9c49752891ef187577ec6e267f5c7": "query ArtworkRailRefetchQuery(\n  $id: ID!\n  $fetchContent: Boolean!\n) {\n  node(id: $id) {\n    __typename\n    ...ArtworkRail_rail_abFTe\n    id\n  }\n}\n\nfragment ArtworkRail_rail_abFTe on HomePageArtworkModule {\n  ...ArtworkRailHeader_rail\n  id\n  key\n  params {\n    medium\n    price_range: priceRange\n  }\n  context {\n    __typename\n    ... on HomePageFollowedArtistArtworkModule {\n      artist {\n        href\n        id\n      }\n    }\n    ... on HomePageRelatedArtistArtworkModule {\n      artist {\n        href\n        id\n      }\n    }\n    ... on Fair {\n      href\n      id\n    }\n    ... on Gene {\n      href\n    }\n    ... on Sale {\n      href\n    }\n    ... on Node {\n      id\n    }\n  }\n  results @include(if: $fetchContent) {\n    ...GenericGrid_artworks\n    id\n  }\n}\n\nfragment ArtworkRailHeader_rail on HomePageArtworkModule {\n  title\n  key\n  context {\n    __typename\n    ... on HomePageRelatedArtistArtworkModule {\n      artist {\n        slug\n        internalID\n        id\n      }\n      based_on: basedOn {\n        name\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on Fair {\n      id\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "7bccc77f16ad18b94cf64d34c1b2c537": "query ArtworksQuery(\n  $count: Int!\n  $cursor: String\n) {\n  me {\n    ...Artworks_me_1G22uz\n    id\n  }\n}\n\nfragment Artworks_me_1G22uz on Me {\n  followsAndSaves {\n    artworks: artworksConnection(private: true, first: $count, after: $cursor) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n      edges {\n        node {\n          ...GenericGrid_artworks\n          id\n          __typename\n        }\n        cursor\n      }\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "cc26a9f5919786a4fa9cdc103f814269": "query WorksForYouQuery(\n  $count: Int!\n  $cursor: String\n) {\n  ...WorksForYou_query_1G22uz\n}\n\nfragment WorksForYou_query_1G22uz on Query {\n  me {\n    followsAndSaves {\n      notifications: bundledArtworksByArtistConnection(sort: PUBLISHED_AT_DESC, first: $count, after: $cursor) {\n        pageInfo {\n          hasNextPage\n          endCursor\n        }\n        edges {\n          node {\n            id\n            ...Notification_notification\n            __typename\n          }\n          cursor\n        }\n      }\n    }\n    id\n  }\n  selectedArtist: artist(id: \"\") {\n    slug\n    href\n    name\n    image {\n      resized(height: 80, width: 80) {\n        url\n      }\n    }\n    artworks: artworksConnection(sort: PUBLISHED_AT_DESC, first: 6) {\n      edges {\n        node {\n          ...GenericGrid_artworks\n          id\n        }\n      }\n    }\n    id\n  }\n}\n\nfragment Notification_notification on FollowedArtistsArtworksGroup {\n  summary\n  artists\n  artworks: artworksConnection(first: 10) {\n    edges {\n      node {\n        artists(shallow: true) {\n          href\n          id\n        }\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n  image {\n    resized(height: 80, width: 80) {\n      url\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "b4ff9a3ccff3e595f0c3a9924eea69c2": "query CommercialButtonsTestsRenderQuery {\n  artwork(id: \"artworkID\") {\n    ...CommercialButtons_artwork\n    id\n  }\n}\n\nfragment CommercialButtons_artwork on Artwork {\n  slug\n  isAcquireable\n  isOfferable\n  isInquireable\n  isInAuction\n  isBuyNowable\n  editionSets {\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  ...BuyNowButton_artwork\n  ...BidButton_artwork\n  ...MakeOfferButton_artwork\n}\n\nfragment BuyNowButton_artwork on Artwork {\n  internalID\n  saleMessage\n}\n\nfragment BidButton_artwork on Artwork {\n  slug\n  sale {\n    slug\n    registrationStatus {\n      qualifiedForBidding\n      id\n    }\n    isPreview\n    isLiveOpen\n    isClosed\n    isRegistrationClosed\n    id\n  }\n  myLotStanding(live: true) {\n    mostRecentBid {\n      maxBid {\n        cents\n      }\n      id\n    }\n  }\n  saleArtwork {\n    increments {\n      cents\n    }\n    id\n  }\n}\n\nfragment MakeOfferButton_artwork on Artwork {\n  internalID\n}\n",
+  "96ca3563fe2a823087059822fd995912": "query CommercialButtonsTestsMutationQuery {\n  artwork(id: \"artworkID\") {\n    ...CommercialButtons_artwork\n    id\n  }\n}\n\nfragment CommercialButtons_artwork on Artwork {\n  slug\n  isAcquireable\n  isOfferable\n  isInquireable\n  isInAuction\n  isBuyNowable\n  editionSets {\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  ...BuyNowButton_artwork\n  ...BidButton_artwork\n  ...MakeOfferButton_artwork\n}\n\nfragment BuyNowButton_artwork on Artwork {\n  internalID\n  saleMessage\n}\n\nfragment BidButton_artwork on Artwork {\n  slug\n  sale {\n    slug\n    registrationStatus {\n      qualifiedForBidding\n      id\n    }\n    isPreview\n    isLiveOpen\n    isClosed\n    isRegistrationClosed\n    id\n  }\n  myLotStanding(live: true) {\n    mostRecentBid {\n      maxBid {\n        cents\n      }\n      id\n    }\n  }\n  saleArtwork {\n    increments {\n      cents\n    }\n    id\n  }\n}\n\nfragment MakeOfferButton_artwork on Artwork {\n  internalID\n}\n",
+  "f135de64aecf1f33218a65b94d43af44": "mutation FairBoothPreviewMutation(\n  $input: FollowProfileInput!\n) {\n  followProfile(input: $input) {\n    profile {\n      id\n      slug\n      internalID\n      isFollowed\n    }\n  }\n}\n",
+  "e553c6fe2dd63d7d9b6ba0fb2ca7a9a0": "query ArtworkRailRefetchQuery(\n  $id: ID!\n  $fetchContent: Boolean!\n) {\n  node(id: $id) {\n    __typename\n    ...ArtworkRail_rail_abFTe\n    id\n  }\n}\n\nfragment ArtworkRail_rail_abFTe on HomePageArtworkModule {\n  ...ArtworkRailHeader_rail\n  id\n  key\n  params {\n    medium\n    price_range: priceRange\n  }\n  context {\n    __typename\n    ... on HomePageFollowedArtistArtworkModule {\n      artist {\n        href\n        id\n      }\n    }\n    ... on HomePageRelatedArtistArtworkModule {\n      artist {\n        href\n        id\n      }\n    }\n    ... on Fair {\n      href\n      id\n    }\n    ... on Gene {\n      href\n    }\n    ... on Sale {\n      href\n    }\n    ... on Node {\n      id\n    }\n  }\n  results @include(if: $fetchContent) {\n    ...GenericGrid_artworks\n    id\n  }\n}\n\nfragment ArtworkRailHeader_rail on HomePageArtworkModule {\n  title\n  key\n  context {\n    __typename\n    ... on HomePageRelatedArtistArtworkModule {\n      artist {\n        slug\n        internalID\n        id\n      }\n      based_on: basedOn {\n        name\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on Fair {\n      id\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
   "23824f0df7c31765f3e7f7b11faa4216": "query ArtworkTombstoneStoryQuery {\n  artwork(id: \"unused\") {\n    ...ArtworkTombstone_artwork\n    id\n  }\n}\n\nfragment ArtworkTombstone_artwork on Artwork {\n  title\n  isInAuction\n  medium\n  date\n  cultural_maker: culturalMaker\n  saleArtwork {\n    lotLabel\n    estimate\n    id\n  }\n  partner {\n    name\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  artists {\n    name\n    href\n    ...FollowArtistButton_artist\n    id\n  }\n  dimensions {\n    in\n    cm\n  }\n  edition_of: editionOf\n  attribution_class: attributionClass {\n    shortDescription\n    id\n  }\n}\n\nfragment FollowArtistButton_artist on Artist {\n  id\n  slug\n  internalID\n  is_followed: isFollowed\n}\n",
   "77382fd385a089ff35904fa26513c733": "mutation RegistrationCreateBidderMutation(\n  $input: CreateBidderInput!\n) {\n  createBidder(input: $input) {\n    bidder {\n      internalID\n      qualified_for_bidding: qualifiedForBidding\n      id\n    }\n  }\n}\n",
   "90002af3801cc19c6dd87f114e5c3941": "mutation RegistrationCreateCreditCardMutation(\n  $input: CreditCardInput!\n) {\n  createCreditCard(input: $input) {\n    creditCardOrError {\n      __typename\n      ... on CreditCardMutationSuccess {\n        creditCard {\n          internalID\n          brand\n          name\n          last_digits: lastDigits\n          expiration_month: expirationMonth\n          expiration_year: expirationYear\n          id\n        }\n      }\n      ... on CreditCardMutationFailure {\n        mutationError {\n          type\n          message\n          detail\n        }\n      }\n    }\n  }\n}\n",
   "9e8a7891114d59f7905a4aa9027e24e0": "mutation RegistrationUpdateUserMutation(\n  $input: UpdateMyProfileInput!\n) {\n  updateMyUserProfile(input: $input) {\n    clientMutationId\n    user {\n      phone\n      id\n    }\n  }\n}\n",
-  "0c286e283330f263cab335134d1dd88e": "query indexTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    ...Show_show\n    id\n  }\n}\n\nfragment Show_show on Show {\n  ...Detail_show\n}\n\nfragment Detail_show on Show {\n  internalID\n  slug\n  name\n  description\n  city\n  isStubShow\n  images {\n    internalID\n  }\n  ...ShowHeader_show\n  ...ShowArtworksPreview_show\n  ...ShowArtistsPreview_show\n  ...Shows_show\n  location {\n    ...LocationMap_location\n    openingHours {\n      __typename\n      ... on OpeningHoursArray {\n        schedules {\n          days\n          hours\n        }\n      }\n      ... on OpeningHoursText {\n        text\n      }\n    }\n    id\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    slug\n    id\n  }\n  counts {\n    artworks\n    artists\n  }\n  status\n  partner {\n    __typename\n    ... on Partner {\n      name\n      type\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ShowHeader_show on Show {\n  slug\n  internalID\n  id\n  name\n  press_release: pressRelease\n  is_followed: isFollowed\n  end_at: endAt\n  exhibition_period: exhibitionPeriod\n  status\n  isStubShow\n  partner {\n    __typename\n    ... on Partner {\n      name\n      slug\n      href\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  images {\n    url\n    aspect_ratio: aspectRatio\n  }\n  followedArtists: followedArtistsConnection(first: 3) {\n    edges {\n      node {\n        artist {\n          name\n          href\n          slug\n          internalID\n          id\n        }\n      }\n    }\n  }\n  artists {\n    name\n    href\n    slug\n    internalID\n    id\n  }\n}\n\nfragment ShowArtworksPreview_show on Show {\n  id\n  counts {\n    artworks\n  }\n  artworks: artworksConnection(first: 6) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment ShowArtistsPreview_show on Show {\n  internalID\n  slug\n  artists {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n}\n\nfragment Shows_show on Show {\n  nearbyShows: nearbyShowsConnection(first: 20) {\n    edges {\n      node {\n        id\n        ...ShowItem_show\n      }\n    }\n  }\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment ShowItem_show on Show {\n  internalID\n  slug\n  name\n  exhibition_period: exhibitionPeriod\n  end_at: endAt\n  images {\n    url\n    aspect_ratio: aspectRatio\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "ccef6a3bd2cbfeb5850e8283cf3ec83b": "query indexTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    ...Show_show\n    id\n  }\n}\n\nfragment Show_show on Show {\n  ...Detail_show\n}\n\nfragment Detail_show on Show {\n  internalID\n  slug\n  description\n  ...ShowHeader_show\n  ...ShowArtworksPreview_show\n  ...ShowArtistsPreview_show\n  ...Shows_show\n  location {\n    ...LocationMap_location\n    openingHours {\n      __typename\n      ... on OpeningHoursArray {\n        schedules {\n          days\n          hours\n        }\n      }\n      ... on OpeningHoursText {\n        text\n      }\n    }\n    id\n  }\n  artistsWithoutArtworks {\n    slug\n    id\n  }\n  counts {\n    artworks\n    artists\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      type\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ShowHeader_show on Show {\n  slug\n  internalID\n  id\n  name\n  is_followed: isFollowed\n  end_at: endAt\n  exhibition_period: exhibitionPeriod\n  isStubShow\n  partner {\n    __typename\n    ... on Partner {\n      name\n      slug\n      href\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  images {\n    url\n    aspect_ratio: aspectRatio\n  }\n  followedArtists: followedArtistsConnection(first: 3) {\n    edges {\n      node {\n        artist {\n          name\n          href\n          slug\n          internalID\n          id\n        }\n      }\n    }\n  }\n  artists {\n    name\n    href\n    slug\n    internalID\n    id\n  }\n}\n\nfragment ShowArtworksPreview_show on Show {\n  id\n  counts {\n    artworks\n  }\n  artworks: artworksConnection(first: 6) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment ShowArtistsPreview_show on Show {\n  internalID\n  slug\n  artists {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n}\n\nfragment Shows_show on Show {\n  nearbyShows: nearbyShowsConnection(first: 20) {\n    edges {\n      node {\n        id\n        ...ShowItem_show\n      }\n    }\n  }\n}\n\nfragment LocationMap_location on Location {\n  id\n  internalID\n  city\n  address\n  address_2: address2\n  postal_code: postalCode\n  summary\n  coordinates {\n    lat\n    lng\n  }\n  day_schedules: daySchedules {\n    start_time: startTime\n    end_time: endTime\n    day_of_week: dayOfWeek\n  }\n  openingHours {\n    __typename\n    ... on OpeningHoursArray {\n      schedules {\n        days\n        hours\n      }\n    }\n    ... on OpeningHoursText {\n      text\n    }\n  }\n}\n\nfragment ShowItem_show on Show {\n  internalID\n  slug\n  name\n  exhibition_period: exhibitionPeriod\n  end_at: endAt\n  images {\n    url\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
   "be6a221111166f0d640e0c50728c3499": "query MessagesQuery(\n  $conversationID: String!\n  $count: Int!\n  $after: String\n) {\n  me {\n    conversation(id: $conversationID) {\n      ...Messages_conversation_2QE1um\n      id\n    }\n    id\n  }\n}\n\nfragment Messages_conversation_2QE1um on Conversation {\n  id\n  internalID\n  from {\n    name\n    email\n    initials\n    id\n  }\n  to {\n    name\n    initials\n    id\n  }\n  initial_message: initialMessage\n  messages(first: $count, after: $after, sort: DESC) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasPreviousPage\n      hasNextPage\n    }\n    edges {\n      cursor\n      node {\n        id\n        impulse_id: impulseID\n        is_from_user: isFromUser\n        body\n        attachments {\n          internalID\n          id\n        }\n        ...Message_message\n        __typename\n      }\n    }\n  }\n  items {\n    artwork: item {\n      __typename\n      ... on Artwork {\n        href\n        ...ArtworkPreview_artwork\n      }\n      ... on Node {\n        id\n      }\n    }\n    show: item {\n      __typename\n      ... on Show {\n        href\n        ...ShowPreview_show\n      }\n      ... on Node {\n        id\n      }\n    }\n  }\n}\n\nfragment Message_message on Message {\n  body\n  created_at: createdAt\n  is_from_user: isFromUser\n  from {\n    name\n    email\n  }\n  invoice {\n    payment_url: paymentURL\n    ...InvoicePreview_invoice\n    id\n  }\n  attachments {\n    id\n    internalID\n    content_type: contentType\n    download_url: downloadURL\n    file_name: fileName\n    ...ImagePreview_attachment\n    ...PDFPreview_attachment\n  }\n}\n\nfragment ArtworkPreview_artwork on Artwork {\n  slug\n  internalID\n  title\n  artist_names: artistNames\n  date\n  image {\n    url\n  }\n}\n\nfragment ShowPreview_show on Show {\n  slug\n  internalID\n  name\n  cover_image: coverImage {\n    url\n  }\n  fair {\n    name\n    id\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n}\n\nfragment InvoicePreview_invoice on Invoice {\n  payment_url: paymentURL\n  state\n  total\n  lewitt_invoice_id: lewittInvoiceID\n}\n\nfragment ImagePreview_attachment on Attachment {\n  download_url: downloadURL\n  ...AttachmentPreview_attachment\n}\n\nfragment PDFPreview_attachment on Attachment {\n  file_name: fileName\n  ...AttachmentPreview_attachment\n}\n\nfragment AttachmentPreview_attachment on Attachment {\n  internalID\n}\n",
-  "86fabd524076756029888cf93f009273": "query ArtworksPreviewTestsQuery {\n  fair(id: \"sofa-chicago-2018\") {\n    ...ArtworksPreview_fair\n    id\n  }\n}\n\nfragment ArtworksPreview_fair on Fair {\n  slug\n  id\n  filterArtworksConnection(first: 6, aggregations: [TOTAL]) {\n    counts {\n      total\n    }\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n    id\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "63bc1d7b9426df9bd7fa4d3e4d7e41f0": "query FairBoothTestsQuery {\n  show(id: \"two-palms-two-palms-at-art-basel-miami-beach-2018\") {\n    ...FairBooth_show\n    id\n  }\n}\n\nfragment FairBooth_show on Show {\n  slug\n  internalID\n  ...FairBoothHeader_show\n  ...ShowArtworksPreview_show\n  ...ShowArtistsPreview_show\n  ...ShowArtists_show\n  ...ShowArtworks_show\n}\n\nfragment FairBoothHeader_show on Show {\n  fair {\n    name\n    id\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      slug\n      internalID\n      id\n      href\n      profile {\n        internalID\n        slug\n        is_followed: isFollowed\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  counts {\n    artworks\n    artists\n  }\n  location {\n    display\n    id\n  }\n}\n\nfragment ShowArtworksPreview_show on Show {\n  id\n  counts {\n    artworks\n  }\n  artworks: artworksConnection(first: 6) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment ShowArtistsPreview_show on Show {\n  internalID\n  slug\n  artists {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n}\n\nfragment ShowArtists_show on Show {\n  internalID\n  slug\n  artists_grouped_by_name: artistsGroupedByName {\n    letter\n    items {\n      ...ArtistListItem_artist\n      sortable_id: sortableID\n      href\n      id\n    }\n  }\n}\n\nfragment ShowArtworks_show on Show {\n  id\n  slug\n  internalID\n  ...FilteredInfiniteScrollGrid_entity\n}\n\nfragment FilteredInfiniteScrollGrid_entity on EntityWithFilterArtworksConnectionInterface {\n  id\n  filterArtworksConnection(first: 10, medium: \"*\", priceRange: \"*-*\", aggregations: [MEDIUM, PRICE_RANGE, TOTAL]) {\n    edges {\n      node {\n        id\n        slug\n        __typename\n      }\n      cursor\n    }\n    ...Filters_filteredArtworks\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    id\n  }\n}\n\nfragment Filters_filteredArtworks on FilterArtworksConnection {\n  aggregations {\n    slice\n    counts {\n      name\n      value\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n",
-  "33cdc78670ae63eb8ad546f7a1432172": "query CategoriesMeQuery(\n  $count: Int!\n  $cursor: String\n) {\n  me {\n    ...Categories_me_1G22uz\n    id\n  }\n}\n\nfragment Categories_me_1G22uz on Me {\n  followsAndSaves {\n    genes: genesConnection(first: $count, after: $cursor) {\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      edges {\n        node {\n          gene {\n            slug\n            id\n            name\n            href\n            image {\n              url\n            }\n          }\n          id\n          __typename\n        }\n        cursor\n      }\n    }\n  }\n}\n",
+  "906622d37b7d37fa846dd25088c0724d": "query ArtworksPreviewTestsQuery {\n  fair(id: \"sofa-chicago-2018\") {\n    ...ArtworksPreview_fair\n    id\n  }\n}\n\nfragment ArtworksPreview_fair on Fair {\n  slug\n  id\n  filterArtworksConnection(first: 6, aggregations: [TOTAL]) {\n    counts {\n      total\n    }\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n    id\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "cc929182d54987e7c21da6ac1c0aca11": "query FairBoothTestsQuery {\n  show(id: \"two-palms-two-palms-at-art-basel-miami-beach-2018\") {\n    ...FairBooth_show\n    id\n  }\n}\n\nfragment FairBooth_show on Show {\n  slug\n  internalID\n  ...FairBoothHeader_show\n  ...ShowArtworksPreview_show\n  ...ShowArtistsPreview_show\n}\n\nfragment FairBoothHeader_show on Show {\n  fair {\n    name\n    id\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      slug\n      internalID\n      id\n      href\n      profile {\n        internalID\n        slug\n        is_followed: isFollowed\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  counts {\n    artworks\n    artists\n  }\n  location {\n    display\n    id\n  }\n}\n\nfragment ShowArtworksPreview_show on Show {\n  id\n  counts {\n    artworks\n  }\n  artworks: artworksConnection(first: 6) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment ShowArtistsPreview_show on Show {\n  internalID\n  slug\n  artists {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "0ee862fb0d588dc294b1620573b3677f": "query CategoriesMeQuery(\n  $count: Int!\n  $cursor: String\n) {\n  me {\n    ...Categories_me_1G22uz\n    id\n  }\n}\n\nfragment Categories_me_1G22uz on Me {\n  followsAndSaves {\n    genes: genesConnection(first: $count, after: $cursor) {\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n      edges {\n        node {\n          gene {\n            id\n            name\n            href\n            image {\n              url\n            }\n          }\n          id\n          __typename\n        }\n        cursor\n      }\n    }\n  }\n}\n",
   "9f0e327258f6f737e6a758fe7819a051": "query FilteredInfiniteScrollGridTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    id\n  }\n}\n",
   "911a1269a5a33b71e9f3a4fac6edcc98": "mutation ShowItemRowMutation(\n  $input: FollowShowInput!\n) {\n  followShow(input: $input) {\n    show {\n      slug\n      internalID\n      is_followed: isFollowed\n      id\n    }\n  }\n}\n",
-  "ccf4c6a1f56249c3b3ebaec8d757c541": "query MoreInfoTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    ...MoreInfo_show\n    id\n  }\n}\n\nfragment MoreInfo_show on Show {\n  internalID\n  slug\n  exhibition_period: exhibitionPeriod\n  pressReleaseUrl\n  openingReceptionText\n  partner {\n    __typename\n    ... on Partner {\n      website\n      type\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  press_release: pressRelease\n  events {\n    ...ShowEventSection_event\n  }\n}\n\nfragment ShowEventSection_event on ShowEventType {\n  event_type: eventType\n  description\n  start_at: startAt\n  end_at: endAt\n}\n",
-  "ce4a715a058a1bd748a7d419e8d2f46b": "query FilteredInfiniteScrollGridQuery(\n  $id: ID!\n  $count: Int!\n  $cursor: String\n  $medium: String\n  $priceRange: String\n) {\n  node(id: $id) {\n    __typename\n    ... on EntityWithFilterArtworksConnectionInterface {\n      ...FilteredInfiniteScrollGrid_entity_zoKjV\n    }\n    id\n  }\n}\n\nfragment FilteredInfiniteScrollGrid_entity_zoKjV on EntityWithFilterArtworksConnectionInterface {\n  id\n  filterArtworksConnection(first: $count, after: $cursor, medium: $medium, priceRange: $priceRange, aggregations: [MEDIUM, PRICE_RANGE, TOTAL]) {\n    edges {\n      node {\n        id\n        slug\n        __typename\n      }\n      cursor\n    }\n    ...Filters_filteredArtworks\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    id\n  }\n}\n\nfragment Filters_filteredArtworks on FilterArtworksConnection {\n  aggregations {\n    slice\n    counts {\n      name\n      value\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "b11c8a798c8d8923250dfea87cb9987f": "query FavoriteShowsQuery {\n  me {\n    ...Shows_me\n    id\n  }\n}\n\nfragment Shows_me on Me {\n  followsAndSaves {\n    shows: showsConnection(first: 10) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n      edges {\n        node {\n          id\n          ...ShowItemRow_show\n          __typename\n        }\n        cursor\n      }\n    }\n  }\n}\n\nfragment ShowItemRow_show on Show {\n  id\n  slug\n  internalID\n  is_followed: isFollowed\n  name\n  isStubShow\n  partner {\n    __typename\n    ... on Partner {\n      name\n      profile {\n        image {\n          url(version: \"square\")\n        }\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  href\n  exhibition_period: exhibitionPeriod\n  status\n  cover_image: coverImage {\n    url\n    aspect_ratio: aspectRatio\n  }\n  is_fair_booth: isFairBooth\n  start_at: startAt\n  end_at: endAt\n}\n",
-  "5172e7b282bccabcc969e8cb36633544": "query ForYouRefetchQuery {\n  forYou: homePage {\n    ...ForYou_forYou\n  }\n}\n\nfragment ForYou_forYou on HomePage {\n  artwork_modules: artworkModules(maxRails: -1, maxFollowedGeneRails: -1, order: [ACTIVE_BIDS, RECENTLY_VIEWED_WORKS, RECOMMENDED_WORKS, FOLLOWED_ARTISTS, RELATED_ARTISTS, FOLLOWED_GALLERIES, SAVED_WORKS, LIVE_AUCTIONS, CURRENT_FAIRS, FOLLOWED_GENES, GENERIC_GENES], exclude: [FOLLOWED_ARTISTS]) {\n    id\n    ...ArtworkCarousel_rail\n  }\n  artist_modules: artistModules {\n    id\n    ...ArtistRail_rail\n  }\n  fairs_module: fairsModule {\n    ...FairsRail_fairs_module\n  }\n}\n\nfragment ArtworkCarousel_rail on HomePageArtworkModule {\n  ...ArtworkCarouselHeader_rail\n  id\n  key\n  params {\n    medium\n    price_range: priceRange\n  }\n  context {\n    __typename\n    ... on HomePageFollowedArtistArtworkModule {\n      artist {\n        href\n        id\n      }\n    }\n    ... on HomePageRelatedArtistArtworkModule {\n      artist {\n        href\n        id\n      }\n    }\n    ... on Fair {\n      href\n      id\n    }\n    ... on Gene {\n      href\n    }\n    ... on Sale {\n      href\n    }\n    ... on Node {\n      id\n    }\n  }\n  results {\n    ...GenericGrid_artworks\n    id\n  }\n}\n\nfragment ArtistRail_rail on HomePageArtistModule {\n  id\n  key\n  results {\n    id\n    internalID\n    ...ArtistCard_artist\n  }\n}\n\nfragment FairsRail_fairs_module on HomePageFairsModule {\n  results {\n    id\n    slug\n    name\n    profile {\n      slug\n      id\n    }\n    mobile_image: mobileImage {\n      internalID\n      url\n    }\n  }\n}\n\nfragment ArtistCard_artist on Artist {\n  id\n  slug\n  internalID\n  href\n  name\n  formattedArtworksCount\n  formattedNationalityAndBirthday\n  image {\n    url(version: \"large\")\n  }\n}\n\nfragment ArtworkCarouselHeader_rail on HomePageArtworkModule {\n  title\n  key\n  followedArtistContext: context {\n    __typename\n    ... on HomePageFollowedArtistArtworkModule {\n      artist {\n        internalID\n        slug\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on Fair {\n      id\n    }\n  }\n  relatedArtistContext: context {\n    __typename\n    ... on HomePageRelatedArtistArtworkModule {\n      artist {\n        internalID\n        slug\n        id\n      }\n      based_on: basedOn {\n        name\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on Fair {\n      id\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "f0b91ec66bc0c2a61f9660292a98b39f": "query SelectMaxBidRefetchQuery(\n  $saleArtworkNodeID: ID!\n) {\n  node(id: $saleArtworkNodeID) {\n    __typename\n    ...SelectMaxBid_sale_artwork\n    id\n  }\n}\n\nfragment SelectMaxBid_sale_artwork on SaleArtwork {\n  id\n  increments(useMyMaxBid: true) {\n    display\n    cents\n  }\n  ...ConfirmBid_sale_artwork\n}\n\nfragment ConfirmBid_sale_artwork on SaleArtwork {\n  internalID\n  sale {\n    slug\n    live_start_at: liveStartAt\n    end_at: endAt\n    id\n  }\n  artwork {\n    slug\n    title\n    date\n    artist_names: artistNames\n    image {\n      url(version: \"small\")\n    }\n    id\n  }\n  lot_label: lotLabel\n  ...BidResult_sale_artwork\n}\n\nfragment BidResult_sale_artwork on SaleArtwork {\n  minimum_next_bid: minimumNextBid {\n    amount\n    cents\n    display\n  }\n  sale {\n    live_start_at: liveStartAt\n    end_at: endAt\n    slug\n    id\n  }\n}\n",
+  "8335a74249c2d3565dc22caa88ba4acd": "query MoreInfoTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    ...MoreInfo_show\n    id\n  }\n}\n\nfragment MoreInfo_show on Show {\n  internalID\n  slug\n  pressReleaseUrl\n  openingReceptionText\n  partner {\n    __typename\n    ... on Partner {\n      website\n      type\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  press_release: pressRelease\n  events {\n    ...ShowEventSection_event\n  }\n}\n\nfragment ShowEventSection_event on ShowEventType {\n  event_type: eventType\n  description\n  start_at: startAt\n  end_at: endAt\n}\n",
+  "2bfee101a0e4eeb7336e17877772c54c": "query FilteredInfiniteScrollGridQuery(\n  $id: ID!\n  $count: Int!\n  $cursor: String\n  $medium: String\n  $priceRange: String\n) {\n  node(id: $id) {\n    __typename\n    ... on EntityWithFilterArtworksConnectionInterface {\n      ...FilteredInfiniteScrollGrid_entity_zoKjV\n    }\n    id\n  }\n}\n\nfragment FilteredInfiniteScrollGrid_entity_zoKjV on EntityWithFilterArtworksConnectionInterface {\n  id\n  filterArtworksConnection(first: $count, after: $cursor, medium: $medium, priceRange: $priceRange, aggregations: [MEDIUM, PRICE_RANGE, TOTAL]) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...Filters_filteredArtworks\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    id\n  }\n}\n\nfragment Filters_filteredArtworks on FilterArtworksConnection {\n  aggregations {\n    slice\n    counts {\n      name\n      value\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "9ecd89570c0c0540ab703b2aa64b3e84": "query FavoriteShowsQuery {\n  me {\n    ...Shows_me\n    id\n  }\n}\n\nfragment Shows_me on Me {\n  followsAndSaves {\n    shows: showsConnection(first: 10) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n      edges {\n        node {\n          id\n          ...ShowItemRow_show\n          __typename\n        }\n        cursor\n      }\n    }\n  }\n}\n\nfragment ShowItemRow_show on Show {\n  id\n  slug\n  internalID\n  is_followed: isFollowed\n  name\n  isStubShow\n  partner {\n    __typename\n    ... on Partner {\n      name\n      profile {\n        image {\n          url(version: \"square\")\n        }\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  href\n  exhibition_period: exhibitionPeriod\n  status\n  cover_image: coverImage {\n    url\n  }\n  is_fair_booth: isFairBooth\n  end_at: endAt\n}\n",
+  "eb84b9ee3570700eaac846a037164132": "query ForYouRefetchQuery {\n  forYou: homePage {\n    ...ForYou_forYou\n  }\n}\n\nfragment ForYou_forYou on HomePage {\n  artwork_modules: artworkModules(maxRails: -1, maxFollowedGeneRails: -1, order: [ACTIVE_BIDS, RECENTLY_VIEWED_WORKS, RECOMMENDED_WORKS, FOLLOWED_ARTISTS, RELATED_ARTISTS, FOLLOWED_GALLERIES, SAVED_WORKS, LIVE_AUCTIONS, CURRENT_FAIRS, FOLLOWED_GENES, GENERIC_GENES], exclude: [FOLLOWED_ARTISTS]) {\n    id\n    ...ArtworkCarousel_rail\n  }\n  artist_modules: artistModules {\n    id\n    ...ArtistRail_rail\n  }\n  fairs_module: fairsModule {\n    ...FairsRail_fairs_module\n  }\n}\n\nfragment ArtworkCarousel_rail on HomePageArtworkModule {\n  ...ArtworkCarouselHeader_rail\n  id\n  key\n  params {\n    medium\n    price_range: priceRange\n  }\n  context {\n    __typename\n    ... on HomePageFollowedArtistArtworkModule {\n      artist {\n        href\n        id\n      }\n    }\n    ... on HomePageRelatedArtistArtworkModule {\n      artist {\n        href\n        id\n      }\n    }\n    ... on Fair {\n      href\n      id\n    }\n    ... on Gene {\n      href\n    }\n    ... on Sale {\n      href\n    }\n    ... on Node {\n      id\n    }\n  }\n  results {\n    ...GenericGrid_artworks\n    id\n  }\n}\n\nfragment ArtistRail_rail on HomePageArtistModule {\n  id\n  key\n  results {\n    id\n    internalID\n    ...ArtistCard_artist\n  }\n}\n\nfragment FairsRail_fairs_module on HomePageFairsModule {\n  results {\n    id\n    slug\n    profile {\n      slug\n      id\n    }\n    mobileImage {\n      url\n    }\n  }\n}\n\nfragment ArtistCard_artist on Artist {\n  id\n  slug\n  internalID\n  href\n  name\n  formattedArtworksCount\n  formattedNationalityAndBirthday\n  image {\n    url(version: \"large\")\n  }\n}\n\nfragment ArtworkCarouselHeader_rail on HomePageArtworkModule {\n  title\n  key\n  followedArtistContext: context {\n    __typename\n    ... on HomePageFollowedArtistArtworkModule {\n      artist {\n        internalID\n        slug\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on Fair {\n      id\n    }\n  }\n  relatedArtistContext: context {\n    __typename\n    ... on HomePageRelatedArtistArtworkModule {\n      artist {\n        internalID\n        slug\n        id\n      }\n      based_on: basedOn {\n        name\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on Fair {\n      id\n    }\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "fe2507ee54eaefdc6a529a461e322dfd": "query SelectMaxBidRefetchQuery(\n  $saleArtworkNodeID: ID!\n) {\n  node(id: $saleArtworkNodeID) {\n    __typename\n    ...SelectMaxBid_sale_artwork\n    id\n  }\n}\n\nfragment SelectMaxBid_sale_artwork on SaleArtwork {\n  id\n  increments(useMyMaxBid: true) {\n    display\n  }\n  ...ConfirmBid_sale_artwork\n}\n\nfragment ConfirmBid_sale_artwork on SaleArtwork {\n  internalID\n  sale {\n    slug\n    live_start_at: liveStartAt\n    end_at: endAt\n    id\n  }\n  artwork {\n    slug\n    title\n    date\n    artist_names: artistNames\n    image {\n      url(version: \"small\")\n    }\n    id\n  }\n  lot_label: lotLabel\n  ...BidResult_sale_artwork\n}\n\nfragment BidResult_sale_artwork on SaleArtwork {\n  sale {\n    liveStartAt\n    endAt\n    slug\n    id\n  }\n}\n",
   "0690e06ee79f5c42829d0b519d4df860": "query FiltersTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    id\n  }\n}\n",
-  "c1ba96606665df6d8db595bd4f9db631": "query MoreInfoQuery(\n  $showID: String!\n) {\n  show(id: $showID) {\n    ...MoreInfo_show\n    id\n  }\n}\n\nfragment MoreInfo_show on Show {\n  internalID\n  slug\n  exhibition_period: exhibitionPeriod\n  pressReleaseUrl\n  openingReceptionText\n  partner {\n    __typename\n    ... on Partner {\n      website\n      type\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  press_release: pressRelease\n  events {\n    ...ShowEventSection_event\n  }\n}\n\nfragment ShowEventSection_event on ShowEventType {\n  event_type: eventType\n  description\n  start_at: startAt\n  end_at: endAt\n}\n",
+  "042f01be8d485251cc5959b1c5663a5d": "query MoreInfoQuery(\n  $showID: String!\n) {\n  show(id: $showID) {\n    ...MoreInfo_show\n    id\n  }\n}\n\nfragment MoreInfo_show on Show {\n  internalID\n  slug\n  pressReleaseUrl\n  openingReceptionText\n  partner {\n    __typename\n    ... on Partner {\n      website\n      type\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  press_release: pressRelease\n  events {\n    ...ShowEventSection_event\n  }\n}\n\nfragment ShowEventSection_event on ShowEventType {\n  event_type: eventType\n  description\n  start_at: startAt\n  end_at: endAt\n}\n",
   "7b6a7cadd05092bf22e9f9cba84e0a23": "mutation UpdateConversationMutation(\n  $input: UpdateConversationMutationInput!\n) {\n  updateConversation(input: $input) {\n    conversation {\n      internalID\n      from_last_viewed_message_id: fromLastViewedMessageID\n      id\n    }\n  }\n}\n",
-  "21c3b692a0a5a7285359d5d74c4cc7b7": "mutation ContextCardFollowMutation(\n  $input: FollowShowInput!\n) {\n  followShow(input: $input) {\n    show {\n      slug\n      internalID\n      is_followed: isFollowed\n      id\n    }\n  }\n}\n",
-  "60c3451afb9038d8cd7273e435f401e0": "query PartnerCardTestsErrorQuery {\n  artwork(id: \"artworkID\") {\n    ...PartnerCard_artwork\n    id\n  }\n}\n\nfragment PartnerCard_artwork on Artwork {\n  sale {\n    isBenefit\n    isGalleryAuction\n    id\n  }\n  partner {\n    is_default_profile_public: isDefaultProfilePublic\n    type\n    name\n    slug\n    internalID\n    id\n    href\n    initials\n    profile {\n      id\n      internalID\n      slug\n      is_followed: isFollowed\n      icon {\n        url(version: \"square140\")\n      }\n    }\n    locations {\n      city\n      id\n    }\n  }\n}\n",
-  "4e8c2b9f02a11999ba37ea9bf25fb90f": "query PartnerCardTestsQuery {\n  artwork(id: \"artworkID\") {\n    ...PartnerCard_artwork\n    id\n  }\n}\n\nfragment PartnerCard_artwork on Artwork {\n  sale {\n    isBenefit\n    isGalleryAuction\n    id\n  }\n  partner {\n    is_default_profile_public: isDefaultProfilePublic\n    type\n    name\n    slug\n    internalID\n    id\n    href\n    initials\n    profile {\n      id\n      internalID\n      slug\n      is_followed: isFollowed\n      icon {\n        url(version: \"square140\")\n      }\n    }\n    locations {\n      city\n      id\n    }\n  }\n}\n",
+  "d492efc5bb01d11b8045f4bd9a8013d7": "mutation ContextCardFollowMutation(\n  $input: FollowShowInput!\n) {\n  followShow(input: $input) {\n    show {\n      slug\n      internalID\n      isFollowed\n      id\n    }\n  }\n}\n",
+  "f5f85978663c562454138f0af5b1fa37": "query PartnerCardTestsErrorQuery {\n  artwork(id: \"artworkID\") {\n    ...PartnerCard_artwork\n    id\n  }\n}\n\nfragment PartnerCard_artwork on Artwork {\n  sale {\n    isBenefit\n    isGalleryAuction\n    id\n  }\n  partner {\n    is_default_profile_public: isDefaultProfilePublic\n    type\n    name\n    slug\n    id\n    href\n    initials\n    profile {\n      id\n      internalID\n      is_followed: isFollowed\n      icon {\n        url(version: \"square140\")\n      }\n    }\n    locations {\n      city\n      id\n    }\n  }\n}\n",
+  "4e32952ed4e198c5fbd4677537ce0a19": "query PartnerCardTestsQuery {\n  artwork(id: \"artworkID\") {\n    ...PartnerCard_artwork\n    id\n  }\n}\n\nfragment PartnerCard_artwork on Artwork {\n  sale {\n    isBenefit\n    isGalleryAuction\n    id\n  }\n  partner {\n    is_default_profile_public: isDefaultProfilePublic\n    type\n    name\n    slug\n    id\n    href\n    initials\n    profile {\n      id\n      internalID\n      is_followed: isFollowed\n      icon {\n        url(version: \"square140\")\n      }\n    }\n    locations {\n      city\n      id\n    }\n  }\n}\n",
   "42cf1410af60e9e4f5dde954d1ab44d2": "query ShowArtistsPreviewTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    ...ShowArtistsPreview_show\n    id\n  }\n}\n\nfragment ShowArtistsPreview_show on Show {\n  internalID\n  slug\n  artists {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n",
   "dab411c27ae5496a83799e2909ef0d29": "query BidderPositionQuery(\n  $bidderPositionID: String!\n) {\n  me {\n    bidder_position: bidderPosition(id: $bidderPositionID) {\n      status\n      message_header: messageHeader\n      message_description_md: messageDescriptionMD\n      position {\n        internalID\n        suggested_next_bid: suggestedNextBid {\n          cents\n          display\n        }\n        id\n      }\n    }\n    id\n  }\n}\n",
   "21d8ec4ea76fb5e8b71f3045b76905a0": "query FairMoreInfoTestsQuery {\n  fair(id: \"sofa-chicago-2018\") {\n    links\n    about\n    ticketsLink\n    id\n  }\n}\n",
-  "fe4c89fbdebe0b713ce33a76f9e1774a": "query BidButtonTestsQuery {\n  artwork(id: \"auction_artwork\") {\n    ...BidButton_artwork\n    id\n  }\n}\n\nfragment BidButton_artwork on Artwork {\n  slug\n  sale {\n    slug\n    internalID\n    registrationStatus {\n      qualifiedForBidding\n      id\n    }\n    isPreview\n    isOpen\n    isLiveOpen\n    isClosed\n    isRegistrationClosed\n    id\n  }\n  myLotStanding(live: true) {\n    mostRecentBid {\n      maxBid {\n        cents\n      }\n      id\n    }\n  }\n  saleArtwork {\n    increments {\n      cents\n      display\n    }\n    id\n  }\n}\n",
-  "4a00086070d2a5b0c65171edd6bc3626": "query FairBoothQuery(\n  $showID: String!\n) {\n  show(id: $showID) {\n    ...FairBooth_show\n    id\n  }\n}\n\nfragment FairBooth_show on Show {\n  slug\n  internalID\n  ...FairBoothHeader_show\n  ...ShowArtworksPreview_show\n  ...ShowArtistsPreview_show\n  ...ShowArtists_show\n  ...ShowArtworks_show\n}\n\nfragment FairBoothHeader_show on Show {\n  fair {\n    name\n    id\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      slug\n      internalID\n      id\n      href\n      profile {\n        internalID\n        slug\n        is_followed: isFollowed\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  counts {\n    artworks\n    artists\n  }\n  location {\n    display\n    id\n  }\n}\n\nfragment ShowArtworksPreview_show on Show {\n  id\n  counts {\n    artworks\n  }\n  artworks: artworksConnection(first: 6) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment ShowArtistsPreview_show on Show {\n  internalID\n  slug\n  artists {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n}\n\nfragment ShowArtists_show on Show {\n  internalID\n  slug\n  artists_grouped_by_name: artistsGroupedByName {\n    letter\n    items {\n      ...ArtistListItem_artist\n      sortable_id: sortableID\n      href\n      id\n    }\n  }\n}\n\nfragment ShowArtworks_show on Show {\n  id\n  slug\n  internalID\n  ...FilteredInfiniteScrollGrid_entity\n}\n\nfragment FilteredInfiniteScrollGrid_entity on EntityWithFilterArtworksConnectionInterface {\n  id\n  filterArtworksConnection(first: 10, medium: \"*\", priceRange: \"*-*\", aggregations: [MEDIUM, PRICE_RANGE, TOTAL]) {\n    edges {\n      node {\n        id\n        slug\n        __typename\n      }\n      cursor\n    }\n    ...Filters_filteredArtworks\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    id\n  }\n}\n\nfragment Filters_filteredArtworks on FilterArtworksConnection {\n  aggregations {\n    slice\n    counts {\n      name\n      value\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n",
-  "fe7a47aeff766802ed4d312c06ca6610": "query ArtistQuery(\n  $artistID: String!\n  $isPad: Boolean!\n) {\n  artist(id: $artistID) {\n    ...Artist_artist\n    id\n  }\n}\n\nfragment Artist_artist on Artist {\n  internalID\n  slug\n  has_metadata: hasMetadata\n  counts {\n    artworks\n    partner_shows: partnerShows\n    related_artists: relatedArtists\n    articles\n  }\n  ...Header_artist\n  ...About_artist\n  ...Shows_artist\n  ...Artworks_artist\n}\n\nfragment Header_artist on Artist {\n  id\n  internalID\n  slug\n  isFollowed\n  name\n  nationality\n  birthday\n  counts {\n    follows\n  }\n}\n\nfragment About_artist on Artist {\n  has_metadata: hasMetadata\n  is_display_auction_link: isDisplayAuctionLink\n  slug\n  ...Biography_artist\n  related {\n    artists: artistsConnection(first: 16) {\n      edges {\n        node {\n          ...RelatedArtists_artists\n          id\n        }\n      }\n    }\n  }\n  articles: articlesConnection(first: 10) {\n    edges {\n      node {\n        ...Articles_articles\n        id\n      }\n    }\n  }\n}\n\nfragment Shows_artist on Artist {\n  currentShows: showsConnection(status: \"running\", first: 10) {\n    edges {\n      node {\n        ...VariableSizeShowsList_shows\n        id\n      }\n    }\n  }\n  upcomingShows: showsConnection(status: \"upcoming\", first: 10) {\n    edges {\n      node {\n        ...VariableSizeShowsList_shows\n        id\n      }\n    }\n  }\n  pastSmallShows: showsConnection(status: \"closed\", first: 20) @skip(if: $isPad) {\n    edges {\n      node {\n        ...SmallList_shows\n        id\n      }\n    }\n  }\n  pastLargeShows: showsConnection(status: \"closed\", first: 20) @include(if: $isPad) {\n    edges {\n      node {\n        ...VariableSizeShowsList_shows\n        id\n      }\n    }\n  }\n}\n\nfragment Artworks_artist on Artist {\n  counts {\n    artworks\n    for_sale_artworks: forSaleArtworks\n  }\n  ...ArtistForSaleArtworksGrid_artist\n  ...ArtistNotForSaleArtworksGrid_artist\n}\n\nfragment ArtistForSaleArtworksGrid_artist on Artist {\n  id\n  forSaleArtworks: artworksConnection(first: 10, filter: [IS_FOR_SALE], sort: PARTNER_UPDATED_AT_DESC) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment ArtistNotForSaleArtworksGrid_artist on Artist {\n  id\n  notForSaleArtworks: artworksConnection(first: 10, filter: [IS_NOT_FOR_SALE], sort: PARTNER_UPDATED_AT_DESC) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n\nfragment VariableSizeShowsList_shows on Show {\n  id\n  ...ArtistShow_show\n}\n\nfragment SmallList_shows on Show {\n  ...ArtistShow_show\n}\n\nfragment ArtistShow_show on Show {\n  slug\n  href\n  is_fair_booth: isFairBooth\n  cover_image: coverImage {\n    url(version: \"large\")\n  }\n  ...Metadata_show\n}\n\nfragment Metadata_show on Show {\n  kind\n  name\n  exhibition_period: exhibitionPeriod\n  status_update: statusUpdate\n  status\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on ExternalPartner {\n      name\n      id\n    }\n    ... on Node {\n      id\n    }\n  }\n  location {\n    city\n    id\n  }\n}\n\nfragment Biography_artist on Artist {\n  bio\n  blurb\n}\n\nfragment RelatedArtists_artists on Artist {\n  id\n  ...RelatedArtist_artist\n}\n\nfragment Articles_articles on Article {\n  id\n  ...Article_article\n}\n\nfragment Article_article on Article {\n  thumbnail_title: thumbnailTitle\n  href\n  author {\n    name\n    id\n  }\n  thumbnail_image: thumbnailImage {\n    url(version: \"large\")\n  }\n}\n\nfragment RelatedArtist_artist on Artist {\n  href\n  name\n  counts {\n    for_sale_artworks: forSaleArtworks\n    artworks\n  }\n  image {\n    url(version: \"large\")\n  }\n}\n",
+  "e7747d2e2e0f06cb72388e3869d50387": "query BidButtonTestsQuery {\n  artwork(id: \"auction_artwork\") {\n    ...BidButton_artwork\n    id\n  }\n}\n\nfragment BidButton_artwork on Artwork {\n  slug\n  sale {\n    slug\n    registrationStatus {\n      qualifiedForBidding\n      id\n    }\n    isPreview\n    isLiveOpen\n    isClosed\n    isRegistrationClosed\n    id\n  }\n  myLotStanding(live: true) {\n    mostRecentBid {\n      maxBid {\n        cents\n      }\n      id\n    }\n  }\n  saleArtwork {\n    increments {\n      cents\n    }\n    id\n  }\n}\n",
+  "2cb6bff2ecba2bf7034929f24b832bbe": "query FairBoothQuery(\n  $showID: String!\n) {\n  show(id: $showID) {\n    ...FairBooth_show\n    id\n  }\n}\n\nfragment FairBooth_show on Show {\n  slug\n  internalID\n  ...FairBoothHeader_show\n  ...ShowArtworksPreview_show\n  ...ShowArtistsPreview_show\n}\n\nfragment FairBoothHeader_show on Show {\n  fair {\n    name\n    id\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      slug\n      internalID\n      id\n      href\n      profile {\n        internalID\n        slug\n        is_followed: isFollowed\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  counts {\n    artworks\n    artists\n  }\n  location {\n    display\n    id\n  }\n}\n\nfragment ShowArtworksPreview_show on Show {\n  id\n  counts {\n    artworks\n  }\n  artworks: artworksConnection(first: 6) {\n    edges {\n      node {\n        ...GenericGrid_artworks\n        id\n      }\n    }\n  }\n}\n\nfragment ShowArtistsPreview_show on Show {\n  internalID\n  slug\n  artists {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n  artists_without_artworks: artistsWithoutArtworks {\n    id\n    internalID\n    slug\n    href\n    ...ArtistListItem_artist\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "15be4e9ef408a4aa7c0853c99a726b68": "query ArtistQuery(\n  $artistID: String!\n  $isPad: Boolean!\n) {\n  artist(id: $artistID) {\n    ...Artist_artist\n    id\n  }\n}\n\nfragment Artist_artist on Artist {\n  internalID\n  slug\n  has_metadata: hasMetadata\n  counts {\n    artworks\n    partner_shows: partnerShows\n    related_artists: relatedArtists\n    articles\n  }\n  ...Header_artist\n  ...About_artist\n  ...Shows_artist\n  ...Artworks_artist\n}\n\nfragment Header_artist on Artist {\n  id\n  internalID\n  slug\n  isFollowed\n  name\n  nationality\n  birthday\n  counts {\n    follows\n  }\n}\n\nfragment About_artist on Artist {\n  has_metadata: hasMetadata\n  is_display_auction_link: isDisplayAuctionLink\n  slug\n  ...Biography_artist\n  related {\n    artists: artistsConnection(first: 16) {\n      edges {\n        node {\n          ...RelatedArtists_artists\n          id\n        }\n      }\n    }\n  }\n  articles: articlesConnection(first: 10) {\n    edges {\n      node {\n        ...Articles_articles\n        id\n      }\n    }\n  }\n}\n\nfragment Shows_artist on Artist {\n  currentShows: showsConnection(status: \"running\", first: 10) {\n    edges {\n      node {\n        ...VariableSizeShowsList_shows\n        id\n      }\n    }\n  }\n  upcomingShows: showsConnection(status: \"upcoming\", first: 10) {\n    edges {\n      node {\n        ...VariableSizeShowsList_shows\n        id\n      }\n    }\n  }\n  pastSmallShows: showsConnection(status: \"closed\", first: 20) @skip(if: $isPad) {\n    edges {\n      node {\n        ...SmallList_shows\n        id\n      }\n    }\n  }\n  pastLargeShows: showsConnection(status: \"closed\", first: 20) @include(if: $isPad) {\n    edges {\n      node {\n        ...VariableSizeShowsList_shows\n        id\n      }\n    }\n  }\n}\n\nfragment Artworks_artist on Artist {\n  counts {\n    artworks\n    for_sale_artworks: forSaleArtworks\n  }\n  ...ArtistForSaleArtworksGrid_artist\n  ...ArtistNotForSaleArtworksGrid_artist\n}\n\nfragment ArtistForSaleArtworksGrid_artist on Artist {\n  id\n  forSaleArtworks: artworksConnection(first: 10, filter: [IS_FOR_SALE], sort: PARTNER_UPDATED_AT_DESC) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment ArtistNotForSaleArtworksGrid_artist on Artist {\n  id\n  notForSaleArtworks: artworksConnection(first: 10, filter: [IS_NOT_FOR_SALE], sort: PARTNER_UPDATED_AT_DESC) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n\nfragment VariableSizeShowsList_shows on Show {\n  id\n  ...ArtistShow_show\n}\n\nfragment SmallList_shows on Show {\n  ...ArtistShow_show\n}\n\nfragment ArtistShow_show on Show {\n  slug\n  href\n  is_fair_booth: isFairBooth\n  cover_image: coverImage {\n    url(version: \"large\")\n  }\n  ...Metadata_show\n}\n\nfragment Metadata_show on Show {\n  kind\n  name\n  exhibition_period: exhibitionPeriod\n  status_update: statusUpdate\n  status\n  partner {\n    __typename\n    ... on Partner {\n      name\n    }\n    ... on ExternalPartner {\n      name\n      id\n    }\n    ... on Node {\n      id\n    }\n  }\n  location {\n    city\n    id\n  }\n}\n\nfragment Biography_artist on Artist {\n  bio\n  blurb\n}\n\nfragment RelatedArtists_artists on Artist {\n  id\n  ...RelatedArtist_artist\n}\n\nfragment Articles_articles on Article {\n  id\n  ...Article_article\n}\n\nfragment Article_article on Article {\n  thumbnail_title: thumbnailTitle\n  href\n  author {\n    name\n    id\n  }\n  thumbnail_image: thumbnailImage {\n    url(version: \"large\")\n  }\n}\n\nfragment RelatedArtist_artist on Artist {\n  href\n  name\n  counts {\n    forSaleArtworks\n    artworks\n  }\n  image {\n    url(version: \"large\")\n  }\n}\n",
   "db16fc468ff20672a6f117fc1b6f0165": "mutation SendConversationMessageMutation(\n  $input: SendConversationMessageMutationInput!\n) {\n  sendConversationMessage(input: $input) {\n    messageEdge {\n      node {\n        impulse_id: impulseID\n        is_from_user: isFromUser\n        body\n        id\n        ...Message_message\n      }\n    }\n  }\n}\n\nfragment Message_message on Message {\n  body\n  created_at: createdAt\n  is_from_user: isFromUser\n  from {\n    name\n    email\n  }\n  invoice {\n    payment_url: paymentURL\n    ...InvoicePreview_invoice\n    id\n  }\n  attachments {\n    id\n    internalID\n    content_type: contentType\n    download_url: downloadURL\n    file_name: fileName\n    ...ImagePreview_attachment\n    ...PDFPreview_attachment\n  }\n}\n\nfragment InvoicePreview_invoice on Invoice {\n  payment_url: paymentURL\n  state\n  total\n  lewitt_invoice_id: lewittInvoiceID\n}\n\nfragment ImagePreview_attachment on Attachment {\n  download_url: downloadURL\n  ...AttachmentPreview_attachment\n}\n\nfragment PDFPreview_attachment on Attachment {\n  file_name: fileName\n  ...AttachmentPreview_attachment\n}\n\nfragment AttachmentPreview_attachment on Attachment {\n  internalID\n}\n",
   "81a1728ed5a285d5dccbf781875f2108": "query FairMoreInfoQuery(\n  $fairID: String!\n) {\n  fair(id: $fairID) {\n    ...FairMoreInfo_fair\n    id\n  }\n}\n\nfragment FairMoreInfo_fair on Fair {\n  organizer {\n    website\n    id\n  }\n  slug\n  internalID\n  about\n  ticketsLink\n}\n",
   "15aa0a85a06807f72c1b64cbb3c312e8": "mutation updateConsignmentSubmissionMutation(\n  $input: UpdateSubmissionMutationInput!\n) {\n  updateConsignmentSubmission(input: $input) {\n    consignmentSubmission {\n      internalID\n    }\n  }\n}\n",
-  "386aa36282a025b6c65fc9a129b345b6": "query ConversationsQuery(\n  $count: Int!\n  $cursor: String\n) {\n  me {\n    ...Conversations_me_1G22uz\n    id\n  }\n}\n\nfragment Conversations_me_1G22uz on Me {\n  conversations: conversationsConnection(first: $count, after: $cursor) {\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    edges {\n      node {\n        internalID\n        last_message: lastMessage\n        ...ConversationSnippet_conversation\n        id\n        __typename\n      }\n      cursor\n    }\n  }\n}\n\nfragment ConversationSnippet_conversation on Conversation {\n  internalID\n  to {\n    name\n    id\n  }\n  last_message: lastMessage\n  last_message_at: lastMessageAt\n  unread\n  items {\n    item {\n      __typename\n      ... on Artwork {\n        date\n        title\n        artist_names: artistNames\n        image {\n          url\n        }\n      }\n      ... on Show {\n        fair {\n          name\n          id\n        }\n        name\n        cover_image: coverImage {\n          url\n        }\n      }\n      ... on Node {\n        id\n      }\n    }\n  }\n}\n",
-  "c36c543b48219afbeb1466b9c4405d7e": "query ArtworkQuery(\n  $artworkID: String!\n) {\n  artwork(id: $artworkID) {\n    ...Artwork_artwork\n    id\n  }\n}\n\nfragment Artwork_artwork on Artwork {\n  additional_information: additionalInformation\n  description\n  provenance\n  exhibition_history: exhibitionHistory\n  literature\n  partner {\n    type\n    id\n  }\n  artist {\n    name\n    biography_blurb: biographyBlurb {\n      text\n    }\n    id\n  }\n  sale {\n    isBenefit\n    isGalleryAuction\n    id\n  }\n  category\n  conditionDescription {\n    details\n  }\n  signature\n  signatureInfo {\n    details\n  }\n  certificateOfAuthenticity {\n    details\n  }\n  framed {\n    details\n  }\n  series\n  publisher\n  manufacturer\n  image_rights: imageRights\n  context {\n    __typename\n    ... on Node {\n      id\n    }\n    ... on Fair {\n      id\n    }\n  }\n  contextGrids {\n    __typename\n    artworks: artworksConnection(first: 6) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n  slug\n  internalID\n  id\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  is_biddable: isBiddable\n  is_inquireable: isInquireable\n  availability\n  ...PartnerCard_artwork\n  ...AboutWork_artwork\n  ...OtherWorks_artwork\n  ...AboutArtist_artwork\n  ...ArtworkDetails_artwork\n  ...ContextCard_artwork\n  ...ArtworkHeader_artwork\n  ...CommercialInformation_artwork\n  ...ArtworkHistory_artwork\n}\n\nfragment PartnerCard_artwork on Artwork {\n  sale {\n    isBenefit\n    isGalleryAuction\n    id\n  }\n  partner {\n    is_default_profile_public: isDefaultProfilePublic\n    type\n    name\n    slug\n    internalID\n    id\n    href\n    initials\n    profile {\n      id\n      internalID\n      slug\n      is_followed: isFollowed\n      icon {\n        url(version: \"square140\")\n      }\n    }\n    locations {\n      city\n      id\n    }\n  }\n}\n\nfragment AboutWork_artwork on Artwork {\n  additional_information: additionalInformation\n  description\n}\n\nfragment OtherWorks_artwork on Artwork {\n  contextGrids {\n    __typename\n    title\n    ctaTitle\n    ctaHref\n    artworks: artworksConnection(first: 6) {\n      edges {\n        node {\n          ...GenericGrid_artworks\n          id\n        }\n      }\n    }\n  }\n}\n\nfragment AboutArtist_artwork on Artwork {\n  artists {\n    id\n    biography_blurb: biographyBlurb {\n      text\n    }\n    ...ArtistListItem_artist\n  }\n}\n\nfragment ArtworkDetails_artwork on Artwork {\n  category\n  conditionDescription {\n    label\n    details\n  }\n  signatureInfo {\n    label\n    details\n  }\n  certificateOfAuthenticity {\n    label\n    details\n  }\n  framed {\n    label\n    details\n  }\n  series\n  publisher\n  manufacturer\n  image_rights: imageRights\n}\n\nfragment ContextCard_artwork on Artwork {\n  id\n  slug\n  internalID\n  context {\n    __typename\n    ... on Sale {\n      id\n      name\n      isLiveOpen\n      href\n      formattedStartDateTime\n      isAuction\n      cover_image: coverImage {\n        url\n      }\n    }\n    ... on Fair {\n      id\n      name\n      href\n      exhibition_period: exhibitionPeriod\n      image {\n        url\n      }\n    }\n    ... on Show {\n      id\n      name\n      href\n      exhibition_period: exhibitionPeriod\n      coverImage {\n        url\n      }\n    }\n    ... on Node {\n      id\n    }\n  }\n  shows(size: 1) {\n    id\n    name\n    href\n    slug\n    internalID\n    exhibition_period: exhibitionPeriod\n    is_followed: isFollowed\n    cover_image: coverImage {\n      url\n    }\n  }\n}\n\nfragment ArtworkHeader_artwork on Artwork {\n  ...ArtworkActions_artwork\n  ...ArtworkTombstone_artwork\n  images {\n    ...ImageCarousel_images\n  }\n}\n\nfragment CommercialInformation_artwork on Artwork {\n  availability\n  artists {\n    isConsignable\n    id\n  }\n  editionSets {\n    isAcquireable\n    isOfferable\n    saleMessage\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  saleMessage\n  shippingInfo\n  shippingOrigin\n  isAcquireable\n  isOfferable\n  isInquireable\n  isInAuction\n  ...CommercialButtons_artwork\n  ...CommercialPartnerInformation_artwork\n  ...CommercialEditionSetInformation_artwork\n  ...AuctionCountDownTimer_artwork\n  ...ArtworkExtraLinks_artwork\n  ...AuctionPrice_artwork\n}\n\nfragment ArtworkHistory_artwork on Artwork {\n  provenance\n  exhibition_history: exhibitionHistory\n  literature\n}\n\nfragment CommercialButtons_artwork on Artwork {\n  slug\n  internalID\n  isAcquireable\n  isOfferable\n  isInquireable\n  isBiddable\n  isInAuction\n  isBuyNowable\n  editionSets {\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  ...BuyNowButton_artwork\n  ...BidButton_artwork\n  ...MakeOfferButton_artwork\n}\n\nfragment CommercialPartnerInformation_artwork on Artwork {\n  availability\n  isAcquireable\n  isForSale\n  isOfferable\n  shippingOrigin\n  shippingInfo\n  priceIncludesTaxDisplay\n  partner {\n    name\n    id\n  }\n}\n\nfragment CommercialEditionSetInformation_artwork on Artwork {\n  editionSets {\n    id\n    internalID\n    isAcquireable\n    isOfferable\n    saleMessage\n    editionOf\n    dimensions {\n      in\n      cm\n    }\n  }\n  ...CommercialPartnerInformation_artwork\n}\n\nfragment AuctionCountDownTimer_artwork on Artwork {\n  sale {\n    startAt\n    endAt\n    liveStartAt\n    formattedStartDateTime\n    id\n  }\n}\n\nfragment ArtworkExtraLinks_artwork on Artwork {\n  isAcquireable\n  isInAuction\n  title\n  sale {\n    isClosed\n    id\n  }\n  artists {\n    isConsignable\n    name\n    id\n  }\n  artist {\n    name\n    id\n  }\n}\n\nfragment AuctionPrice_artwork on Artwork {\n  slug\n  sale {\n    internalID\n    isWithBuyersPremium\n    isClosed\n    isLiveOpen\n    id\n  }\n  saleArtwork {\n    isWithReserve\n    reserveMessage\n    reserveStatus\n    currentBid {\n      display\n    }\n    counts {\n      bidderPositions\n    }\n    id\n  }\n  myLotStanding(live: true) {\n    activeBid {\n      isWinning\n      id\n    }\n    mostRecentBid {\n      maxBid {\n        display\n      }\n      id\n    }\n  }\n}\n\nfragment BuyNowButton_artwork on Artwork {\n  internalID\n  saleMessage\n}\n\nfragment BidButton_artwork on Artwork {\n  slug\n  sale {\n    slug\n    internalID\n    registrationStatus {\n      qualifiedForBidding\n      id\n    }\n    isPreview\n    isOpen\n    isLiveOpen\n    isClosed\n    isRegistrationClosed\n    id\n  }\n  myLotStanding(live: true) {\n    mostRecentBid {\n      maxBid {\n        cents\n      }\n      id\n    }\n  }\n  saleArtwork {\n    increments {\n      cents\n      display\n    }\n    id\n  }\n}\n\nfragment MakeOfferButton_artwork on Artwork {\n  internalID\n}\n\nfragment ArtworkActions_artwork on Artwork {\n  id\n  internalID\n  slug\n  title\n  href\n  is_saved: isSaved\n  is_hangable: isHangable\n  artists {\n    name\n    id\n  }\n  image {\n    url\n  }\n  widthCm\n  heightCm\n}\n\nfragment ArtworkTombstone_artwork on Artwork {\n  title\n  isInAuction\n  medium\n  date\n  cultural_maker: culturalMaker\n  saleArtwork {\n    lotLabel\n    estimate\n    id\n  }\n  partner {\n    name\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  artists {\n    name\n    href\n    ...FollowArtistButton_artist\n    id\n  }\n  dimensions {\n    in\n    cm\n  }\n  edition_of: editionOf\n  attribution_class: attributionClass {\n    shortDescription\n    id\n  }\n}\n\nfragment ImageCarousel_images on Image {\n  image_url: imageURL\n  width\n  height\n  deepZoom {\n    image: Image {\n      tileSize: TileSize\n      url: Url\n      format: Format\n      size: Size {\n        width: Width\n        height: Height\n      }\n    }\n  }\n}\n\nfragment FollowArtistButton_artist on Artist {\n  id\n  slug\n  internalID\n  is_followed: isFollowed\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "ca7aeec16c160faaf30001d9644d6556": "query ArtworkRefetchQuery(\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...Artwork_artwork_abFTe\n    id\n  }\n}\n\nfragment Artwork_artwork_abFTe on Artwork {\n  additional_information: additionalInformation\n  description\n  provenance\n  exhibition_history: exhibitionHistory\n  literature\n  partner {\n    type\n    id\n  }\n  artist {\n    name\n    biography_blurb: biographyBlurb {\n      text\n    }\n    id\n  }\n  sale {\n    isBenefit\n    isGalleryAuction\n    id\n  }\n  category\n  conditionDescription {\n    details\n  }\n  signature\n  signatureInfo {\n    details\n  }\n  certificateOfAuthenticity {\n    details\n  }\n  framed {\n    details\n  }\n  series\n  publisher\n  manufacturer\n  image_rights: imageRights\n  context {\n    __typename\n    ... on Node {\n      id\n    }\n    ... on Fair {\n      id\n    }\n  }\n  contextGrids {\n    __typename\n    artworks: artworksConnection(first: 6) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n  slug\n  internalID\n  id\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  is_biddable: isBiddable\n  is_inquireable: isInquireable\n  availability\n  ...PartnerCard_artwork\n  ...AboutWork_artwork\n  ...OtherWorks_artwork\n  ...AboutArtist_artwork\n  ...ArtworkDetails_artwork\n  ...ContextCard_artwork\n  ...ArtworkHeader_artwork\n  ...CommercialInformation_artwork\n  ...ArtworkHistory_artwork\n}\n\nfragment PartnerCard_artwork on Artwork {\n  sale {\n    isBenefit\n    isGalleryAuction\n    id\n  }\n  partner {\n    is_default_profile_public: isDefaultProfilePublic\n    type\n    name\n    slug\n    internalID\n    id\n    href\n    initials\n    profile {\n      id\n      internalID\n      slug\n      is_followed: isFollowed\n      icon {\n        url(version: \"square140\")\n      }\n    }\n    locations {\n      city\n      id\n    }\n  }\n}\n\nfragment AboutWork_artwork on Artwork {\n  additional_information: additionalInformation\n  description\n}\n\nfragment OtherWorks_artwork on Artwork {\n  contextGrids {\n    __typename\n    title\n    ctaTitle\n    ctaHref\n    artworks: artworksConnection(first: 6) {\n      edges {\n        node {\n          ...GenericGrid_artworks\n          id\n        }\n      }\n    }\n  }\n}\n\nfragment AboutArtist_artwork on Artwork {\n  artists {\n    id\n    biography_blurb: biographyBlurb {\n      text\n    }\n    ...ArtistListItem_artist\n  }\n}\n\nfragment ArtworkDetails_artwork on Artwork {\n  category\n  conditionDescription {\n    label\n    details\n  }\n  signatureInfo {\n    label\n    details\n  }\n  certificateOfAuthenticity {\n    label\n    details\n  }\n  framed {\n    label\n    details\n  }\n  series\n  publisher\n  manufacturer\n  image_rights: imageRights\n}\n\nfragment ContextCard_artwork on Artwork {\n  id\n  slug\n  internalID\n  context {\n    __typename\n    ... on Sale {\n      id\n      name\n      isLiveOpen\n      href\n      formattedStartDateTime\n      isAuction\n      cover_image: coverImage {\n        url\n      }\n    }\n    ... on Fair {\n      id\n      name\n      href\n      exhibition_period: exhibitionPeriod\n      image {\n        url\n      }\n    }\n    ... on Show {\n      id\n      name\n      href\n      exhibition_period: exhibitionPeriod\n      coverImage {\n        url\n      }\n    }\n    ... on Node {\n      id\n    }\n  }\n  shows(size: 1) {\n    id\n    name\n    href\n    slug\n    internalID\n    exhibition_period: exhibitionPeriod\n    is_followed: isFollowed\n    cover_image: coverImage {\n      url\n    }\n  }\n}\n\nfragment ArtworkHeader_artwork on Artwork {\n  ...ArtworkActions_artwork\n  ...ArtworkTombstone_artwork\n  images {\n    ...ImageCarousel_images\n  }\n}\n\nfragment CommercialInformation_artwork on Artwork {\n  availability\n  artists {\n    isConsignable\n    id\n  }\n  editionSets {\n    isAcquireable\n    isOfferable\n    saleMessage\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  saleMessage\n  shippingInfo\n  shippingOrigin\n  isAcquireable\n  isOfferable\n  isInquireable\n  isInAuction\n  ...CommercialButtons_artwork\n  ...CommercialPartnerInformation_artwork\n  ...CommercialEditionSetInformation_artwork\n  ...AuctionCountDownTimer_artwork\n  ...ArtworkExtraLinks_artwork\n  ...AuctionPrice_artwork\n}\n\nfragment ArtworkHistory_artwork on Artwork {\n  provenance\n  exhibition_history: exhibitionHistory\n  literature\n}\n\nfragment CommercialButtons_artwork on Artwork {\n  slug\n  internalID\n  isAcquireable\n  isOfferable\n  isInquireable\n  isBiddable\n  isInAuction\n  isBuyNowable\n  editionSets {\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  ...BuyNowButton_artwork\n  ...BidButton_artwork\n  ...MakeOfferButton_artwork\n}\n\nfragment CommercialPartnerInformation_artwork on Artwork {\n  availability\n  isAcquireable\n  isForSale\n  isOfferable\n  shippingOrigin\n  shippingInfo\n  priceIncludesTaxDisplay\n  partner {\n    name\n    id\n  }\n}\n\nfragment CommercialEditionSetInformation_artwork on Artwork {\n  editionSets {\n    id\n    internalID\n    isAcquireable\n    isOfferable\n    saleMessage\n    editionOf\n    dimensions {\n      in\n      cm\n    }\n  }\n  ...CommercialPartnerInformation_artwork\n}\n\nfragment AuctionCountDownTimer_artwork on Artwork {\n  sale {\n    startAt\n    endAt\n    liveStartAt\n    formattedStartDateTime\n    id\n  }\n}\n\nfragment ArtworkExtraLinks_artwork on Artwork {\n  isAcquireable\n  isInAuction\n  title\n  sale {\n    isClosed\n    id\n  }\n  artists {\n    isConsignable\n    name\n    id\n  }\n  artist {\n    name\n    id\n  }\n}\n\nfragment AuctionPrice_artwork on Artwork {\n  slug\n  sale {\n    internalID\n    isWithBuyersPremium\n    isClosed\n    isLiveOpen\n    id\n  }\n  saleArtwork {\n    isWithReserve\n    reserveMessage\n    reserveStatus\n    currentBid {\n      display\n    }\n    counts {\n      bidderPositions\n    }\n    id\n  }\n  myLotStanding(live: true) {\n    activeBid {\n      isWinning\n      id\n    }\n    mostRecentBid {\n      maxBid {\n        display\n      }\n      id\n    }\n  }\n}\n\nfragment BuyNowButton_artwork on Artwork {\n  internalID\n  saleMessage\n}\n\nfragment BidButton_artwork on Artwork {\n  slug\n  sale {\n    slug\n    internalID\n    registrationStatus {\n      qualifiedForBidding\n      id\n    }\n    isPreview\n    isOpen\n    isLiveOpen\n    isClosed\n    isRegistrationClosed\n    id\n  }\n  myLotStanding(live: true) {\n    mostRecentBid {\n      maxBid {\n        cents\n      }\n      id\n    }\n  }\n  saleArtwork {\n    increments {\n      cents\n      display\n    }\n    id\n  }\n}\n\nfragment MakeOfferButton_artwork on Artwork {\n  internalID\n}\n\nfragment ArtworkActions_artwork on Artwork {\n  id\n  internalID\n  slug\n  title\n  href\n  is_saved: isSaved\n  is_hangable: isHangable\n  artists {\n    name\n    id\n  }\n  image {\n    url\n  }\n  widthCm\n  heightCm\n}\n\nfragment ArtworkTombstone_artwork on Artwork {\n  title\n  isInAuction\n  medium\n  date\n  cultural_maker: culturalMaker\n  saleArtwork {\n    lotLabel\n    estimate\n    id\n  }\n  partner {\n    name\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  artists {\n    name\n    href\n    ...FollowArtistButton_artist\n    id\n  }\n  dimensions {\n    in\n    cm\n  }\n  edition_of: editionOf\n  attribution_class: attributionClass {\n    shortDescription\n    id\n  }\n}\n\nfragment ImageCarousel_images on Image {\n  image_url: imageURL\n  width\n  height\n  deepZoom {\n    image: Image {\n      tileSize: TileSize\n      url: Url\n      format: Format\n      size: Size {\n        width: Width\n        height: Height\n      }\n    }\n  }\n}\n\nfragment FollowArtistButton_artist on Artist {\n  id\n  slug\n  internalID\n  is_followed: isFollowed\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  slug\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "e29e33bff8a63d737fc7e81e71f1963b": "query FairArtworksTestsQuery {\n  fair(id: \"sofa-chicago-2018\") {\n    ...FairArtworks_fair\n    id\n  }\n}\n\nfragment FairArtworks_fair on Fair {\n  id\n  internalID\n  slug\n  ...FilteredInfiniteScrollGrid_entity\n}\n\nfragment FilteredInfiniteScrollGrid_entity on EntityWithFilterArtworksConnectionInterface {\n  id\n  filterArtworksConnection(first: 10, medium: \"*\", priceRange: \"*-*\", aggregations: [MEDIUM, PRICE_RANGE, TOTAL]) {\n    edges {\n      node {\n        id\n        slug\n        __typename\n      }\n      cursor\n    }\n    ...Filters_filteredArtworks\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    id\n  }\n}\n\nfragment Filters_filteredArtworks on FilterArtworksConnection {\n  aggregations {\n    slice\n    counts {\n      name\n      value\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "f560a3d187b79afb6c094db2fc31e1a8": "query ShowArtworksTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    ...ShowArtworks_show\n    id\n  }\n}\n\nfragment ShowArtworks_show on Show {\n  id\n  slug\n  internalID\n  ...FilteredInfiniteScrollGrid_entity\n}\n\nfragment FilteredInfiniteScrollGrid_entity on EntityWithFilterArtworksConnectionInterface {\n  id\n  filterArtworksConnection(first: 10, medium: \"*\", priceRange: \"*-*\", aggregations: [MEDIUM, PRICE_RANGE, TOTAL]) {\n    edges {\n      node {\n        id\n        slug\n        __typename\n      }\n      cursor\n    }\n    ...Filters_filteredArtworks\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    id\n  }\n}\n\nfragment Filters_filteredArtworks on FilterArtworksConnection {\n  aggregations {\n    slice\n    counts {\n      name\n      value\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "4587fa958ec869e9700b9d66df269bc3": "query ConversationsQuery(\n  $count: Int!\n  $cursor: String\n) {\n  me {\n    ...Conversations_me_1G22uz\n    id\n  }\n}\n\nfragment Conversations_me_1G22uz on Me {\n  conversations: conversationsConnection(first: $count, after: $cursor) {\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    edges {\n      node {\n        internalID\n        last_message: lastMessage\n        ...ConversationSnippet_conversation\n        id\n        __typename\n      }\n      cursor\n    }\n  }\n}\n\nfragment ConversationSnippet_conversation on Conversation {\n  internalID\n  to {\n    name\n    id\n  }\n  lastMessage\n  lastMessageAt\n  unread\n  items {\n    item {\n      __typename\n      ... on Artwork {\n        date\n        title\n        artistNames\n        image {\n          url\n        }\n      }\n      ... on Show {\n        fair {\n          name\n          id\n        }\n        name\n        coverImage {\n          url\n        }\n      }\n      ... on Node {\n        id\n      }\n    }\n  }\n}\n",
+  "f3bb66d7266c14e7384e4224967303e2": "query ArtworkQuery(\n  $artworkID: String!\n) {\n  artwork(id: $artworkID) {\n    ...Artwork_artwork\n    id\n  }\n}\n\nfragment Artwork_artwork on Artwork {\n  additional_information: additionalInformation\n  description\n  provenance\n  exhibition_history: exhibitionHistory\n  literature\n  partner {\n    type\n    id\n  }\n  artist {\n    biography_blurb: biographyBlurb {\n      text\n    }\n    id\n  }\n  sale {\n    isBenefit\n    isGalleryAuction\n    id\n  }\n  category\n  conditionDescription {\n    details\n  }\n  signature\n  signatureInfo {\n    details\n  }\n  certificateOfAuthenticity {\n    details\n  }\n  framed {\n    details\n  }\n  series\n  publisher\n  manufacturer\n  image_rights: imageRights\n  context {\n    __typename\n    ... on Node {\n      id\n    }\n    ... on Fair {\n      id\n    }\n  }\n  contextGrids {\n    __typename\n    artworks: artworksConnection(first: 6) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n  slug\n  internalID\n  id\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  is_biddable: isBiddable\n  is_inquireable: isInquireable\n  availability\n  ...PartnerCard_artwork\n  ...AboutWork_artwork\n  ...OtherWorks_artwork\n  ...AboutArtist_artwork\n  ...ArtworkDetails_artwork\n  ...ContextCard_artwork\n  ...ArtworkHeader_artwork\n  ...CommercialInformation_artwork\n  ...ArtworkHistory_artwork\n}\n\nfragment PartnerCard_artwork on Artwork {\n  sale {\n    isBenefit\n    isGalleryAuction\n    id\n  }\n  partner {\n    is_default_profile_public: isDefaultProfilePublic\n    type\n    name\n    slug\n    id\n    href\n    initials\n    profile {\n      id\n      internalID\n      is_followed: isFollowed\n      icon {\n        url(version: \"square140\")\n      }\n    }\n    locations {\n      city\n      id\n    }\n  }\n}\n\nfragment AboutWork_artwork on Artwork {\n  additional_information: additionalInformation\n  description\n}\n\nfragment OtherWorks_artwork on Artwork {\n  contextGrids {\n    __typename\n    title\n    ctaTitle\n    ctaHref\n    artworks: artworksConnection(first: 6) {\n      edges {\n        node {\n          ...GenericGrid_artworks\n          id\n        }\n      }\n    }\n  }\n}\n\nfragment AboutArtist_artwork on Artwork {\n  artists {\n    id\n    biography_blurb: biographyBlurb {\n      text\n    }\n    ...ArtistListItem_artist\n  }\n}\n\nfragment ArtworkDetails_artwork on Artwork {\n  category\n  conditionDescription {\n    label\n    details\n  }\n  signatureInfo {\n    label\n    details\n  }\n  certificateOfAuthenticity {\n    label\n    details\n  }\n  framed {\n    label\n    details\n  }\n  series\n  publisher\n  manufacturer\n  image_rights: imageRights\n}\n\nfragment ContextCard_artwork on Artwork {\n  id\n  context {\n    __typename\n    ... on Sale {\n      id\n      name\n      isLiveOpen\n      href\n      formattedStartDateTime\n      isAuction\n      coverImage {\n        url\n      }\n    }\n    ... on Fair {\n      id\n      name\n      href\n      exhibitionPeriod\n      image {\n        url\n      }\n    }\n    ... on Show {\n      id\n      internalID\n      slug\n      name\n      href\n      exhibitionPeriod\n      isFollowed\n      coverImage {\n        url\n      }\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkHeader_artwork on Artwork {\n  ...ArtworkActions_artwork\n  ...ArtworkTombstone_artwork\n  images {\n    ...ImageCarousel_images\n  }\n}\n\nfragment CommercialInformation_artwork on Artwork {\n  isAcquireable\n  isOfferable\n  isInquireable\n  isInAuction\n  availability\n  saleMessage\n  artists {\n    isConsignable\n    id\n  }\n  editionSets {\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  ...CommercialButtons_artwork\n  ...CommercialPartnerInformation_artwork\n  ...CommercialEditionSetInformation_artwork\n  ...AuctionCountDownTimer_artwork\n  ...ArtworkExtraLinks_artwork\n  ...AuctionPrice_artwork\n}\n\nfragment ArtworkHistory_artwork on Artwork {\n  provenance\n  exhibition_history: exhibitionHistory\n  literature\n}\n\nfragment CommercialButtons_artwork on Artwork {\n  slug\n  isAcquireable\n  isOfferable\n  isInquireable\n  isInAuction\n  isBuyNowable\n  editionSets {\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  ...BuyNowButton_artwork\n  ...BidButton_artwork\n  ...MakeOfferButton_artwork\n}\n\nfragment CommercialPartnerInformation_artwork on Artwork {\n  availability\n  isAcquireable\n  isForSale\n  isOfferable\n  shippingOrigin\n  shippingInfo\n  priceIncludesTaxDisplay\n  partner {\n    name\n    id\n  }\n}\n\nfragment CommercialEditionSetInformation_artwork on Artwork {\n  editionSets {\n    id\n    internalID\n    saleMessage\n    editionOf\n    dimensions {\n      in\n      cm\n    }\n  }\n  ...CommercialPartnerInformation_artwork\n}\n\nfragment AuctionCountDownTimer_artwork on Artwork {\n  sale {\n    startAt\n    endAt\n    formattedStartDateTime\n    id\n  }\n}\n\nfragment ArtworkExtraLinks_artwork on Artwork {\n  isAcquireable\n  isInAuction\n  title\n  sale {\n    isClosed\n    id\n  }\n  artists {\n    isConsignable\n    name\n    id\n  }\n  artist {\n    name\n    id\n  }\n}\n\nfragment AuctionPrice_artwork on Artwork {\n  sale {\n    internalID\n    isWithBuyersPremium\n    isClosed\n    isLiveOpen\n    id\n  }\n  saleArtwork {\n    reserveMessage\n    currentBid {\n      display\n    }\n    counts {\n      bidderPositions\n    }\n    id\n  }\n  myLotStanding(live: true) {\n    activeBid {\n      isWinning\n      id\n    }\n    mostRecentBid {\n      maxBid {\n        display\n      }\n      id\n    }\n  }\n}\n\nfragment BuyNowButton_artwork on Artwork {\n  internalID\n  saleMessage\n}\n\nfragment BidButton_artwork on Artwork {\n  slug\n  sale {\n    slug\n    registrationStatus {\n      qualifiedForBidding\n      id\n    }\n    isPreview\n    isLiveOpen\n    isClosed\n    isRegistrationClosed\n    id\n  }\n  myLotStanding(live: true) {\n    mostRecentBid {\n      maxBid {\n        cents\n      }\n      id\n    }\n  }\n  saleArtwork {\n    increments {\n      cents\n    }\n    id\n  }\n}\n\nfragment MakeOfferButton_artwork on Artwork {\n  internalID\n}\n\nfragment ArtworkActions_artwork on Artwork {\n  id\n  internalID\n  slug\n  title\n  href\n  is_saved: isSaved\n  is_hangable: isHangable\n  artists {\n    name\n    id\n  }\n  image {\n    url\n  }\n  widthCm\n  heightCm\n}\n\nfragment ArtworkTombstone_artwork on Artwork {\n  title\n  isInAuction\n  medium\n  date\n  cultural_maker: culturalMaker\n  saleArtwork {\n    lotLabel\n    estimate\n    id\n  }\n  partner {\n    name\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  artists {\n    name\n    href\n    ...FollowArtistButton_artist\n    id\n  }\n  dimensions {\n    in\n    cm\n  }\n  edition_of: editionOf\n  attribution_class: attributionClass {\n    shortDescription\n    id\n  }\n}\n\nfragment ImageCarousel_images on Image {\n  url: imageURL\n  width\n  height\n  deepZoom {\n    image: Image {\n      tileSize: TileSize\n      url: Url\n      format: Format\n      size: Size {\n        width: Width\n        height: Height\n      }\n    }\n  }\n}\n\nfragment FollowArtistButton_artist on Artist {\n  id\n  slug\n  internalID\n  is_followed: isFollowed\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "0831b9db633bea149b03f2db36f513a5": "query ArtworkRefetchQuery(\n  $id: ID!\n) {\n  node(id: $id) {\n    __typename\n    ...Artwork_artwork_abFTe\n    id\n  }\n}\n\nfragment Artwork_artwork_abFTe on Artwork {\n  additional_information: additionalInformation\n  description\n  provenance\n  exhibition_history: exhibitionHistory\n  literature\n  partner {\n    type\n    id\n  }\n  artist {\n    biography_blurb: biographyBlurb {\n      text\n    }\n    id\n  }\n  sale {\n    isBenefit\n    isGalleryAuction\n    id\n  }\n  category\n  conditionDescription {\n    details\n  }\n  signature\n  signatureInfo {\n    details\n  }\n  certificateOfAuthenticity {\n    details\n  }\n  framed {\n    details\n  }\n  series\n  publisher\n  manufacturer\n  image_rights: imageRights\n  context {\n    __typename\n    ... on Node {\n      id\n    }\n    ... on Fair {\n      id\n    }\n  }\n  contextGrids {\n    __typename\n    artworks: artworksConnection(first: 6) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n  slug\n  internalID\n  id\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  is_biddable: isBiddable\n  is_inquireable: isInquireable\n  availability\n  ...PartnerCard_artwork\n  ...AboutWork_artwork\n  ...OtherWorks_artwork\n  ...AboutArtist_artwork\n  ...ArtworkDetails_artwork\n  ...ContextCard_artwork\n  ...ArtworkHeader_artwork\n  ...CommercialInformation_artwork\n  ...ArtworkHistory_artwork\n}\n\nfragment PartnerCard_artwork on Artwork {\n  sale {\n    isBenefit\n    isGalleryAuction\n    id\n  }\n  partner {\n    is_default_profile_public: isDefaultProfilePublic\n    type\n    name\n    slug\n    id\n    href\n    initials\n    profile {\n      id\n      internalID\n      is_followed: isFollowed\n      icon {\n        url(version: \"square140\")\n      }\n    }\n    locations {\n      city\n      id\n    }\n  }\n}\n\nfragment AboutWork_artwork on Artwork {\n  additional_information: additionalInformation\n  description\n}\n\nfragment OtherWorks_artwork on Artwork {\n  contextGrids {\n    __typename\n    title\n    ctaTitle\n    ctaHref\n    artworks: artworksConnection(first: 6) {\n      edges {\n        node {\n          ...GenericGrid_artworks\n          id\n        }\n      }\n    }\n  }\n}\n\nfragment AboutArtist_artwork on Artwork {\n  artists {\n    id\n    biography_blurb: biographyBlurb {\n      text\n    }\n    ...ArtistListItem_artist\n  }\n}\n\nfragment ArtworkDetails_artwork on Artwork {\n  category\n  conditionDescription {\n    label\n    details\n  }\n  signatureInfo {\n    label\n    details\n  }\n  certificateOfAuthenticity {\n    label\n    details\n  }\n  framed {\n    label\n    details\n  }\n  series\n  publisher\n  manufacturer\n  image_rights: imageRights\n}\n\nfragment ContextCard_artwork on Artwork {\n  id\n  context {\n    __typename\n    ... on Sale {\n      id\n      name\n      isLiveOpen\n      href\n      formattedStartDateTime\n      isAuction\n      coverImage {\n        url\n      }\n    }\n    ... on Fair {\n      id\n      name\n      href\n      exhibitionPeriod\n      image {\n        url\n      }\n    }\n    ... on Show {\n      id\n      internalID\n      slug\n      name\n      href\n      exhibitionPeriod\n      isFollowed\n      coverImage {\n        url\n      }\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkHeader_artwork on Artwork {\n  ...ArtworkActions_artwork\n  ...ArtworkTombstone_artwork\n  images {\n    ...ImageCarousel_images\n  }\n}\n\nfragment CommercialInformation_artwork on Artwork {\n  isAcquireable\n  isOfferable\n  isInquireable\n  isInAuction\n  availability\n  saleMessage\n  artists {\n    isConsignable\n    id\n  }\n  editionSets {\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  ...CommercialButtons_artwork\n  ...CommercialPartnerInformation_artwork\n  ...CommercialEditionSetInformation_artwork\n  ...AuctionCountDownTimer_artwork\n  ...ArtworkExtraLinks_artwork\n  ...AuctionPrice_artwork\n}\n\nfragment ArtworkHistory_artwork on Artwork {\n  provenance\n  exhibition_history: exhibitionHistory\n  literature\n}\n\nfragment CommercialButtons_artwork on Artwork {\n  slug\n  isAcquireable\n  isOfferable\n  isInquireable\n  isInAuction\n  isBuyNowable\n  editionSets {\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  ...BuyNowButton_artwork\n  ...BidButton_artwork\n  ...MakeOfferButton_artwork\n}\n\nfragment CommercialPartnerInformation_artwork on Artwork {\n  availability\n  isAcquireable\n  isForSale\n  isOfferable\n  shippingOrigin\n  shippingInfo\n  priceIncludesTaxDisplay\n  partner {\n    name\n    id\n  }\n}\n\nfragment CommercialEditionSetInformation_artwork on Artwork {\n  editionSets {\n    id\n    internalID\n    saleMessage\n    editionOf\n    dimensions {\n      in\n      cm\n    }\n  }\n  ...CommercialPartnerInformation_artwork\n}\n\nfragment AuctionCountDownTimer_artwork on Artwork {\n  sale {\n    startAt\n    endAt\n    formattedStartDateTime\n    id\n  }\n}\n\nfragment ArtworkExtraLinks_artwork on Artwork {\n  isAcquireable\n  isInAuction\n  title\n  sale {\n    isClosed\n    id\n  }\n  artists {\n    isConsignable\n    name\n    id\n  }\n  artist {\n    name\n    id\n  }\n}\n\nfragment AuctionPrice_artwork on Artwork {\n  sale {\n    internalID\n    isWithBuyersPremium\n    isClosed\n    isLiveOpen\n    id\n  }\n  saleArtwork {\n    reserveMessage\n    currentBid {\n      display\n    }\n    counts {\n      bidderPositions\n    }\n    id\n  }\n  myLotStanding(live: true) {\n    activeBid {\n      isWinning\n      id\n    }\n    mostRecentBid {\n      maxBid {\n        display\n      }\n      id\n    }\n  }\n}\n\nfragment BuyNowButton_artwork on Artwork {\n  internalID\n  saleMessage\n}\n\nfragment BidButton_artwork on Artwork {\n  slug\n  sale {\n    slug\n    registrationStatus {\n      qualifiedForBidding\n      id\n    }\n    isPreview\n    isLiveOpen\n    isClosed\n    isRegistrationClosed\n    id\n  }\n  myLotStanding(live: true) {\n    mostRecentBid {\n      maxBid {\n        cents\n      }\n      id\n    }\n  }\n  saleArtwork {\n    increments {\n      cents\n    }\n    id\n  }\n}\n\nfragment MakeOfferButton_artwork on Artwork {\n  internalID\n}\n\nfragment ArtworkActions_artwork on Artwork {\n  id\n  internalID\n  slug\n  title\n  href\n  is_saved: isSaved\n  is_hangable: isHangable\n  artists {\n    name\n    id\n  }\n  image {\n    url\n  }\n  widthCm\n  heightCm\n}\n\nfragment ArtworkTombstone_artwork on Artwork {\n  title\n  isInAuction\n  medium\n  date\n  cultural_maker: culturalMaker\n  saleArtwork {\n    lotLabel\n    estimate\n    id\n  }\n  partner {\n    name\n    id\n  }\n  sale {\n    isClosed\n    id\n  }\n  artists {\n    name\n    href\n    ...FollowArtistButton_artist\n    id\n  }\n  dimensions {\n    in\n    cm\n  }\n  edition_of: editionOf\n  attribution_class: attributionClass {\n    shortDescription\n    id\n  }\n}\n\nfragment ImageCarousel_images on Image {\n  url: imageURL\n  width\n  height\n  deepZoom {\n    image: Image {\n      tileSize: TileSize\n      url: Url\n      format: Format\n      size: Size {\n        width: Width\n        height: Height\n      }\n    }\n  }\n}\n\nfragment FollowArtistButton_artist on Artist {\n  id\n  slug\n  internalID\n  is_followed: isFollowed\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n\nfragment GenericGrid_artworks on Artwork {\n  id\n  image {\n    aspect_ratio: aspectRatio\n  }\n  ...ArtworkGridItem_artwork\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "ee34f9e5a131918377225b0a06243944": "query FairArtworksTestsQuery {\n  fair(id: \"sofa-chicago-2018\") {\n    ...FairArtworks_fair\n    id\n  }\n}\n\nfragment FairArtworks_fair on Fair {\n  id\n  internalID\n  slug\n  ...FilteredInfiniteScrollGrid_entity\n}\n\nfragment FilteredInfiniteScrollGrid_entity on EntityWithFilterArtworksConnectionInterface {\n  id\n  filterArtworksConnection(first: 10, medium: \"*\", priceRange: \"*-*\", aggregations: [MEDIUM, PRICE_RANGE, TOTAL]) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...Filters_filteredArtworks\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    id\n  }\n}\n\nfragment Filters_filteredArtworks on FilterArtworksConnection {\n  aggregations {\n    slice\n    counts {\n      name\n      value\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "38671bd324b45e1cafe35ba0191d7279": "query ShowArtworksTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    ...ShowArtworks_show\n    id\n  }\n}\n\nfragment ShowArtworks_show on Show {\n  id\n  slug\n  internalID\n  ...FilteredInfiniteScrollGrid_entity\n}\n\nfragment FilteredInfiniteScrollGrid_entity on EntityWithFilterArtworksConnectionInterface {\n  id\n  filterArtworksConnection(first: 10, medium: \"*\", priceRange: \"*-*\", aggregations: [MEDIUM, PRICE_RANGE, TOTAL]) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...Filters_filteredArtworks\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    id\n  }\n}\n\nfragment Filters_filteredArtworks on FilterArtworksConnection {\n  aggregations {\n    slice\n    counts {\n      name\n      value\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
   "f00c41abf4aff4738987ff9a680cd41c": "mutation BuyNowButtonOrderMutation(\n  $input: CommerceCreateOrderWithArtworkInput!\n) {\n  commerceCreateOrderWithArtwork(input: $input) {\n    orderOrError {\n      __typename\n      ... on CommerceOrderWithMutationSuccess {\n        order {\n          __typename\n          internalID\n          mode\n        }\n      }\n      ... on CommerceOrderWithMutationFailure {\n        error {\n          type\n          code\n          data\n        }\n      }\n    }\n  }\n}\n",
-  "16fa1baef49a1f0c2f60b6c31d15ebf1": "query ActiveBidsQuery {\n  me {\n    ...ActiveBids_me\n    id\n  }\n}\n\nfragment ActiveBids_me on Me {\n  lot_standings: lotStandings(live: true) {\n    most_recent_bid: mostRecentBid {\n      id\n    }\n    ...ActiveBid_bid\n  }\n}\n\nfragment ActiveBid_bid on LotStanding {\n  is_leading_bidder: isLeadingBidder\n  sale {\n    href\n    is_live_open: isLiveOpen\n    id\n  }\n  most_recent_bid: mostRecentBid {\n    id\n    max_bid: maxBid {\n      display\n    }\n    sale_artwork: saleArtwork {\n      artwork {\n        href\n        image {\n          url\n        }\n        artist_names: artistNames\n        id\n      }\n      counts {\n        bidder_positions: bidderPositions\n      }\n      highest_bid: highestBid {\n        display\n      }\n      lot_label: lotLabel\n      reserve_status: reserveStatus\n      id\n    }\n  }\n}\n",
-  "aa8e8f8bcda3e194990a006b1b7fea6e": "query InboxQuery {\n  me {\n    ...Inbox_me\n    id\n  }\n}\n\nfragment Inbox_me on Me {\n  lot_standings: lotStandings(live: true) {\n    most_recent_bid: mostRecentBid {\n      id\n    }\n  }\n  conversations_existence_check: conversationsConnection(first: 1) {\n    edges {\n      node {\n        internalID\n        id\n      }\n    }\n  }\n  ...Conversations_me\n  ...ActiveBids_me\n}\n\nfragment Conversations_me on Me {\n  conversations: conversationsConnection(first: 10, after: \"\") {\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    edges {\n      node {\n        internalID\n        last_message: lastMessage\n        ...ConversationSnippet_conversation\n        id\n        __typename\n      }\n      cursor\n    }\n  }\n}\n\nfragment ActiveBids_me on Me {\n  lot_standings: lotStandings(live: true) {\n    most_recent_bid: mostRecentBid {\n      id\n    }\n    ...ActiveBid_bid\n  }\n}\n\nfragment ActiveBid_bid on LotStanding {\n  is_leading_bidder: isLeadingBidder\n  sale {\n    href\n    is_live_open: isLiveOpen\n    id\n  }\n  most_recent_bid: mostRecentBid {\n    id\n    max_bid: maxBid {\n      display\n    }\n    sale_artwork: saleArtwork {\n      artwork {\n        href\n        image {\n          url\n        }\n        artist_names: artistNames\n        id\n      }\n      counts {\n        bidder_positions: bidderPositions\n      }\n      highest_bid: highestBid {\n        display\n      }\n      lot_label: lotLabel\n      reserve_status: reserveStatus\n      id\n    }\n  }\n}\n\nfragment ConversationSnippet_conversation on Conversation {\n  internalID\n  to {\n    name\n    id\n  }\n  last_message: lastMessage\n  last_message_at: lastMessageAt\n  unread\n  items {\n    item {\n      __typename\n      ... on Artwork {\n        date\n        title\n        artist_names: artistNames\n        image {\n          url\n        }\n      }\n      ... on Show {\n        fair {\n          name\n          id\n        }\n        name\n        cover_image: coverImage {\n          url\n        }\n      }\n      ... on Node {\n        id\n      }\n    }\n  }\n}\n",
+  "ae430b15aae2a3645581fbac0aef41bb": "query ActiveBidsQuery {\n  me {\n    ...ActiveBids_me\n    id\n  }\n}\n\nfragment ActiveBids_me on Me {\n  lot_standings: lotStandings(live: true) {\n    most_recent_bid: mostRecentBid {\n      id\n    }\n    ...ActiveBid_bid\n  }\n}\n\nfragment ActiveBid_bid on LotStanding {\n  is_leading_bidder: isLeadingBidder\n  sale {\n    href\n    is_live_open: isLiveOpen\n    id\n  }\n  most_recent_bid: mostRecentBid {\n    id\n    sale_artwork: saleArtwork {\n      artwork {\n        href\n        image {\n          url\n        }\n        artist_names: artistNames\n        id\n      }\n      counts {\n        bidder_positions: bidderPositions\n      }\n      highest_bid: highestBid {\n        display\n      }\n      lot_label: lotLabel\n      reserve_status: reserveStatus\n      id\n    }\n  }\n}\n",
+  "0c076583720e9dccc2883ad76b29dc55": "query InboxQuery {\n  me {\n    ...Inbox_me\n    id\n  }\n}\n\nfragment Inbox_me on Me {\n  lot_standings: lotStandings(live: true) {\n    most_recent_bid: mostRecentBid {\n      id\n    }\n  }\n  conversations_existence_check: conversationsConnection(first: 1) {\n    edges {\n      node {\n        internalID\n        id\n      }\n    }\n  }\n  ...Conversations_me\n  ...ActiveBids_me\n}\n\nfragment Conversations_me on Me {\n  conversations: conversationsConnection(first: 10, after: \"\") {\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    edges {\n      node {\n        internalID\n        last_message: lastMessage\n        ...ConversationSnippet_conversation\n        id\n        __typename\n      }\n      cursor\n    }\n  }\n}\n\nfragment ActiveBids_me on Me {\n  lot_standings: lotStandings(live: true) {\n    most_recent_bid: mostRecentBid {\n      id\n    }\n    ...ActiveBid_bid\n  }\n}\n\nfragment ActiveBid_bid on LotStanding {\n  is_leading_bidder: isLeadingBidder\n  sale {\n    href\n    is_live_open: isLiveOpen\n    id\n  }\n  most_recent_bid: mostRecentBid {\n    id\n    sale_artwork: saleArtwork {\n      artwork {\n        href\n        image {\n          url\n        }\n        artist_names: artistNames\n        id\n      }\n      counts {\n        bidder_positions: bidderPositions\n      }\n      highest_bid: highestBid {\n        display\n      }\n      lot_label: lotLabel\n      reserve_status: reserveStatus\n      id\n    }\n  }\n}\n\nfragment ConversationSnippet_conversation on Conversation {\n  internalID\n  to {\n    name\n    id\n  }\n  lastMessage\n  lastMessageAt\n  unread\n  items {\n    item {\n      __typename\n      ... on Artwork {\n        date\n        title\n        artistNames\n        image {\n          url\n        }\n      }\n      ... on Show {\n        fair {\n          name\n          id\n        }\n        name\n        coverImage {\n          url\n        }\n      }\n      ... on Node {\n        id\n      }\n    }\n  }\n}\n",
   "bab08e6fa3ab2f1cb1ebad5f8d147be1": "query InvoicePreviewRefetchQuery(\n  $conversationId: String!\n  $invoiceId: String!\n) {\n  me {\n    invoice(conversationId: $conversationId, invoiceId: $invoiceId) {\n      ...InvoicePreview_invoice\n      id\n    }\n    id\n  }\n}\n\nfragment InvoicePreview_invoice on Invoice {\n  payment_url: paymentURL\n  state\n  total\n  lewitt_invoice_id: lewittInvoiceID\n}\n",
   "b1ee01f4e05a61ebeb1522bc54bcb701": "query FairBoothHeaderTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    ...FairBoothHeader_show\n    id\n  }\n}\n\nfragment FairBoothHeader_show on Show {\n  fair {\n    name\n    id\n  }\n  partner {\n    __typename\n    ... on Partner {\n      name\n      slug\n      internalID\n      id\n      href\n      profile {\n        internalID\n        slug\n        is_followed: isFollowed\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  counts {\n    artworks\n    artists\n  }\n  location {\n    display\n    id\n  }\n}\n",
   "7154edc58bfe6b799eefd223afc23050": "query CityBMWListQuery(\n  $count: Int!\n  $cursor: String\n  $citySlug: String!\n) {\n  city(slug: $citySlug) {\n    ...CityBMWList_city_1G22uz\n  }\n}\n\nfragment CityBMWList_city_1G22uz on City {\n  name\n  slug\n  sponsoredContent {\n    shows: showsConnection(first: $count, status: RUNNING, after: $cursor, sort: PARTNER_ASC) {\n      edges {\n        node {\n          slug\n          internalID\n          id\n          name\n          status\n          href\n          is_followed: isFollowed\n          isStubShow\n          exhibition_period: exhibitionPeriod\n          cover_image: coverImage {\n            url\n          }\n          location {\n            coordinates {\n              lat\n              lng\n            }\n            id\n          }\n          type\n          start_at: startAt\n          end_at: endAt\n          partner {\n            __typename\n            ... on Partner {\n              name\n              type\n              profile {\n                image {\n                  url(version: \"square\")\n                }\n                id\n              }\n            }\n            ... on Node {\n              id\n            }\n            ... on ExternalPartner {\n              id\n            }\n          }\n          __typename\n        }\n        cursor\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n",
   "0ca927d1cb9cd9f5aa37819700d06398": "query ShowArtistsTestsQuery {\n  show(id: \"anderson-fine-art-gallery-flickinger-collection\") {\n    ...ShowArtists_show\n    id\n  }\n}\n\nfragment ShowArtists_show on Show {\n  internalID\n  slug\n  artists_grouped_by_name: artistsGroupedByName {\n    letter\n    items {\n      ...ArtistListItem_artist\n      sortable_id: sortableID\n      href\n      id\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n",
-  "62cb3fe189067bbdf1ccc7c2d0ffcf57": "query FairArtistsTestsQuery {\n  fair(id: \"sofa-chicago-2018\") {\n    ...FairArtists_fair\n    id\n  }\n}\n\nfragment FairArtists_fair on Fair {\n  slug\n  internalID\n  artists: artistsConnection(first: 10) {\n    pageInfo {\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    edges {\n      cursor\n      node {\n        ...ArtistListItem_artist\n        sortable_id: sortableID\n        href\n        internalID\n        slug\n        id\n        __typename\n      }\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n",
+  "662b0a169cbb810b1b296edfa11f5c48": "query FairArtistsTestsQuery {\n  fair(id: \"sofa-chicago-2018\") {\n    ...FairArtists_fair\n    id\n  }\n}\n\nfragment FairArtists_fair on Fair {\n  slug\n  internalID\n  artists: artistsConnection(first: 10) {\n    pageInfo {\n      hasNextPage\n      startCursor\n      endCursor\n    }\n    edges {\n      node {\n        ...ArtistListItem_artist\n        sortableID\n        id\n        __typename\n      }\n      cursor\n    }\n  }\n}\n\nfragment ArtistListItem_artist on Artist {\n  id\n  internalID\n  slug\n  name\n  initials\n  href\n  is_followed: isFollowed\n  nationality\n  birthday\n  deathday\n  image {\n    url\n  }\n}\n",
   "f5ef215bce437df51c4fb3e13abae0e5": "query createMockNetworkLayerTestsAliasQuery {\n  artist(id: \"banksy\") {\n    forSaleArtworks: artworksConnection(filter: IS_FOR_SALE) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n    notForSaleArtworks: artworksConnection(filter: IS_NOT_FOR_SALE) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n    id\n  }\n}\n",
   "0de7f21178b2e07411e95edac6027432": "query createMockNetworkLayerTestsQuery {\n  artwork(id: \"untitled\") {\n    id\n    title\n  }\n}\n",
   "48248313b514d25fe6222fdd2cc25dab": "mutation PartnerCardFollowMutation(\n  $input: FollowProfileInput!\n) {\n  followProfile(input: $input) {\n    profile {\n      id\n      slug\n      internalID\n      is_followed: isFollowed\n    }\n  }\n}\n",
-  "d528a3c7d2ec4f5a6beccdf606b1d293": "query ShowArtworksQuery(\n  $showID: String!\n) {\n  show(id: $showID) {\n    ...ShowArtworks_show\n    id\n  }\n}\n\nfragment ShowArtworks_show on Show {\n  id\n  slug\n  internalID\n  ...FilteredInfiniteScrollGrid_entity\n}\n\nfragment FilteredInfiniteScrollGrid_entity on EntityWithFilterArtworksConnectionInterface {\n  id\n  filterArtworksConnection(first: 10, medium: \"*\", priceRange: \"*-*\", aggregations: [MEDIUM, PRICE_RANGE, TOTAL]) {\n    edges {\n      node {\n        id\n        slug\n        __typename\n      }\n      cursor\n    }\n    ...Filters_filteredArtworks\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    id\n  }\n}\n\nfragment Filters_filteredArtworks on FilterArtworksConnection {\n  aggregations {\n    slice\n    counts {\n      name\n      value\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "e162f237279707d9d2f2e2cc7a6627b1": "query ShowArtworksQuery(\n  $showID: String!\n) {\n  show(id: $showID) {\n    ...ShowArtworks_show\n    id\n  }\n}\n\nfragment ShowArtworks_show on Show {\n  id\n  slug\n  internalID\n  ...FilteredInfiniteScrollGrid_entity\n}\n\nfragment FilteredInfiniteScrollGrid_entity on EntityWithFilterArtworksConnectionInterface {\n  id\n  filterArtworksConnection(first: 10, medium: \"*\", priceRange: \"*-*\", aggregations: [MEDIUM, PRICE_RANGE, TOTAL]) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...Filters_filteredArtworks\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    id\n  }\n}\n\nfragment Filters_filteredArtworks on FilterArtworksConnection {\n  aggregations {\n    slice\n    counts {\n      name\n      value\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
   "5aa1bfc9148a5b903c0e2955d9bca1e4": "mutation HeaderFollowGeneMutation(\n  $input: FollowGeneInput!\n) {\n  followGene(input: $input) {\n    gene {\n      id\n      isFollowed\n    }\n  }\n}\n",
-  "72df559297044e9a001ab18c8e53c6dc": "query FairArtworksQuery(\n  $fairID: String!\n) {\n  fair(id: $fairID) {\n    ...FairArtworks_fair\n    id\n  }\n}\n\nfragment FairArtworks_fair on Fair {\n  id\n  internalID\n  slug\n  ...FilteredInfiniteScrollGrid_entity\n}\n\nfragment FilteredInfiniteScrollGrid_entity on EntityWithFilterArtworksConnectionInterface {\n  id\n  filterArtworksConnection(first: 10, medium: \"*\", priceRange: \"*-*\", aggregations: [MEDIUM, PRICE_RANGE, TOTAL]) {\n    edges {\n      node {\n        id\n        slug\n        __typename\n      }\n      cursor\n    }\n    ...Filters_filteredArtworks\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    id\n  }\n}\n\nfragment Filters_filteredArtworks on FilterArtworksConnection {\n  aggregations {\n    slice\n    counts {\n      name\n      value\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_in_auction: isInAuction\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_live_open: isLiveOpen\n    is_open: isOpen\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
-  "ee3468ad07027d687673652145a95770": "query ActiveBidsRefetchQuery {\n  me {\n    ...ActiveBids_me\n    id\n  }\n}\n\nfragment ActiveBids_me on Me {\n  lot_standings: lotStandings(live: true) {\n    most_recent_bid: mostRecentBid {\n      id\n    }\n    ...ActiveBid_bid\n  }\n}\n\nfragment ActiveBid_bid on LotStanding {\n  is_leading_bidder: isLeadingBidder\n  sale {\n    href\n    is_live_open: isLiveOpen\n    id\n  }\n  most_recent_bid: mostRecentBid {\n    id\n    max_bid: maxBid {\n      display\n    }\n    sale_artwork: saleArtwork {\n      artwork {\n        href\n        image {\n          url\n        }\n        artist_names: artistNames\n        id\n      }\n      counts {\n        bidder_positions: bidderPositions\n      }\n      highest_bid: highestBid {\n        display\n      }\n      lot_label: lotLabel\n      reserve_status: reserveStatus\n      id\n    }\n  }\n}\n",
-  "d13130a7081378f93f0668ff3fa60453": "query ShowsQuery(\n  $count: Int!\n  $cursor: String\n) {\n  me {\n    ...Shows_me_1G22uz\n    id\n  }\n}\n\nfragment Shows_me_1G22uz on Me {\n  followsAndSaves {\n    shows: showsConnection(first: $count, after: $cursor) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n      edges {\n        node {\n          id\n          ...ShowItemRow_show\n          __typename\n        }\n        cursor\n      }\n    }\n  }\n}\n\nfragment ShowItemRow_show on Show {\n  id\n  slug\n  internalID\n  is_followed: isFollowed\n  name\n  isStubShow\n  partner {\n    __typename\n    ... on Partner {\n      name\n      profile {\n        image {\n          url(version: \"square\")\n        }\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  href\n  exhibition_period: exhibitionPeriod\n  status\n  cover_image: coverImage {\n    url\n    aspect_ratio: aspectRatio\n  }\n  is_fair_booth: isFairBooth\n  start_at: startAt\n  end_at: endAt\n}\n"
+  "13452b3965fea39155549ff276ce98e5": "query FairArtworksQuery(\n  $fairID: String!\n) {\n  fair(id: $fairID) {\n    ...FairArtworks_fair\n    id\n  }\n}\n\nfragment FairArtworks_fair on Fair {\n  id\n  internalID\n  slug\n  ...FilteredInfiniteScrollGrid_entity\n}\n\nfragment FilteredInfiniteScrollGrid_entity on EntityWithFilterArtworksConnectionInterface {\n  id\n  filterArtworksConnection(first: 10, medium: \"*\", priceRange: \"*-*\", aggregations: [MEDIUM, PRICE_RANGE, TOTAL]) {\n    edges {\n      node {\n        id\n        __typename\n      }\n      cursor\n    }\n    ...Filters_filteredArtworks\n    ...InfiniteScrollArtworksGrid_connection\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n    id\n  }\n}\n\nfragment Filters_filteredArtworks on FilterArtworksConnection {\n  aggregations {\n    slice\n    counts {\n      name\n      value\n    }\n  }\n}\n\nfragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {\n  pageInfo {\n    hasNextPage\n    startCursor\n    endCursor\n  }\n  edges {\n    __typename\n    node {\n      slug\n      id\n      image {\n        aspectRatio\n      }\n      ...ArtworkGridItem_artwork\n    }\n    ... on Node {\n      id\n    }\n  }\n}\n\nfragment ArtworkGridItem_artwork on Artwork {\n  title\n  date\n  sale_message: saleMessage\n  is_biddable: isBiddable\n  is_acquireable: isAcquireable\n  is_offerable: isOfferable\n  slug\n  sale {\n    is_auction: isAuction\n    is_closed: isClosed\n    display_timely_at: displayTimelyAt\n    id\n  }\n  sale_artwork: saleArtwork {\n    current_bid: currentBid {\n      display\n    }\n    id\n  }\n  image {\n    url(version: \"large\")\n    aspect_ratio: aspectRatio\n  }\n  artists(shallow: true) {\n    name\n    id\n  }\n  partner {\n    name\n    id\n  }\n  href\n}\n",
+  "21dba509602d1fec7a5c41c674613da0": "query ActiveBidsRefetchQuery {\n  me {\n    ...ActiveBids_me\n    id\n  }\n}\n\nfragment ActiveBids_me on Me {\n  lot_standings: lotStandings(live: true) {\n    most_recent_bid: mostRecentBid {\n      id\n    }\n    ...ActiveBid_bid\n  }\n}\n\nfragment ActiveBid_bid on LotStanding {\n  is_leading_bidder: isLeadingBidder\n  sale {\n    href\n    is_live_open: isLiveOpen\n    id\n  }\n  most_recent_bid: mostRecentBid {\n    id\n    sale_artwork: saleArtwork {\n      artwork {\n        href\n        image {\n          url\n        }\n        artist_names: artistNames\n        id\n      }\n      counts {\n        bidder_positions: bidderPositions\n      }\n      highest_bid: highestBid {\n        display\n      }\n      lot_label: lotLabel\n      reserve_status: reserveStatus\n      id\n    }\n  }\n}\n",
+  "fde33fc8fb6abe35c2e600dfe236c792": "query ShowsQuery(\n  $count: Int!\n  $cursor: String\n) {\n  me {\n    ...Shows_me_1G22uz\n    id\n  }\n}\n\nfragment Shows_me_1G22uz on Me {\n  followsAndSaves {\n    shows: showsConnection(first: $count, after: $cursor) {\n      pageInfo {\n        startCursor\n        endCursor\n        hasPreviousPage\n        hasNextPage\n      }\n      edges {\n        node {\n          id\n          ...ShowItemRow_show\n          __typename\n        }\n        cursor\n      }\n    }\n  }\n}\n\nfragment ShowItemRow_show on Show {\n  id\n  slug\n  internalID\n  is_followed: isFollowed\n  name\n  isStubShow\n  partner {\n    __typename\n    ... on Partner {\n      name\n      profile {\n        image {\n          url(version: \"square\")\n        }\n        id\n      }\n    }\n    ... on Node {\n      id\n    }\n    ... on ExternalPartner {\n      id\n    }\n  }\n  href\n  exhibition_period: exhibitionPeriod\n  status\n  cover_image: coverImage {\n    url\n  }\n  is_fair_booth: isFairBooth\n  end_at: endAt\n}\n"
 }
\ No newline at end of file
diff --git a/package.json b/package.json
index 0e6cba40a..7805fb467 100644
--- a/package.json
+++ b/package.json
@@ -27,6 +27,7 @@
     "ci:lint": "yarn lint --format json --out tslint-errors.json ",
     "ci:test": "jest --outputFile test-results.json --json --ci --forceExit",
     "danger": "danger",
+    "find-unused-fields": "ts-node --compiler-options '{\"types\": [\"node\"]}' scripts/find-unused-fields",
     "start": "yarn start-servers",
     "start-servers": "concurrently --kill-others 'yarn start-packager' 'yarn relay --watch' 'yarn storybook'",
     "start-packager": "rm -rf ./node_modules/.cache/babel-loader && env REACT_DEBUGGER=\"$([ -d '/Applications/React Native Debugger.app' ] && echo \"open 'rndebugger://set-debugger-loc?host=localhost&port=8081' --args\")\" node node_modules/react-native/local-cli/cli.js start",
@@ -114,10 +115,11 @@
     "@omakase/cli": "0.0.10",
     "@storybook/react-native": "3.3.11",
     "@types/chalk": "2.2.0",
+    "@types/dedent": "^0.7.0",
     "@types/jest": "24.0.11",
     "@types/lodash": "4.14.91",
     "@types/moment-timezone": "0.5.4",
-    "@types/node": "11.9.6",
+    "@types/node": "^12.7.5",
     "@types/query-string": "5.0.1",
     "@types/react": "16.8.10",
     "@types/react-native": "0.57.42",
@@ -138,12 +140,15 @@
     "concurrently": "2.2.0",
     "danger": "6.1.1",
     "danger-plugin-jest": "1.1.0",
+    "dedent": "^0.7.0",
     "enzyme": "3.9.0",
     "enzyme-adapter-react-16": "1.13.0",
     "husky": "1.3.1",
     "jest": "24.8.0",
     "jest-raw-loader": "1.0.1",
     "jest-styled-components": "7.0.0-2",
+    "json5": "^2.1.0",
+    "klaw-sync": "^6.0.0",
     "lint-staged": "6.1.1",
     "metro-react-native-babel-preset": "0.49.0",
     "patch-package": "6.1.2",
@@ -166,6 +171,7 @@
     "stylelint-config-styled-components": "0.1.1",
     "stylelint-processor-styled-components": "1.5.1",
     "ts-jest": "24.0.0",
+    "ts-node": "^8.4.1",
     "tslint": "5.14.0",
     "tslint-config-prettier": "1.18.0",
     "tslint-plugin-relay": "0.0.2",
diff --git a/scripts/find-unused-fields.ts b/scripts/find-unused-fields.ts
new file mode 100644
index 000000000..f0796fecd
--- /dev/null
+++ b/scripts/find-unused-fields.ts
@@ -0,0 +1,329 @@
+import chalk from "chalk"
+import dedent from "dedent"
+import fs from "fs"
+import json5 from "json5"
+import klawSync from "klaw-sync"
+import { flatten } from "lodash"
+import { basename, relative } from "path"
+import ts from "typescript"
+
+function main() {
+  if (process.argv.includes("--help") || process.argv.includes("-h")) {
+    // prettier-ignore
+    console.log(dedent`
+      🔎  ${chalk.bold("find-unused-fields")} 🔍
+
+      USAGE
+
+        ${chalk.cyan.bold("  yarn find-unused-fields")} ${chalk.cyan("[fragment name]")}
+
+      Add known exceptions in find-unused-fields.ts
+    `)
+    return
+  }
+  const languageService = getLanguageService()
+  const sources = getSources(languageService)
+  findUnusedFields(sources, languageService)
+}
+
+interface Ignored {
+  fields: string[]
+}
+/**
+ * Temporary way to ignore false positives due to indirect referencing
+ */
+const ignoredFragments: Record<string, Ignored> = {
+  ArtistForSaleArtworksGrid_artist: {
+    // pagination container, compiler complains without edges
+    fields: ["forSaleArtworks/edges"],
+  },
+  ArtistNotForSaleArtworksGrid_artist: {
+    // pagination container, compiler complains without edges
+    fields: ["forSaleArtworks/edges"],
+  },
+  // ArtworkActions_artwork: {
+  //   fields: ["dimensions", "image"],
+  // },
+  // ArtworkDetailsAboutTheWorkFromPartner_artwork: {
+  //   fields: ["partner/locations/city", "partner/profile/id"],
+  // },
+  // ArtworkFilter_artist: {
+  //   fields: [
+  //     "name",
+  //     "filtered_artworks/aggregations/counts/name",
+  //     "filtered_artworks/aggregations/counts/id",
+  //   ],
+  // },
+  // ArtworkImageBrowser_artwork: {
+  //   fields: [
+  //     "images/placeholder",
+  //     "images/placeholder",
+  //     "images/deepZoom/Image",
+  //     "images/aspectRatio",
+  //   ],
+  // },
+}
+
+function getLanguageService(): ts.LanguageService {
+  const { options, ...others } = ts.convertCompilerOptionsFromJson(
+    json5.parse(fs.readFileSync("./tsconfig.json").toString()).compilerOptions,
+    "."
+  )
+
+  if (others.errors && others.errors.length > 0) {
+    throw new Error(JSON.stringify(others.errors))
+  }
+
+  const sourceFiles = klawSync("./src", {
+    traverseAll: true,
+    filter(item) {
+      return item.path.endsWith(".ts") || item.path.endsWith(".tsx")
+    },
+  }).map(item => item.path)
+
+  // Create the language service files
+  return ts.createLanguageService(
+    {
+      getScriptFileNames: () => sourceFiles,
+      getScriptVersion: _ => "0",
+      getScriptSnapshot: fileName => {
+        if (!fs.existsSync(fileName)) {
+          return undefined
+        }
+
+        return ts.ScriptSnapshot.fromString(fs.readFileSync(fileName).toString())
+      },
+      getCurrentDirectory: () => process.cwd(),
+      getCompilationSettings: () => options,
+      getDefaultLibFileName: opts => ts.getDefaultLibFilePath(opts),
+      fileExists: ts.sys.fileExists,
+      readFile: ts.sys.readFile,
+      readDirectory: ts.sys.readDirectory,
+    },
+    ts.createDocumentRegistry()
+  )
+}
+
+const compare = (a, b) => (a < b ? -1 : a > b ? 1 : 0)
+
+function getSources(languageService: ts.LanguageService): ts.SourceFile[] {
+  let arg = process.argv[2]
+  if (arg) {
+    if (!fs.existsSync(arg)) {
+      if (fs.existsSync(`src/__generated__/${arg}.graphql.ts`)) {
+        arg = `src/__generated__/${arg}.graphql.ts`
+      } else {
+        console.error(chalk.red.bold("Bad argument"), chalk.bold("arg"))
+        console.error("Try a relay fragment name or the path of a generated relay typings file.")
+        process.exit(1)
+      }
+    }
+    return [languageService.getProgram().getSourceFile(arg)]
+  } else {
+    // get all files
+    return languageService
+      .getProgram()
+      .getSourceFiles()
+      .filter(f => f.fileName.match("__generated__") && !f.fileName.endsWith("Query.graphql.ts"))
+      .sort((a, b) => compare(basename(a.fileName), basename(b.fileName)))
+  }
+}
+
+/**
+ * Helper class for managing options and state while checking a fragment's
+ * generated interface. Traverses the interface first and then reports any
+ * errors found afterward.
+ */
+class FragmentCheckContext {
+  errors: string[] = []
+
+  constructor(
+    public opts: {
+      ignored: Ignored | null
+      languageService: ts.LanguageService
+      sourceFile: ts.SourceFile
+      fragmentName: string
+      rootNode: ts.TypeAliasDeclaration
+    }
+  ) {}
+
+  check() {
+    this.checkTypeNode({ node: this.opts.rootNode.type, path: [] })
+    this.reportErrors()
+  }
+
+  private reportErrors() {
+    if (!this.errors.length) {
+      return
+    }
+    const { rootNode, sourceFile, languageService, fragmentName } = this.opts
+    // We want to find the definition of the fragment so we can link to it
+    // when reporting the errors.
+
+    // We're working on the assumption that the fragment's generated type will
+    // be referenced in the same file as the fragment was defined, although that
+    // might not always be the case. It's no biggie if not, we'd just need to
+    // cmd+shift+f.
+
+    // Start out by finding references to our fragment
+    const refs = languageService.findReferences(sourceFile.fileName, rootNode.name.getStart())
+    if (!refs) {
+      throw new Error(`Can't find references to fragment ${rootNode.name.getStart()}`)
+    }
+
+    // filter out generated files
+    const fileNames = flatten(refs.map(({ references }) => references.map(r => r.fileName))).filter(
+      fn => !fn.endsWith(".graphql.ts")
+    )
+
+    const searchString = `fragment ${fragmentName} on `
+    let loc: {
+      fileName: string
+      line: number
+      column: number
+    } = null
+    for (const fileName of fileNames) {
+      const lines = fs
+        .readFileSync(fileName)
+        .toString()
+        .split("\n")
+      const line = lines.findIndex(l => l.includes(searchString))
+      if (line < 0) {
+        continue
+      }
+      const column = lines[line].indexOf(searchString)
+      loc = {
+        fileName,
+        line: line + 1,
+        column: column + 1,
+      }
+      break
+    }
+
+    let path = relative(process.cwd(), (loc && loc.fileName) || sourceFile.fileName)
+    if (loc) {
+      path += ":" + loc.line + ":" + loc.column
+    }
+
+    console.log("⚠️ ", chalk.bold(fragmentName), "→", chalk.cyan(path))
+    console.log(this.errors.map(line => "  " + line).join("\n"))
+    console.log()
+  }
+
+  // Recursively walk through the fragment's interface, checking each property's
+  // references as we go.
+  private checkTypeNode({ node, path }: { node: ts.TypeNode; path: ReadonlyArray<string> }) {
+    if (ts.isParenthesizedTypeNode(node)) {
+      if (!node.type) {
+        console.error("bad node", node)
+        return
+      }
+      this.checkTypeNode({ node: node.type, path })
+      return
+    }
+    if (ts.isArrayTypeNode(node)) {
+      this.checkTypeNode({ node: node.elementType, path })
+      return
+    }
+    if (ts.isUnionTypeNode(node)) {
+      for (const child of node.types) {
+        this.checkTypeNode({ node: child, path })
+      }
+      return
+    }
+    if (ts.isTypeReferenceNode(node)) {
+      if (node.typeArguments) {
+        for (const child of node.typeArguments) {
+          this.checkTypeNode({ node: child, path })
+        }
+      }
+      return
+    }
+    if (!ts.isTypeLiteralNode(node)) {
+      switch (node.kind) {
+        case ts.SyntaxKind.AnyKeyword:
+        case ts.SyntaxKind.NumberKeyword:
+        case ts.SyntaxKind.BooleanKeyword:
+        case ts.SyntaxKind.StringKeyword:
+        case ts.SyntaxKind.NullKeyword:
+          break
+        default:
+          this.errors.push(`Ignoring node of kind ${ts.SyntaxKind[node.kind]} at path ${path.join("/")}.`)
+      }
+      return
+    }
+
+    for (const property of node.members) {
+      const propertyName = property.name.getText()
+      // ignore meta properties
+      if (propertyName.startsWith('"') || propertyName === "__typename" || propertyName === "id") {
+        continue
+      }
+
+      const fieldPath = path.concat([propertyName]).join("/")
+
+      if (this.opts.ignored && this.opts.ignored.fields.includes(fieldPath)) {
+        continue
+      }
+
+      const findReferencesResult = this.opts.languageService.findReferences(
+        node.getSourceFile().fileName,
+        property.name.getStart()
+      )
+
+      if (!findReferencesResult) {
+        this.errors.push(`No references found to field at path ${fieldPath}, this should never happen 😱`)
+        continue
+      }
+
+      if (findReferencesResult.every(({ references }) => references.length === 1)) {
+        this.errors.push(`${chalk.gray("Possibly unused field")} ${fieldPath}`)
+        continue
+      }
+
+      const typeNodes = property.getChildren().filter(ts.isTypeNode)
+      if (typeNodes.length !== 1) {
+        this.errors.push(`️⁉️ Expected exactly one type node for child property at path ${fieldPath}`)
+        continue
+      }
+
+      this.checkTypeNode({
+        node: typeNodes[0],
+        path: path.concat([propertyName]),
+      })
+    }
+  }
+}
+
+function findUnusedFields(sources: ts.SourceFile[], languageService: ts.LanguageService) {
+  ts.transform(sources, [
+    context => file =>
+      ts.visitEachChild(
+        file,
+        node => {
+          // stop if this isn't a top-level type declaration e.g. `type Banana = { ... }`
+          if (!ts.isTypeAliasDeclaration(node)) {
+            return node
+          }
+          const fragmentName = node.name.getText()
+          // stop if this isn't a fragment type e.g. we want Reject_order but not Reject_order$ref
+          if (!fragmentName.match(/^\w+_\w+$/)) {
+            return node
+          }
+
+          new FragmentCheckContext({
+            fragmentName,
+            ignored: ignoredFragments[fragmentName],
+            languageService,
+            sourceFile: file,
+            rootNode: node,
+          }).check()
+
+          return node
+        },
+        context
+      ),
+  ])
+}
+
+main()
diff --git a/src/__generated__/ActiveBid_bid.graphql.ts b/src/__generated__/ActiveBid_bid.graphql.ts
index c0266d971..fb7fc8de5 100644
--- a/src/__generated__/ActiveBid_bid.graphql.ts
+++ b/src/__generated__/ActiveBid_bid.graphql.ts
@@ -11,9 +11,6 @@ export type ActiveBid_bid = {
     } | null;
     readonly most_recent_bid: {
         readonly id: string;
-        readonly max_bid: {
-            readonly display: string | null;
-        } | null;
         readonly sale_artwork: {
             readonly artwork: {
                 readonly href: string | null;
@@ -44,16 +41,7 @@ var v0 = {
   "name": "href",
   "args": null,
   "storageKey": null
-},
-v1 = [
-  {
-    "kind": "ScalarField",
-    "alias": null,
-    "name": "display",
-    "args": null,
-    "storageKey": null
-  }
-];
+};
 return {
   "kind": "Fragment",
   "name": "ActiveBid_bid",
@@ -103,16 +91,6 @@ return {
           "args": null,
           "storageKey": null
         },
-        {
-          "kind": "LinkedField",
-          "alias": "max_bid",
-          "name": "maxBid",
-          "storageKey": null,
-          "args": null,
-          "concreteType": "BidderPositionMaxBid",
-          "plural": false,
-          "selections": (v1/*: any*/)
-        },
         {
           "kind": "LinkedField",
           "alias": "sale_artwork",
@@ -185,7 +163,15 @@ return {
               "args": null,
               "concreteType": "SaleArtworkHighestBid",
               "plural": false,
-              "selections": (v1/*: any*/)
+              "selections": [
+                {
+                  "kind": "ScalarField",
+                  "alias": null,
+                  "name": "display",
+                  "args": null,
+                  "storageKey": null
+                }
+              ]
             },
             {
               "kind": "ScalarField",
@@ -208,5 +194,5 @@ return {
   ]
 };
 })();
-(node as any).hash = '6c196712ca3d74580a8fd0b4c291b505';
+(node as any).hash = 'd32166296aef7a6c6e6c093e04193119';
 export default node;
diff --git a/src/__generated__/ActiveBidsQuery.graphql.ts b/src/__generated__/ActiveBidsQuery.graphql.ts
index fccdc09bc..7daf93e6c 100644
--- a/src/__generated__/ActiveBidsQuery.graphql.ts
+++ b/src/__generated__/ActiveBidsQuery.graphql.ts
@@ -41,9 +41,6 @@ fragment ActiveBid_bid on LotStanding {
   }
   most_recent_bid: mostRecentBid {
     id
-    max_bid: maxBid {
-      display
-    }
     sale_artwork: saleArtwork {
       artwork {
         href
@@ -75,16 +72,7 @@ var v0 = {
   "args": null,
   "storageKey": null
 },
-v1 = [
-  {
-    "kind": "ScalarField",
-    "alias": null,
-    "name": "display",
-    "args": null,
-    "storageKey": null
-  }
-],
-v2 = {
+v1 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "href",
@@ -157,16 +145,6 @@ return {
                 "plural": false,
                 "selections": [
                   (v0/*: any*/),
-                  {
-                    "kind": "LinkedField",
-                    "alias": "max_bid",
-                    "name": "maxBid",
-                    "storageKey": null,
-                    "args": null,
-                    "concreteType": "BidderPositionMaxBid",
-                    "plural": false,
-                    "selections": (v1/*: any*/)
-                  },
                   {
                     "kind": "LinkedField",
                     "alias": "sale_artwork",
@@ -185,7 +163,7 @@ return {
                         "concreteType": "Artwork",
                         "plural": false,
                         "selections": [
-                          (v2/*: any*/),
+                          (v1/*: any*/),
                           {
                             "kind": "LinkedField",
                             "alias": null,
@@ -240,7 +218,15 @@ return {
                         "args": null,
                         "concreteType": "SaleArtworkHighestBid",
                         "plural": false,
-                        "selections": (v1/*: any*/)
+                        "selections": [
+                          {
+                            "kind": "ScalarField",
+                            "alias": null,
+                            "name": "display",
+                            "args": null,
+                            "storageKey": null
+                          }
+                        ]
                       },
                       {
                         "kind": "ScalarField",
@@ -277,7 +263,7 @@ return {
                 "concreteType": "Sale",
                 "plural": false,
                 "selections": [
-                  (v2/*: any*/),
+                  (v1/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": "is_live_open",
@@ -298,7 +284,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ActiveBidsQuery",
-    "id": "16fa1baef49a1f0c2f60b6c31d15ebf1",
+    "id": "ae430b15aae2a3645581fbac0aef41bb",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/ActiveBidsRefetchQuery.graphql.ts b/src/__generated__/ActiveBidsRefetchQuery.graphql.ts
index 5432a2772..ef88c6631 100644
--- a/src/__generated__/ActiveBidsRefetchQuery.graphql.ts
+++ b/src/__generated__/ActiveBidsRefetchQuery.graphql.ts
@@ -41,9 +41,6 @@ fragment ActiveBid_bid on LotStanding {
   }
   most_recent_bid: mostRecentBid {
     id
-    max_bid: maxBid {
-      display
-    }
     sale_artwork: saleArtwork {
       artwork {
         href
@@ -75,16 +72,7 @@ var v0 = {
   "args": null,
   "storageKey": null
 },
-v1 = [
-  {
-    "kind": "ScalarField",
-    "alias": null,
-    "name": "display",
-    "args": null,
-    "storageKey": null
-  }
-],
-v2 = {
+v1 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "href",
@@ -157,16 +145,6 @@ return {
                 "plural": false,
                 "selections": [
                   (v0/*: any*/),
-                  {
-                    "kind": "LinkedField",
-                    "alias": "max_bid",
-                    "name": "maxBid",
-                    "storageKey": null,
-                    "args": null,
-                    "concreteType": "BidderPositionMaxBid",
-                    "plural": false,
-                    "selections": (v1/*: any*/)
-                  },
                   {
                     "kind": "LinkedField",
                     "alias": "sale_artwork",
@@ -185,7 +163,7 @@ return {
                         "concreteType": "Artwork",
                         "plural": false,
                         "selections": [
-                          (v2/*: any*/),
+                          (v1/*: any*/),
                           {
                             "kind": "LinkedField",
                             "alias": null,
@@ -240,7 +218,15 @@ return {
                         "args": null,
                         "concreteType": "SaleArtworkHighestBid",
                         "plural": false,
-                        "selections": (v1/*: any*/)
+                        "selections": [
+                          {
+                            "kind": "ScalarField",
+                            "alias": null,
+                            "name": "display",
+                            "args": null,
+                            "storageKey": null
+                          }
+                        ]
                       },
                       {
                         "kind": "ScalarField",
@@ -277,7 +263,7 @@ return {
                 "concreteType": "Sale",
                 "plural": false,
                 "selections": [
-                  (v2/*: any*/),
+                  (v1/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": "is_live_open",
@@ -298,7 +284,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ActiveBidsRefetchQuery",
-    "id": "ee3468ad07027d687673652145a95770",
+    "id": "21dba509602d1fec7a5c41c674613da0",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/ArtistForSaleArtworksGridQuery.graphql.ts b/src/__generated__/ArtistForSaleArtworksGridQuery.graphql.ts
index 99828cb64..81016859a 100644
--- a/src/__generated__/ArtistForSaleArtworksGridQuery.graphql.ts
+++ b/src/__generated__/ArtistForSaleArtworksGridQuery.graphql.ts
@@ -87,15 +87,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -362,13 +359,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_in_auction",
-                            "name": "isInAuction",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_biddable",
@@ -406,20 +396,6 @@ return {
                                 "args": null,
                                 "storageKey": null
                               },
-                              {
-                                "kind": "ScalarField",
-                                "alias": "is_live_open",
-                                "name": "isLiveOpen",
-                                "args": null,
-                                "storageKey": null
-                              },
-                              {
-                                "kind": "ScalarField",
-                                "alias": "is_open",
-                                "name": "isOpen",
-                                "args": null,
-                                "storageKey": null
-                              },
                               {
                                 "kind": "ScalarField",
                                 "alias": "is_closed",
@@ -568,7 +544,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ArtistForSaleArtworksGridQuery",
-    "id": "bba5bc29ee7e21ae8127d485fb6eb422",
+    "id": "0d1a3d414b1287aa0f6ae0c677644085",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/ArtistNotForSaleArtworksGridQuery.graphql.ts b/src/__generated__/ArtistNotForSaleArtworksGridQuery.graphql.ts
index 146609be5..40bb1bf2f 100644
--- a/src/__generated__/ArtistNotForSaleArtworksGridQuery.graphql.ts
+++ b/src/__generated__/ArtistNotForSaleArtworksGridQuery.graphql.ts
@@ -87,15 +87,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -362,13 +359,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_in_auction",
-                            "name": "isInAuction",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_biddable",
@@ -406,20 +396,6 @@ return {
                                 "args": null,
                                 "storageKey": null
                               },
-                              {
-                                "kind": "ScalarField",
-                                "alias": "is_live_open",
-                                "name": "isLiveOpen",
-                                "args": null,
-                                "storageKey": null
-                              },
-                              {
-                                "kind": "ScalarField",
-                                "alias": "is_open",
-                                "name": "isOpen",
-                                "args": null,
-                                "storageKey": null
-                              },
                               {
                                 "kind": "ScalarField",
                                 "alias": "is_closed",
@@ -568,7 +544,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ArtistNotForSaleArtworksGridQuery",
-    "id": "c1d3334f30a6e53f1f12185a7f35b5da",
+    "id": "cd62d00a3731b452c856d657e4fb237f",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/ArtistQuery.graphql.ts b/src/__generated__/ArtistQuery.graphql.ts
index dfd5c63f8..9c8004e5c 100644
--- a/src/__generated__/ArtistQuery.graphql.ts
+++ b/src/__generated__/ArtistQuery.graphql.ts
@@ -189,15 +189,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -298,7 +295,7 @@ fragment RelatedArtist_artist on Artist {
   href
   name
   counts {
-    for_sale_artworks: forSaleArtworks
+    forSaleArtworks
     artworks
   }
   image {
@@ -344,34 +341,27 @@ v3 = {
   "storageKey": null
 },
 v4 = {
-  "kind": "ScalarField",
-  "alias": "for_sale_artworks",
-  "name": "forSaleArtworks",
-  "args": null,
-  "storageKey": null
-},
-v5 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "id",
   "args": null,
   "storageKey": null
 },
-v6 = {
+v5 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "name",
   "args": null,
   "storageKey": null
 },
-v7 = {
+v6 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "href",
   "args": null,
   "storageKey": null
 },
-v8 = {
+v7 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "url",
@@ -384,26 +374,26 @@ v8 = {
   ],
   "storageKey": "url(version:\"large\")"
 },
-v9 = [
-  (v8/*: any*/)
+v8 = [
+  (v7/*: any*/)
 ],
-v10 = {
+v9 = {
   "kind": "Literal",
   "name": "first",
   "value": 10
 },
-v11 = [
-  (v6/*: any*/),
-  (v5/*: any*/)
+v10 = [
+  (v5/*: any*/),
+  (v4/*: any*/)
 ],
-v12 = {
+v11 = {
   "kind": "ScalarField",
   "alias": "is_fair_booth",
   "name": "isFairBooth",
   "args": null,
   "storageKey": null
 },
-v13 = {
+v12 = {
   "kind": "LinkedField",
   "alias": "cover_image",
   "name": "coverImage",
@@ -411,47 +401,47 @@ v13 = {
   "args": null,
   "concreteType": "Image",
   "plural": false,
-  "selections": (v9/*: any*/)
+  "selections": (v8/*: any*/)
 },
-v14 = {
+v13 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "kind",
   "args": null,
   "storageKey": null
 },
-v15 = {
+v14 = {
   "kind": "ScalarField",
   "alias": "exhibition_period",
   "name": "exhibitionPeriod",
   "args": null,
   "storageKey": null
 },
-v16 = {
+v15 = {
   "kind": "ScalarField",
   "alias": "status_update",
   "name": "statusUpdate",
   "args": null,
   "storageKey": null
 },
-v17 = {
+v16 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "status",
   "args": null,
   "storageKey": null
 },
-v18 = {
+v17 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "__typename",
   "args": null,
   "storageKey": null
 },
-v19 = [
-  (v6/*: any*/)
+v18 = [
+  (v5/*: any*/)
 ],
-v20 = {
+v19 = {
   "kind": "LinkedField",
   "alias": null,
   "name": "partner",
@@ -460,21 +450,21 @@ v20 = {
   "concreteType": null,
   "plural": false,
   "selections": [
-    (v18/*: any*/),
-    (v5/*: any*/),
+    (v17/*: any*/),
+    (v4/*: any*/),
     {
       "kind": "InlineFragment",
       "type": "Partner",
-      "selections": (v19/*: any*/)
+      "selections": (v18/*: any*/)
     },
     {
       "kind": "InlineFragment",
       "type": "ExternalPartner",
-      "selections": (v19/*: any*/)
+      "selections": (v18/*: any*/)
     }
   ]
 },
-v21 = {
+v20 = {
   "kind": "LinkedField",
   "alias": null,
   "name": "location",
@@ -490,10 +480,10 @@ v21 = {
       "args": null,
       "storageKey": null
     },
-    (v5/*: any*/)
+    (v4/*: any*/)
   ]
 },
-v22 = [
+v21 = [
   {
     "kind": "LinkedField",
     "alias": null,
@@ -512,29 +502,29 @@ v22 = [
         "concreteType": "Show",
         "plural": false,
         "selections": [
-          (v5/*: any*/),
+          (v4/*: any*/),
           (v2/*: any*/),
-          (v7/*: any*/),
+          (v6/*: any*/),
+          (v11/*: any*/),
           (v12/*: any*/),
           (v13/*: any*/),
+          (v5/*: any*/),
           (v14/*: any*/),
-          (v6/*: any*/),
           (v15/*: any*/),
           (v16/*: any*/),
-          (v17/*: any*/),
-          (v20/*: any*/),
-          (v21/*: any*/)
+          (v19/*: any*/),
+          (v20/*: any*/)
         ]
       }
     ]
   }
 ],
-v23 = {
+v22 = {
   "kind": "Literal",
   "name": "sort",
   "value": "PARTNER_UPDATED_AT_DESC"
 },
-v24 = [
+v23 = [
   {
     "kind": "Literal",
     "name": "filter",
@@ -542,10 +532,10 @@ v24 = [
       "IS_FOR_SALE"
     ]
   },
-  (v10/*: any*/),
-  (v23/*: any*/)
+  (v9/*: any*/),
+  (v22/*: any*/)
 ],
-v25 = [
+v24 = [
   {
     "kind": "LinkedField",
     "alias": null,
@@ -564,7 +554,7 @@ v25 = [
         "concreteType": "Artwork",
         "plural": false,
         "selections": [
-          (v5/*: any*/),
+          (v4/*: any*/),
           (v2/*: any*/),
           {
             "kind": "LinkedField",
@@ -582,7 +572,7 @@ v25 = [
                 "args": null,
                 "storageKey": null
               },
-              (v8/*: any*/),
+              (v7/*: any*/),
               {
                 "kind": "ScalarField",
                 "alias": "aspect_ratio",
@@ -613,13 +603,6 @@ v25 = [
             "args": null,
             "storageKey": null
           },
-          {
-            "kind": "ScalarField",
-            "alias": "is_in_auction",
-            "name": "isInAuction",
-            "args": null,
-            "storageKey": null
-          },
           {
             "kind": "ScalarField",
             "alias": "is_biddable",
@@ -657,20 +640,6 @@ v25 = [
                 "args": null,
                 "storageKey": null
               },
-              {
-                "kind": "ScalarField",
-                "alias": "is_live_open",
-                "name": "isLiveOpen",
-                "args": null,
-                "storageKey": null
-              },
-              {
-                "kind": "ScalarField",
-                "alias": "is_open",
-                "name": "isOpen",
-                "args": null,
-                "storageKey": null
-              },
               {
                 "kind": "ScalarField",
                 "alias": "is_closed",
@@ -685,7 +654,7 @@ v25 = [
                 "args": null,
                 "storageKey": null
               },
-              (v5/*: any*/)
+              (v4/*: any*/)
             ]
           },
           {
@@ -715,7 +684,7 @@ v25 = [
                   }
                 ]
               },
-              (v5/*: any*/)
+              (v4/*: any*/)
             ]
           },
           {
@@ -732,7 +701,7 @@ v25 = [
             ],
             "concreteType": "Artist",
             "plural": true,
-            "selections": (v11/*: any*/)
+            "selections": (v10/*: any*/)
           },
           {
             "kind": "LinkedField",
@@ -742,10 +711,10 @@ v25 = [
             "args": null,
             "concreteType": "Partner",
             "plural": false,
-            "selections": (v11/*: any*/)
+            "selections": (v10/*: any*/)
           },
-          (v7/*: any*/),
-          (v18/*: any*/)
+          (v6/*: any*/),
+          (v17/*: any*/)
         ]
       },
       {
@@ -755,7 +724,7 @@ v25 = [
         "args": null,
         "storageKey": null
       },
-      (v5/*: any*/)
+      (v4/*: any*/)
     ]
   },
   {
@@ -791,11 +760,11 @@ v25 = [
     ]
   }
 ],
-v26 = [
+v25 = [
   "filter",
   "sort"
 ],
-v27 = [
+v26 = [
   {
     "kind": "Literal",
     "name": "filter",
@@ -803,10 +772,10 @@ v27 = [
       "IS_NOT_FOR_SALE"
     ]
   },
-  (v10/*: any*/),
-  (v23/*: any*/)
+  (v9/*: any*/),
+  (v22/*: any*/)
 ],
-v28 = [
+v27 = [
   {
     "kind": "Literal",
     "name": "first",
@@ -912,10 +881,16 @@ return {
                 "args": null,
                 "storageKey": null
               },
-              (v4/*: any*/)
+              {
+                "kind": "ScalarField",
+                "alias": "for_sale_artworks",
+                "name": "forSaleArtworks",
+                "args": null,
+                "storageKey": null
+              }
             ]
           },
-          (v5/*: any*/),
+          (v4/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -923,7 +898,7 @@ return {
             "args": null,
             "storageKey": null
           },
-          (v6/*: any*/),
+          (v5/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -1001,9 +976,9 @@ return {
                         "concreteType": "Artist",
                         "plural": false,
                         "selections": [
-                          (v5/*: any*/),
-                          (v7/*: any*/),
+                          (v4/*: any*/),
                           (v6/*: any*/),
+                          (v5/*: any*/),
                           {
                             "kind": "LinkedField",
                             "alias": null,
@@ -1013,7 +988,13 @@ return {
                             "concreteType": "ArtistCounts",
                             "plural": false,
                             "selections": [
-                              (v4/*: any*/),
+                              {
+                                "kind": "ScalarField",
+                                "alias": null,
+                                "name": "forSaleArtworks",
+                                "args": null,
+                                "storageKey": null
+                              },
                               (v3/*: any*/)
                             ]
                           },
@@ -1025,7 +1006,7 @@ return {
                             "args": null,
                             "concreteType": "Image",
                             "plural": false,
-                            "selections": (v9/*: any*/)
+                            "selections": (v8/*: any*/)
                           }
                         ]
                       }
@@ -1041,7 +1022,7 @@ return {
             "name": "articlesConnection",
             "storageKey": "articlesConnection(first:10)",
             "args": [
-              (v10/*: any*/)
+              (v9/*: any*/)
             ],
             "concreteType": "ArticleConnection",
             "plural": false,
@@ -1064,7 +1045,7 @@ return {
                     "concreteType": "Article",
                     "plural": false,
                     "selections": [
-                      (v5/*: any*/),
+                      (v4/*: any*/),
                       {
                         "kind": "ScalarField",
                         "alias": "thumbnail_title",
@@ -1072,7 +1053,7 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      (v7/*: any*/),
+                      (v6/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -1081,7 +1062,7 @@ return {
                         "args": null,
                         "concreteType": "Author",
                         "plural": false,
-                        "selections": (v11/*: any*/)
+                        "selections": (v10/*: any*/)
                       },
                       {
                         "kind": "LinkedField",
@@ -1091,7 +1072,7 @@ return {
                         "args": null,
                         "concreteType": "Image",
                         "plural": false,
-                        "selections": (v9/*: any*/)
+                        "selections": (v8/*: any*/)
                       }
                     ]
                   }
@@ -1105,7 +1086,7 @@ return {
             "name": "showsConnection",
             "storageKey": "showsConnection(first:10,status:\"running\")",
             "args": [
-              (v10/*: any*/),
+              (v9/*: any*/),
               {
                 "kind": "Literal",
                 "name": "status",
@@ -1114,7 +1095,7 @@ return {
             ],
             "concreteType": "ShowConnection",
             "plural": false,
-            "selections": (v22/*: any*/)
+            "selections": (v21/*: any*/)
           },
           {
             "kind": "LinkedField",
@@ -1122,7 +1103,7 @@ return {
             "name": "showsConnection",
             "storageKey": "showsConnection(first:10,status:\"upcoming\")",
             "args": [
-              (v10/*: any*/),
+              (v9/*: any*/),
               {
                 "kind": "Literal",
                 "name": "status",
@@ -1131,45 +1112,45 @@ return {
             ],
             "concreteType": "ShowConnection",
             "plural": false,
-            "selections": (v22/*: any*/)
+            "selections": (v21/*: any*/)
           },
           {
             "kind": "LinkedField",
             "alias": "forSaleArtworks",
             "name": "artworksConnection",
             "storageKey": "artworksConnection(filter:[\"IS_FOR_SALE\"],first:10,sort:\"PARTNER_UPDATED_AT_DESC\")",
-            "args": (v24/*: any*/),
+            "args": (v23/*: any*/),
             "concreteType": "ArtworkConnection",
             "plural": false,
-            "selections": (v25/*: any*/)
+            "selections": (v24/*: any*/)
           },
           {
             "kind": "LinkedHandle",
             "alias": "forSaleArtworks",
             "name": "artworksConnection",
-            "args": (v24/*: any*/),
+            "args": (v23/*: any*/),
             "handle": "connection",
             "key": "ArtistForSaleArtworksGrid_forSaleArtworks",
-            "filters": (v26/*: any*/)
+            "filters": (v25/*: any*/)
           },
           {
             "kind": "LinkedField",
             "alias": "notForSaleArtworks",
             "name": "artworksConnection",
             "storageKey": "artworksConnection(filter:[\"IS_NOT_FOR_SALE\"],first:10,sort:\"PARTNER_UPDATED_AT_DESC\")",
-            "args": (v27/*: any*/),
+            "args": (v26/*: any*/),
             "concreteType": "ArtworkConnection",
             "plural": false,
-            "selections": (v25/*: any*/)
+            "selections": (v24/*: any*/)
           },
           {
             "kind": "LinkedHandle",
             "alias": "notForSaleArtworks",
             "name": "artworksConnection",
-            "args": (v27/*: any*/),
+            "args": (v26/*: any*/),
             "handle": "connection",
             "key": "ArtistNotForSaleArtworksGrid_notForSaleArtworks",
-            "filters": (v26/*: any*/)
+            "filters": (v25/*: any*/)
           },
           {
             "kind": "Condition",
@@ -1181,7 +1162,7 @@ return {
                 "alias": "pastSmallShows",
                 "name": "showsConnection",
                 "storageKey": "showsConnection(first:20,status:\"closed\")",
-                "args": (v28/*: any*/),
+                "args": (v27/*: any*/),
                 "concreteType": "ShowConnection",
                 "plural": false,
                 "selections": [
@@ -1204,17 +1185,17 @@ return {
                         "plural": false,
                         "selections": [
                           (v2/*: any*/),
-                          (v7/*: any*/),
+                          (v6/*: any*/),
+                          (v11/*: any*/),
                           (v12/*: any*/),
                           (v13/*: any*/),
+                          (v5/*: any*/),
                           (v14/*: any*/),
-                          (v6/*: any*/),
                           (v15/*: any*/),
                           (v16/*: any*/),
-                          (v17/*: any*/),
+                          (v19/*: any*/),
                           (v20/*: any*/),
-                          (v21/*: any*/),
-                          (v5/*: any*/)
+                          (v4/*: any*/)
                         ]
                       }
                     ]
@@ -1233,10 +1214,10 @@ return {
                 "alias": "pastLargeShows",
                 "name": "showsConnection",
                 "storageKey": "showsConnection(first:20,status:\"closed\")",
-                "args": (v28/*: any*/),
+                "args": (v27/*: any*/),
                 "concreteType": "ShowConnection",
                 "plural": false,
-                "selections": (v22/*: any*/)
+                "selections": (v21/*: any*/)
               }
             ]
           }
@@ -1247,7 +1228,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ArtistQuery",
-    "id": "fe7a47aeff766802ed4d312c06ca6610",
+    "id": "15be4e9ef408a4aa7c0853c99a726b68",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/ArtistsMeQuery.graphql.ts b/src/__generated__/ArtistsMeQuery.graphql.ts
index d9cb3d035..22b2b1f0d 100644
--- a/src/__generated__/ArtistsMeQuery.graphql.ts
+++ b/src/__generated__/ArtistsMeQuery.graphql.ts
@@ -32,14 +32,9 @@ query ArtistsMeQuery(
 fragment Artists_me_1G22uz on Me {
   followsAndSaves {
     artists: artistsConnection(first: $count, after: $cursor) {
-      pageInfo {
-        endCursor
-        hasNextPage
-      }
       edges {
         node {
           artist {
-            slug
             id
             name
             href
@@ -52,6 +47,10 @@ fragment Artists_me_1G22uz on Me {
         }
         cursor
       }
+      pageInfo {
+        endCursor
+        hasNextPage
+      }
     }
   }
 }
@@ -161,31 +160,6 @@ return {
                 "concreteType": "FollowArtistConnection",
                 "plural": false,
                 "selections": [
-                  {
-                    "kind": "LinkedField",
-                    "alias": null,
-                    "name": "pageInfo",
-                    "storageKey": null,
-                    "args": null,
-                    "concreteType": "PageInfo",
-                    "plural": false,
-                    "selections": [
-                      {
-                        "kind": "ScalarField",
-                        "alias": null,
-                        "name": "endCursor",
-                        "args": null,
-                        "storageKey": null
-                      },
-                      {
-                        "kind": "ScalarField",
-                        "alias": null,
-                        "name": "hasNextPage",
-                        "args": null,
-                        "storageKey": null
-                      }
-                    ]
-                  },
                   {
                     "kind": "LinkedField",
                     "alias": null,
@@ -213,13 +187,6 @@ return {
                             "concreteType": "Artist",
                             "plural": false,
                             "selections": [
-                              {
-                                "kind": "ScalarField",
-                                "alias": null,
-                                "name": "slug",
-                                "args": null,
-                                "storageKey": null
-                              },
                               (v2/*: any*/),
                               {
                                 "kind": "ScalarField",
@@ -273,6 +240,31 @@ return {
                         "storageKey": null
                       }
                     ]
+                  },
+                  {
+                    "kind": "LinkedField",
+                    "alias": null,
+                    "name": "pageInfo",
+                    "storageKey": null,
+                    "args": null,
+                    "concreteType": "PageInfo",
+                    "plural": false,
+                    "selections": [
+                      {
+                        "kind": "ScalarField",
+                        "alias": null,
+                        "name": "endCursor",
+                        "args": null,
+                        "storageKey": null
+                      },
+                      {
+                        "kind": "ScalarField",
+                        "alias": null,
+                        "name": "hasNextPage",
+                        "args": null,
+                        "storageKey": null
+                      }
+                    ]
                   }
                 ]
               },
@@ -295,7 +287,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ArtistsMeQuery",
-    "id": "c31e339940fd7dcf22e3e120670d26fb",
+    "id": "b108ebed90e257a8a29d53a085165670",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/Artists_me.graphql.ts b/src/__generated__/Artists_me.graphql.ts
index b39a90308..477595215 100644
--- a/src/__generated__/Artists_me.graphql.ts
+++ b/src/__generated__/Artists_me.graphql.ts
@@ -6,14 +6,9 @@ export type Artists_me$ref = typeof _Artists_me$ref;
 export type Artists_me = {
     readonly followsAndSaves: {
         readonly artists: {
-            readonly pageInfo: {
-                readonly endCursor: string | null;
-                readonly hasNextPage: boolean;
-            };
             readonly edges: ReadonlyArray<{
                 readonly node: {
                     readonly artist: {
-                        readonly slug: string;
                         readonly id: string;
                         readonly name: string | null;
                         readonly href: string | null;
@@ -80,31 +75,6 @@ const node: ReaderFragment = {
           "concreteType": "FollowArtistConnection",
           "plural": false,
           "selections": [
-            {
-              "kind": "LinkedField",
-              "alias": null,
-              "name": "pageInfo",
-              "storageKey": null,
-              "args": null,
-              "concreteType": "PageInfo",
-              "plural": false,
-              "selections": [
-                {
-                  "kind": "ScalarField",
-                  "alias": null,
-                  "name": "endCursor",
-                  "args": null,
-                  "storageKey": null
-                },
-                {
-                  "kind": "ScalarField",
-                  "alias": null,
-                  "name": "hasNextPage",
-                  "args": null,
-                  "storageKey": null
-                }
-              ]
-            },
             {
               "kind": "LinkedField",
               "alias": null,
@@ -132,13 +102,6 @@ const node: ReaderFragment = {
                       "concreteType": "Artist",
                       "plural": false,
                       "selections": [
-                        {
-                          "kind": "ScalarField",
-                          "alias": null,
-                          "name": "slug",
-                          "args": null,
-                          "storageKey": null
-                        },
                         {
                           "kind": "ScalarField",
                           "alias": null,
@@ -197,6 +160,31 @@ const node: ReaderFragment = {
                   "storageKey": null
                 }
               ]
+            },
+            {
+              "kind": "LinkedField",
+              "alias": null,
+              "name": "pageInfo",
+              "storageKey": null,
+              "args": null,
+              "concreteType": "PageInfo",
+              "plural": false,
+              "selections": [
+                {
+                  "kind": "ScalarField",
+                  "alias": null,
+                  "name": "endCursor",
+                  "args": null,
+                  "storageKey": null
+                },
+                {
+                  "kind": "ScalarField",
+                  "alias": null,
+                  "name": "hasNextPage",
+                  "args": null,
+                  "storageKey": null
+                }
+              ]
             }
           ]
         }
@@ -204,5 +192,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = 'd0ea909bb37218abe30ea31f63b234c0';
+(node as any).hash = 'd47254c16bad91ecad0da4e66a930156';
 export default node;
diff --git a/src/__generated__/ArtworkGridItem_artwork.graphql.ts b/src/__generated__/ArtworkGridItem_artwork.graphql.ts
index 875ab3fbe..38d228752 100644
--- a/src/__generated__/ArtworkGridItem_artwork.graphql.ts
+++ b/src/__generated__/ArtworkGridItem_artwork.graphql.ts
@@ -7,15 +7,12 @@ export type ArtworkGridItem_artwork = {
     readonly title: string | null;
     readonly date: string | null;
     readonly sale_message: string | null;
-    readonly is_in_auction: boolean | null;
     readonly is_biddable: boolean | null;
     readonly is_acquireable: boolean | null;
     readonly is_offerable: boolean | null;
     readonly slug: string;
     readonly sale: {
         readonly is_auction: boolean | null;
-        readonly is_live_open: boolean | null;
-        readonly is_open: boolean | null;
         readonly is_closed: boolean | null;
         readonly display_timely_at: string | null;
     } | null;
@@ -78,13 +75,6 @@ return {
       "args": null,
       "storageKey": null
     },
-    {
-      "kind": "ScalarField",
-      "alias": "is_in_auction",
-      "name": "isInAuction",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "ScalarField",
       "alias": "is_biddable",
@@ -129,20 +119,6 @@ return {
           "args": null,
           "storageKey": null
         },
-        {
-          "kind": "ScalarField",
-          "alias": "is_live_open",
-          "name": "isLiveOpen",
-          "args": null,
-          "storageKey": null
-        },
-        {
-          "kind": "ScalarField",
-          "alias": "is_open",
-          "name": "isOpen",
-          "args": null,
-          "storageKey": null
-        },
         {
           "kind": "ScalarField",
           "alias": "is_closed",
@@ -255,5 +231,5 @@ return {
   ]
 };
 })();
-(node as any).hash = 'abd0e65d56c6630565d9dd9067f1d11a';
+(node as any).hash = '42b38b569004394987dd8f28d13514f3';
 export default node;
diff --git a/src/__generated__/ArtworkQuery.graphql.ts b/src/__generated__/ArtworkQuery.graphql.ts
index 6be36ed0b..35fff5979 100644
--- a/src/__generated__/ArtworkQuery.graphql.ts
+++ b/src/__generated__/ArtworkQuery.graphql.ts
@@ -38,7 +38,6 @@ fragment Artwork_artwork on Artwork {
     id
   }
   artist {
-    name
     biography_blurb: biographyBlurb {
       text
     }
@@ -116,14 +115,12 @@ fragment PartnerCard_artwork on Artwork {
     type
     name
     slug
-    internalID
     id
     href
     initials
     profile {
       id
       internalID
-      slug
       is_followed: isFollowed
       icon {
         url(version: "square140")
@@ -194,8 +191,6 @@ fragment ArtworkDetails_artwork on Artwork {
 
 fragment ContextCard_artwork on Artwork {
   id
-  slug
-  internalID
   context {
     __typename
     ... on Sale {
@@ -205,7 +200,7 @@ fragment ContextCard_artwork on Artwork {
       href
       formattedStartDateTime
       isAuction
-      cover_image: coverImage {
+      coverImage {
         url
       }
     }
@@ -213,16 +208,19 @@ fragment ContextCard_artwork on Artwork {
       id
       name
       href
-      exhibition_period: exhibitionPeriod
+      exhibitionPeriod
       image {
         url
       }
     }
     ... on Show {
       id
+      internalID
+      slug
       name
       href
-      exhibition_period: exhibitionPeriod
+      exhibitionPeriod
+      isFollowed
       coverImage {
         url
       }
@@ -231,18 +229,6 @@ fragment ContextCard_artwork on Artwork {
       id
     }
   }
-  shows(size: 1) {
-    id
-    name
-    href
-    slug
-    internalID
-    exhibition_period: exhibitionPeriod
-    is_followed: isFollowed
-    cover_image: coverImage {
-      url
-    }
-  }
 }
 
 fragment ArtworkHeader_artwork on Artwork {
@@ -254,28 +240,23 @@ fragment ArtworkHeader_artwork on Artwork {
 }
 
 fragment CommercialInformation_artwork on Artwork {
+  isAcquireable
+  isOfferable
+  isInquireable
+  isInAuction
   availability
+  saleMessage
   artists {
     isConsignable
     id
   }
   editionSets {
-    isAcquireable
-    isOfferable
-    saleMessage
     id
   }
   sale {
     isClosed
     id
   }
-  saleMessage
-  shippingInfo
-  shippingOrigin
-  isAcquireable
-  isOfferable
-  isInquireable
-  isInAuction
   ...CommercialButtons_artwork
   ...CommercialPartnerInformation_artwork
   ...CommercialEditionSetInformation_artwork
@@ -292,11 +273,9 @@ fragment ArtworkHistory_artwork on Artwork {
 
 fragment CommercialButtons_artwork on Artwork {
   slug
-  internalID
   isAcquireable
   isOfferable
   isInquireable
-  isBiddable
   isInAuction
   isBuyNowable
   editionSets {
@@ -329,8 +308,6 @@ fragment CommercialEditionSetInformation_artwork on Artwork {
   editionSets {
     id
     internalID
-    isAcquireable
-    isOfferable
     saleMessage
     editionOf
     dimensions {
@@ -345,7 +322,6 @@ fragment AuctionCountDownTimer_artwork on Artwork {
   sale {
     startAt
     endAt
-    liveStartAt
     formattedStartDateTime
     id
   }
@@ -371,7 +347,6 @@ fragment ArtworkExtraLinks_artwork on Artwork {
 }
 
 fragment AuctionPrice_artwork on Artwork {
-  slug
   sale {
     internalID
     isWithBuyersPremium
@@ -380,9 +355,7 @@ fragment AuctionPrice_artwork on Artwork {
     id
   }
   saleArtwork {
-    isWithReserve
     reserveMessage
-    reserveStatus
     currentBid {
       display
     }
@@ -414,13 +387,11 @@ fragment BidButton_artwork on Artwork {
   slug
   sale {
     slug
-    internalID
     registrationStatus {
       qualifiedForBidding
       id
     }
     isPreview
-    isOpen
     isLiveOpen
     isClosed
     isRegistrationClosed
@@ -437,7 +408,6 @@ fragment BidButton_artwork on Artwork {
   saleArtwork {
     increments {
       cents
-      display
     }
     id
   }
@@ -503,7 +473,7 @@ fragment ArtworkTombstone_artwork on Artwork {
 }
 
 fragment ImageCarousel_images on Image {
-  image_url: imageURL
+  url: imageURL
   width
   height
   deepZoom {
@@ -544,7 +514,6 @@ fragment ArtistListItem_artist on Artist {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -555,15 +524,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -630,21 +596,21 @@ v4 = {
 v5 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "internalID",
+  "name": "href",
   "args": null,
   "storageKey": null
 },
 v6 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "href",
+  "name": "initials",
   "args": null,
   "storageKey": null
 },
 v7 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "initials",
+  "name": "internalID",
   "args": null,
   "storageKey": null
 },
@@ -712,7 +678,7 @@ v13 = {
 },
 v14 = {
   "kind": "ScalarField",
-  "alias": "exhibition_period",
+  "alias": null,
   "name": "exhibitionPeriod",
   "args": null,
   "storageKey": null
@@ -738,7 +704,7 @@ v16 = {
 },
 v17 = {
   "kind": "LinkedField",
-  "alias": "cover_image",
+  "alias": null,
   "name": "coverImage",
   "storageKey": null,
   "args": null,
@@ -795,16 +761,13 @@ v25 = [
   (v3/*: any*/),
   (v2/*: any*/)
 ],
-v26 = [
-  {
-    "kind": "ScalarField",
-    "alias": null,
-    "name": "cents",
-    "args": null,
-    "storageKey": null
-  },
-  (v23/*: any*/)
-],
+v26 = {
+  "kind": "ScalarField",
+  "alias": null,
+  "name": "cents",
+  "args": null,
+  "storageKey": null
+},
 v27 = {
   "kind": "LinkedField",
   "alias": null,
@@ -831,20 +794,6 @@ v27 = {
   ]
 },
 v28 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "isAcquireable",
-  "args": null,
-  "storageKey": null
-},
-v29 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "isOfferable",
-  "args": null,
-  "storageKey": null
-},
-v30 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "saleMessage",
@@ -955,7 +904,6 @@ return {
               (v4/*: any*/),
               (v5/*: any*/),
               (v6/*: any*/),
-              (v7/*: any*/),
               {
                 "kind": "LinkedField",
                 "alias": null,
@@ -966,8 +914,7 @@ return {
                 "plural": false,
                 "selections": [
                   (v2/*: any*/),
-                  (v5/*: any*/),
-                  (v4/*: any*/),
+                  (v7/*: any*/),
                   (v8/*: any*/),
                   {
                     "kind": "LinkedField",
@@ -1025,9 +972,9 @@ return {
             "concreteType": "Artist",
             "plural": false,
             "selections": [
-              (v3/*: any*/),
               (v9/*: any*/),
-              (v2/*: any*/)
+              (v2/*: any*/),
+              (v3/*: any*/)
             ]
           },
           {
@@ -1062,7 +1009,6 @@ return {
                 "storageKey": null
               },
               (v4/*: any*/),
-              (v5/*: any*/),
               {
                 "kind": "LinkedField",
                 "alias": null,
@@ -1089,13 +1035,6 @@ return {
                 "args": null,
                 "storageKey": null
               },
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "isOpen",
-                "args": null,
-                "storageKey": null
-              },
               (v10/*: any*/),
               {
                 "kind": "ScalarField",
@@ -1118,14 +1057,8 @@ return {
                 "args": null,
                 "storageKey": null
               },
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "liveStartAt",
-                "args": null,
-                "storageKey": null
-              },
               (v11/*: any*/),
+              (v7/*: any*/),
               {
                 "kind": "ScalarField",
                 "alias": null,
@@ -1233,7 +1166,7 @@ return {
                 "type": "Fair",
                 "selections": [
                   (v3/*: any*/),
-                  (v6/*: any*/),
+                  (v5/*: any*/),
                   (v14/*: any*/),
                   (v16/*: any*/)
                 ]
@@ -1244,7 +1177,7 @@ return {
                 "selections": [
                   (v3/*: any*/),
                   (v10/*: any*/),
-                  (v6/*: any*/),
+                  (v5/*: any*/),
                   (v11/*: any*/),
                   {
                     "kind": "ScalarField",
@@ -1260,19 +1193,19 @@ return {
                 "kind": "InlineFragment",
                 "type": "Show",
                 "selections": [
+                  (v7/*: any*/),
+                  (v4/*: any*/),
                   (v3/*: any*/),
-                  (v6/*: any*/),
+                  (v5/*: any*/),
                   (v14/*: any*/),
                   {
-                    "kind": "LinkedField",
+                    "kind": "ScalarField",
                     "alias": null,
-                    "name": "coverImage",
-                    "storageKey": null,
+                    "name": "isFollowed",
                     "args": null,
-                    "concreteType": "Image",
-                    "plural": false,
-                    "selections": (v15/*: any*/)
-                  }
+                    "storageKey": null
+                  },
+                  (v17/*: any*/)
                 ]
               }
             ]
@@ -1320,7 +1253,6 @@ return {
                         "plural": false,
                         "selections": [
                           (v2/*: any*/),
-                          (v4/*: any*/),
                           {
                             "kind": "LinkedField",
                             "alias": null,
@@ -1361,16 +1293,10 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_in_auction",
-                            "name": "isInAuction",
-                            "args": null,
-                            "storageKey": null
-                          },
                           (v20/*: any*/),
                           (v21/*: any*/),
                           (v22/*: any*/),
+                          (v4/*: any*/),
                           {
                             "kind": "LinkedField",
                             "alias": null,
@@ -1387,20 +1313,6 @@ return {
                                 "args": null,
                                 "storageKey": null
                               },
-                              {
-                                "kind": "ScalarField",
-                                "alias": "is_live_open",
-                                "name": "isLiveOpen",
-                                "args": null,
-                                "storageKey": null
-                              },
-                              {
-                                "kind": "ScalarField",
-                                "alias": "is_open",
-                                "name": "isOpen",
-                                "args": null,
-                                "storageKey": null
-                              },
                               {
                                 "kind": "ScalarField",
                                 "alias": "is_closed",
@@ -1466,7 +1378,7 @@ return {
                             "plural": false,
                             "selections": (v25/*: any*/)
                           },
-                          (v6/*: any*/)
+                          (v5/*: any*/)
                         ]
                       }
                     ]
@@ -1492,7 +1404,7 @@ return {
             ]
           },
           (v4/*: any*/),
-          (v5/*: any*/),
+          (v7/*: any*/),
           (v2/*: any*/),
           (v21/*: any*/),
           (v22/*: any*/),
@@ -1522,11 +1434,11 @@ return {
             "selections": [
               (v2/*: any*/),
               (v9/*: any*/),
-              (v5/*: any*/),
+              (v7/*: any*/),
               (v4/*: any*/),
               (v3/*: any*/),
-              (v7/*: any*/),
               (v6/*: any*/),
+              (v5/*: any*/),
               (v8/*: any*/),
               {
                 "kind": "ScalarField",
@@ -1559,33 +1471,8 @@ return {
               }
             ]
           },
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "shows",
-            "storageKey": "shows(size:1)",
-            "args": [
-              {
-                "kind": "Literal",
-                "name": "size",
-                "value": 1
-              }
-            ],
-            "concreteType": "Show",
-            "plural": true,
-            "selections": [
-              (v2/*: any*/),
-              (v3/*: any*/),
-              (v6/*: any*/),
-              (v4/*: any*/),
-              (v5/*: any*/),
-              (v14/*: any*/),
-              (v8/*: any*/),
-              (v17/*: any*/)
-            ]
-          },
           (v18/*: any*/),
-          (v6/*: any*/),
+          (v5/*: any*/),
           {
             "kind": "ScalarField",
             "alias": "is_saved",
@@ -1669,14 +1556,9 @@ return {
                 "args": null,
                 "concreteType": "BidIncrementsFormatted",
                 "plural": true,
-                "selections": (v26/*: any*/)
-              },
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "isWithReserve",
-                "args": null,
-                "storageKey": null
+                "selections": [
+                  (v26/*: any*/)
+                ]
               },
               {
                 "kind": "ScalarField",
@@ -1685,13 +1567,6 @@ return {
                 "args": null,
                 "storageKey": null
               },
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "reserveStatus",
-                "args": null,
-                "storageKey": null
-              },
               {
                 "kind": "LinkedField",
                 "alias": null,
@@ -1760,7 +1635,7 @@ return {
             "selections": [
               {
                 "kind": "ScalarField",
-                "alias": "image_url",
+                "alias": "url",
                 "name": "imageURL",
                 "args": null,
                 "storageKey": null
@@ -1849,47 +1724,20 @@ return {
               }
             ]
           },
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "editionSets",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "EditionSet",
-            "plural": true,
-            "selections": [
-              (v28/*: any*/),
-              (v29/*: any*/),
-              (v30/*: any*/),
-              (v2/*: any*/),
-              (v5/*: any*/),
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "editionOf",
-                "args": null,
-                "storageKey": null
-              },
-              (v27/*: any*/)
-            ]
-          },
-          (v30/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
-            "name": "shippingInfo",
+            "name": "isAcquireable",
             "args": null,
             "storageKey": null
           },
           {
             "kind": "ScalarField",
             "alias": null,
-            "name": "shippingOrigin",
+            "name": "isOfferable",
             "args": null,
             "storageKey": null
           },
-          (v28/*: any*/),
-          (v29/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -1897,12 +1745,28 @@ return {
             "args": null,
             "storageKey": null
           },
+          (v28/*: any*/),
           {
-            "kind": "ScalarField",
+            "kind": "LinkedField",
             "alias": null,
-            "name": "isBiddable",
+            "name": "editionSets",
+            "storageKey": null,
             "args": null,
-            "storageKey": null
+            "concreteType": "EditionSet",
+            "plural": true,
+            "selections": [
+              (v2/*: any*/),
+              (v7/*: any*/),
+              (v28/*: any*/),
+              {
+                "kind": "ScalarField",
+                "alias": null,
+                "name": "editionOf",
+                "args": null,
+                "storageKey": null
+              },
+              (v27/*: any*/)
+            ]
           },
           {
             "kind": "ScalarField",
@@ -1943,7 +1807,10 @@ return {
                     "args": null,
                     "concreteType": "BidderPositionMaxBid",
                     "plural": false,
-                    "selections": (v26/*: any*/)
+                    "selections": [
+                      (v26/*: any*/),
+                      (v23/*: any*/)
+                    ]
                   },
                   (v2/*: any*/)
                 ]
@@ -1976,6 +1843,20 @@ return {
             "args": null,
             "storageKey": null
           },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "shippingOrigin",
+            "args": null,
+            "storageKey": null
+          },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "shippingInfo",
+            "args": null,
+            "storageKey": null
+          },
           {
             "kind": "ScalarField",
             "alias": null,
@@ -1990,7 +1871,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ArtworkQuery",
-    "id": "c36c543b48219afbeb1466b9c4405d7e",
+    "id": "f3bb66d7266c14e7384e4224967303e2",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/ArtworkRailRefetchQuery.graphql.ts b/src/__generated__/ArtworkRailRefetchQuery.graphql.ts
index fb407b315..ce4ea7814 100644
--- a/src/__generated__/ArtworkRailRefetchQuery.graphql.ts
+++ b/src/__generated__/ArtworkRailRefetchQuery.graphql.ts
@@ -99,7 +99,6 @@ fragment ArtworkRailHeader_rail on HomePageArtworkModule {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -110,15 +109,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -400,7 +396,6 @@ return {
                     "plural": true,
                     "selections": [
                       (v3/*: any*/),
-                      (v5/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -447,13 +442,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -475,6 +463,7 @@ return {
                         "args": null,
                         "storageKey": null
                       },
+                      (v5/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -491,20 +480,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_live_open",
-                            "name": "isLiveOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_open",
-                            "name": "isOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -592,7 +567,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ArtworkRailRefetchQuery",
-    "id": "0df9c49752891ef187577ec6e267f5c7",
+    "id": "e553c6fe2dd63d7d9b6ba0fb2ca7a9a0",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/ArtworkRefetchQuery.graphql.ts b/src/__generated__/ArtworkRefetchQuery.graphql.ts
index fe50e6205..f8d79b341 100644
--- a/src/__generated__/ArtworkRefetchQuery.graphql.ts
+++ b/src/__generated__/ArtworkRefetchQuery.graphql.ts
@@ -40,7 +40,6 @@ fragment Artwork_artwork_abFTe on Artwork {
     id
   }
   artist {
-    name
     biography_blurb: biographyBlurb {
       text
     }
@@ -118,14 +117,12 @@ fragment PartnerCard_artwork on Artwork {
     type
     name
     slug
-    internalID
     id
     href
     initials
     profile {
       id
       internalID
-      slug
       is_followed: isFollowed
       icon {
         url(version: "square140")
@@ -196,8 +193,6 @@ fragment ArtworkDetails_artwork on Artwork {
 
 fragment ContextCard_artwork on Artwork {
   id
-  slug
-  internalID
   context {
     __typename
     ... on Sale {
@@ -207,7 +202,7 @@ fragment ContextCard_artwork on Artwork {
       href
       formattedStartDateTime
       isAuction
-      cover_image: coverImage {
+      coverImage {
         url
       }
     }
@@ -215,16 +210,19 @@ fragment ContextCard_artwork on Artwork {
       id
       name
       href
-      exhibition_period: exhibitionPeriod
+      exhibitionPeriod
       image {
         url
       }
     }
     ... on Show {
       id
+      internalID
+      slug
       name
       href
-      exhibition_period: exhibitionPeriod
+      exhibitionPeriod
+      isFollowed
       coverImage {
         url
       }
@@ -233,18 +231,6 @@ fragment ContextCard_artwork on Artwork {
       id
     }
   }
-  shows(size: 1) {
-    id
-    name
-    href
-    slug
-    internalID
-    exhibition_period: exhibitionPeriod
-    is_followed: isFollowed
-    cover_image: coverImage {
-      url
-    }
-  }
 }
 
 fragment ArtworkHeader_artwork on Artwork {
@@ -256,28 +242,23 @@ fragment ArtworkHeader_artwork on Artwork {
 }
 
 fragment CommercialInformation_artwork on Artwork {
+  isAcquireable
+  isOfferable
+  isInquireable
+  isInAuction
   availability
+  saleMessage
   artists {
     isConsignable
     id
   }
   editionSets {
-    isAcquireable
-    isOfferable
-    saleMessage
     id
   }
   sale {
     isClosed
     id
   }
-  saleMessage
-  shippingInfo
-  shippingOrigin
-  isAcquireable
-  isOfferable
-  isInquireable
-  isInAuction
   ...CommercialButtons_artwork
   ...CommercialPartnerInformation_artwork
   ...CommercialEditionSetInformation_artwork
@@ -294,11 +275,9 @@ fragment ArtworkHistory_artwork on Artwork {
 
 fragment CommercialButtons_artwork on Artwork {
   slug
-  internalID
   isAcquireable
   isOfferable
   isInquireable
-  isBiddable
   isInAuction
   isBuyNowable
   editionSets {
@@ -331,8 +310,6 @@ fragment CommercialEditionSetInformation_artwork on Artwork {
   editionSets {
     id
     internalID
-    isAcquireable
-    isOfferable
     saleMessage
     editionOf
     dimensions {
@@ -347,7 +324,6 @@ fragment AuctionCountDownTimer_artwork on Artwork {
   sale {
     startAt
     endAt
-    liveStartAt
     formattedStartDateTime
     id
   }
@@ -373,7 +349,6 @@ fragment ArtworkExtraLinks_artwork on Artwork {
 }
 
 fragment AuctionPrice_artwork on Artwork {
-  slug
   sale {
     internalID
     isWithBuyersPremium
@@ -382,9 +357,7 @@ fragment AuctionPrice_artwork on Artwork {
     id
   }
   saleArtwork {
-    isWithReserve
     reserveMessage
-    reserveStatus
     currentBid {
       display
     }
@@ -416,13 +389,11 @@ fragment BidButton_artwork on Artwork {
   slug
   sale {
     slug
-    internalID
     registrationStatus {
       qualifiedForBidding
       id
     }
     isPreview
-    isOpen
     isLiveOpen
     isClosed
     isRegistrationClosed
@@ -439,7 +410,6 @@ fragment BidButton_artwork on Artwork {
   saleArtwork {
     increments {
       cents
-      display
     }
     id
   }
@@ -505,7 +475,7 @@ fragment ArtworkTombstone_artwork on Artwork {
 }
 
 fragment ImageCarousel_images on Image {
-  image_url: imageURL
+  url: imageURL
   width
   height
   deepZoom {
@@ -546,7 +516,6 @@ fragment ArtistListItem_artist on Artist {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -557,15 +526,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -645,21 +611,21 @@ v5 = {
 v6 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "internalID",
+  "name": "href",
   "args": null,
   "storageKey": null
 },
 v7 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "href",
+  "name": "initials",
   "args": null,
   "storageKey": null
 },
 v8 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "initials",
+  "name": "internalID",
   "args": null,
   "storageKey": null
 },
@@ -720,7 +686,7 @@ v13 = [
 ],
 v14 = {
   "kind": "ScalarField",
-  "alias": "exhibition_period",
+  "alias": null,
   "name": "exhibitionPeriod",
   "args": null,
   "storageKey": null
@@ -746,7 +712,7 @@ v16 = {
 },
 v17 = {
   "kind": "LinkedField",
-  "alias": "cover_image",
+  "alias": null,
   "name": "coverImage",
   "storageKey": null,
   "args": null,
@@ -803,16 +769,13 @@ v25 = [
   (v4/*: any*/),
   (v3/*: any*/)
 ],
-v26 = [
-  {
-    "kind": "ScalarField",
-    "alias": null,
-    "name": "cents",
-    "args": null,
-    "storageKey": null
-  },
-  (v23/*: any*/)
-],
+v26 = {
+  "kind": "ScalarField",
+  "alias": null,
+  "name": "cents",
+  "args": null,
+  "storageKey": null
+},
 v27 = {
   "kind": "LinkedField",
   "alias": null,
@@ -839,20 +802,6 @@ v27 = {
   ]
 },
 v28 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "isAcquireable",
-  "args": null,
-  "storageKey": null
-},
-v29 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "isOfferable",
-  "args": null,
-  "storageKey": null
-},
-v30 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "saleMessage",
@@ -975,7 +924,6 @@ return {
                   (v5/*: any*/),
                   (v6/*: any*/),
                   (v7/*: any*/),
-                  (v8/*: any*/),
                   {
                     "kind": "LinkedField",
                     "alias": null,
@@ -986,8 +934,7 @@ return {
                     "plural": false,
                     "selections": [
                       (v3/*: any*/),
-                      (v6/*: any*/),
-                      (v5/*: any*/),
+                      (v8/*: any*/),
                       (v9/*: any*/),
                       {
                         "kind": "LinkedField",
@@ -1045,9 +992,9 @@ return {
                 "concreteType": "Artist",
                 "plural": false,
                 "selections": [
-                  (v4/*: any*/),
                   (v10/*: any*/),
-                  (v3/*: any*/)
+                  (v3/*: any*/),
+                  (v4/*: any*/)
                 ]
               },
               {
@@ -1082,7 +1029,6 @@ return {
                     "storageKey": null
                   },
                   (v5/*: any*/),
-                  (v6/*: any*/),
                   {
                     "kind": "LinkedField",
                     "alias": null,
@@ -1109,13 +1055,6 @@ return {
                     "args": null,
                     "storageKey": null
                   },
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "isOpen",
-                    "args": null,
-                    "storageKey": null
-                  },
                   (v11/*: any*/),
                   {
                     "kind": "ScalarField",
@@ -1138,14 +1077,8 @@ return {
                     "args": null,
                     "storageKey": null
                   },
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "liveStartAt",
-                    "args": null,
-                    "storageKey": null
-                  },
                   (v12/*: any*/),
+                  (v8/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": null,
@@ -1253,7 +1186,7 @@ return {
                     "type": "Fair",
                     "selections": [
                       (v4/*: any*/),
-                      (v7/*: any*/),
+                      (v6/*: any*/),
                       (v14/*: any*/),
                       (v16/*: any*/)
                     ]
@@ -1264,7 +1197,7 @@ return {
                     "selections": [
                       (v4/*: any*/),
                       (v11/*: any*/),
-                      (v7/*: any*/),
+                      (v6/*: any*/),
                       (v12/*: any*/),
                       {
                         "kind": "ScalarField",
@@ -1280,19 +1213,19 @@ return {
                     "kind": "InlineFragment",
                     "type": "Show",
                     "selections": [
+                      (v8/*: any*/),
+                      (v5/*: any*/),
                       (v4/*: any*/),
-                      (v7/*: any*/),
+                      (v6/*: any*/),
                       (v14/*: any*/),
                       {
-                        "kind": "LinkedField",
+                        "kind": "ScalarField",
                         "alias": null,
-                        "name": "coverImage",
-                        "storageKey": null,
+                        "name": "isFollowed",
                         "args": null,
-                        "concreteType": "Image",
-                        "plural": false,
-                        "selections": (v15/*: any*/)
-                      }
+                        "storageKey": null
+                      },
+                      (v17/*: any*/)
                     ]
                   }
                 ]
@@ -1340,7 +1273,6 @@ return {
                             "plural": false,
                             "selections": [
                               (v3/*: any*/),
-                              (v5/*: any*/),
                               {
                                 "kind": "LinkedField",
                                 "alias": null,
@@ -1381,16 +1313,10 @@ return {
                                 "args": null,
                                 "storageKey": null
                               },
-                              {
-                                "kind": "ScalarField",
-                                "alias": "is_in_auction",
-                                "name": "isInAuction",
-                                "args": null,
-                                "storageKey": null
-                              },
                               (v20/*: any*/),
                               (v21/*: any*/),
                               (v22/*: any*/),
+                              (v5/*: any*/),
                               {
                                 "kind": "LinkedField",
                                 "alias": null,
@@ -1407,20 +1333,6 @@ return {
                                     "args": null,
                                     "storageKey": null
                                   },
-                                  {
-                                    "kind": "ScalarField",
-                                    "alias": "is_live_open",
-                                    "name": "isLiveOpen",
-                                    "args": null,
-                                    "storageKey": null
-                                  },
-                                  {
-                                    "kind": "ScalarField",
-                                    "alias": "is_open",
-                                    "name": "isOpen",
-                                    "args": null,
-                                    "storageKey": null
-                                  },
                                   {
                                     "kind": "ScalarField",
                                     "alias": "is_closed",
@@ -1486,7 +1398,7 @@ return {
                                 "plural": false,
                                 "selections": (v25/*: any*/)
                               },
-                              (v7/*: any*/)
+                              (v6/*: any*/)
                             ]
                           }
                         ]
@@ -1512,7 +1424,7 @@ return {
                 ]
               },
               (v5/*: any*/),
-              (v6/*: any*/),
+              (v8/*: any*/),
               (v21/*: any*/),
               (v22/*: any*/),
               (v20/*: any*/),
@@ -1541,11 +1453,11 @@ return {
                 "selections": [
                   (v3/*: any*/),
                   (v10/*: any*/),
-                  (v6/*: any*/),
+                  (v8/*: any*/),
                   (v5/*: any*/),
                   (v4/*: any*/),
-                  (v8/*: any*/),
                   (v7/*: any*/),
+                  (v6/*: any*/),
                   (v9/*: any*/),
                   {
                     "kind": "ScalarField",
@@ -1578,33 +1490,8 @@ return {
                   }
                 ]
               },
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "shows",
-                "storageKey": "shows(size:1)",
-                "args": [
-                  {
-                    "kind": "Literal",
-                    "name": "size",
-                    "value": 1
-                  }
-                ],
-                "concreteType": "Show",
-                "plural": true,
-                "selections": [
-                  (v3/*: any*/),
-                  (v4/*: any*/),
-                  (v7/*: any*/),
-                  (v5/*: any*/),
-                  (v6/*: any*/),
-                  (v14/*: any*/),
-                  (v9/*: any*/),
-                  (v17/*: any*/)
-                ]
-              },
               (v18/*: any*/),
-              (v7/*: any*/),
+              (v6/*: any*/),
               {
                 "kind": "ScalarField",
                 "alias": "is_saved",
@@ -1688,14 +1575,9 @@ return {
                     "args": null,
                     "concreteType": "BidIncrementsFormatted",
                     "plural": true,
-                    "selections": (v26/*: any*/)
-                  },
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "isWithReserve",
-                    "args": null,
-                    "storageKey": null
+                    "selections": [
+                      (v26/*: any*/)
+                    ]
                   },
                   {
                     "kind": "ScalarField",
@@ -1704,13 +1586,6 @@ return {
                     "args": null,
                     "storageKey": null
                   },
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "reserveStatus",
-                    "args": null,
-                    "storageKey": null
-                  },
                   {
                     "kind": "LinkedField",
                     "alias": null,
@@ -1779,7 +1654,7 @@ return {
                 "selections": [
                   {
                     "kind": "ScalarField",
-                    "alias": "image_url",
+                    "alias": "url",
                     "name": "imageURL",
                     "args": null,
                     "storageKey": null
@@ -1868,47 +1743,20 @@ return {
                   }
                 ]
               },
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "editionSets",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "EditionSet",
-                "plural": true,
-                "selections": [
-                  (v28/*: any*/),
-                  (v29/*: any*/),
-                  (v30/*: any*/),
-                  (v3/*: any*/),
-                  (v6/*: any*/),
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "editionOf",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  (v27/*: any*/)
-                ]
-              },
-              (v30/*: any*/),
               {
                 "kind": "ScalarField",
                 "alias": null,
-                "name": "shippingInfo",
+                "name": "isAcquireable",
                 "args": null,
                 "storageKey": null
               },
               {
                 "kind": "ScalarField",
                 "alias": null,
-                "name": "shippingOrigin",
+                "name": "isOfferable",
                 "args": null,
                 "storageKey": null
               },
-              (v28/*: any*/),
-              (v29/*: any*/),
               {
                 "kind": "ScalarField",
                 "alias": null,
@@ -1916,12 +1764,28 @@ return {
                 "args": null,
                 "storageKey": null
               },
+              (v28/*: any*/),
               {
-                "kind": "ScalarField",
+                "kind": "LinkedField",
                 "alias": null,
-                "name": "isBiddable",
+                "name": "editionSets",
+                "storageKey": null,
                 "args": null,
-                "storageKey": null
+                "concreteType": "EditionSet",
+                "plural": true,
+                "selections": [
+                  (v3/*: any*/),
+                  (v8/*: any*/),
+                  (v28/*: any*/),
+                  {
+                    "kind": "ScalarField",
+                    "alias": null,
+                    "name": "editionOf",
+                    "args": null,
+                    "storageKey": null
+                  },
+                  (v27/*: any*/)
+                ]
               },
               {
                 "kind": "ScalarField",
@@ -1962,7 +1826,10 @@ return {
                         "args": null,
                         "concreteType": "BidderPositionMaxBid",
                         "plural": false,
-                        "selections": (v26/*: any*/)
+                        "selections": [
+                          (v26/*: any*/),
+                          (v23/*: any*/)
+                        ]
                       },
                       (v3/*: any*/)
                     ]
@@ -1995,6 +1862,20 @@ return {
                 "args": null,
                 "storageKey": null
               },
+              {
+                "kind": "ScalarField",
+                "alias": null,
+                "name": "shippingOrigin",
+                "args": null,
+                "storageKey": null
+              },
+              {
+                "kind": "ScalarField",
+                "alias": null,
+                "name": "shippingInfo",
+                "args": null,
+                "storageKey": null
+              },
               {
                 "kind": "ScalarField",
                 "alias": null,
@@ -2011,7 +1892,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ArtworkRefetchQuery",
-    "id": "ca7aeec16c160faaf30001d9644d6556",
+    "id": "0831b9db633bea149b03f2db36f513a5",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/Artwork_artwork.graphql.ts b/src/__generated__/Artwork_artwork.graphql.ts
index cd853af47..8eeee9c7a 100644
--- a/src/__generated__/Artwork_artwork.graphql.ts
+++ b/src/__generated__/Artwork_artwork.graphql.ts
@@ -23,7 +23,6 @@ export type Artwork_artwork = {
         readonly id: string;
     } | null;
     readonly artist: {
-        readonly name: string | null;
         readonly biography_blurb: {
             readonly text: string | null;
         } | null;
@@ -170,13 +169,6 @@ return {
       "concreteType": "Artist",
       "plural": false,
       "selections": [
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "name",
-          "args": null,
-          "storageKey": null
-        },
         {
           "kind": "LinkedField",
           "alias": "biography_blurb",
@@ -471,5 +463,5 @@ return {
   ]
 };
 })();
-(node as any).hash = 'db8693f7ffb05d3afbae8d941129a136';
+(node as any).hash = '749c71e2e646dce8fd256b021fb6fcf6';
 export default node;
diff --git a/src/__generated__/ArtworksPreviewTestsQuery.graphql.ts b/src/__generated__/ArtworksPreviewTestsQuery.graphql.ts
index f6f038aaf..f7fdd1d66 100644
--- a/src/__generated__/ArtworksPreviewTestsQuery.graphql.ts
+++ b/src/__generated__/ArtworksPreviewTestsQuery.graphql.ts
@@ -42,7 +42,6 @@ fragment ArtworksPreview_fair on Fair {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -53,15 +52,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -222,7 +218,6 @@ return {
                     "plural": false,
                     "selections": [
                       (v2/*: any*/),
-                      (v1/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -275,13 +270,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -303,6 +291,7 @@ return {
                         "args": null,
                         "storageKey": null
                       },
+                      (v1/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -319,20 +308,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_live_open",
-                            "name": "isLiveOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_open",
-                            "name": "isOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -427,7 +402,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ArtworksPreviewTestsQuery",
-    "id": "86fabd524076756029888cf93f009273",
+    "id": "906622d37b7d37fa846dd25088c0724d",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/ArtworksQuery.graphql.ts b/src/__generated__/ArtworksQuery.graphql.ts
index 64c028309..ff50935df 100644
--- a/src/__generated__/ArtworksQuery.graphql.ts
+++ b/src/__generated__/ArtworksQuery.graphql.ts
@@ -52,7 +52,6 @@ fragment Artworks_me_1G22uz on Me {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -63,15 +62,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -275,13 +271,6 @@ return {
                         "plural": false,
                         "selections": [
                           (v2/*: any*/),
-                          {
-                            "kind": "ScalarField",
-                            "alias": null,
-                            "name": "slug",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "LinkedField",
                             "alias": null,
@@ -334,13 +323,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_in_auction",
-                            "name": "isInAuction",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_biddable",
@@ -362,6 +344,13 @@ return {
                             "args": null,
                             "storageKey": null
                           },
+                          {
+                            "kind": "ScalarField",
+                            "alias": null,
+                            "name": "slug",
+                            "args": null,
+                            "storageKey": null
+                          },
                           {
                             "kind": "LinkedField",
                             "alias": null,
@@ -378,20 +367,6 @@ return {
                                 "args": null,
                                 "storageKey": null
                               },
-                              {
-                                "kind": "ScalarField",
-                                "alias": "is_live_open",
-                                "name": "isLiveOpen",
-                                "args": null,
-                                "storageKey": null
-                              },
-                              {
-                                "kind": "ScalarField",
-                                "alias": "is_open",
-                                "name": "isOpen",
-                                "args": null,
-                                "storageKey": null
-                              },
                               {
                                 "kind": "ScalarField",
                                 "alias": "is_closed",
@@ -513,7 +488,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ArtworksQuery",
-    "id": "214cddfbf797555cfca5305331f75127",
+    "id": "7bccc77f16ad18b94cf64d34c1b2c537",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/AuctionCountDownTimer_artwork.graphql.ts b/src/__generated__/AuctionCountDownTimer_artwork.graphql.ts
index 4dcb59e56..e4b54db06 100644
--- a/src/__generated__/AuctionCountDownTimer_artwork.graphql.ts
+++ b/src/__generated__/AuctionCountDownTimer_artwork.graphql.ts
@@ -7,7 +7,6 @@ export type AuctionCountDownTimer_artwork = {
     readonly sale: {
         readonly startAt: string | null;
         readonly endAt: string | null;
-        readonly liveStartAt: string | null;
         readonly formattedStartDateTime: string | null;
     } | null;
     readonly " $refType": AuctionCountDownTimer_artwork$ref;
@@ -45,13 +44,6 @@ const node: ReaderFragment = {
           "args": null,
           "storageKey": null
         },
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "liveStartAt",
-          "args": null,
-          "storageKey": null
-        },
         {
           "kind": "ScalarField",
           "alias": null,
@@ -63,5 +55,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = '274549645e415575ff724ec93cd8ec48';
+(node as any).hash = '684a015d3d26b472450ed056a952464a';
 export default node;
diff --git a/src/__generated__/AuctionPriceTestsQuery.graphql.ts b/src/__generated__/AuctionPriceTestsQuery.graphql.ts
index e71c761a0..7be0b24d2 100644
--- a/src/__generated__/AuctionPriceTestsQuery.graphql.ts
+++ b/src/__generated__/AuctionPriceTestsQuery.graphql.ts
@@ -24,7 +24,6 @@ query AuctionPriceTestsQuery {
 }
 
 fragment AuctionPrice_artwork on Artwork {
-  slug
   sale {
     internalID
     isWithBuyersPremium
@@ -33,9 +32,7 @@ fragment AuctionPrice_artwork on Artwork {
     id
   }
   saleArtwork {
-    isWithReserve
     reserveMessage
-    reserveStatus
     currentBid {
       display
     }
@@ -124,13 +121,6 @@ return {
         "concreteType": "Artwork",
         "plural": false,
         "selections": [
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "slug",
-            "args": null,
-            "storageKey": null
-          },
           {
             "kind": "LinkedField",
             "alias": null,
@@ -180,13 +170,6 @@ return {
             "concreteType": "SaleArtwork",
             "plural": false,
             "selections": [
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "isWithReserve",
-                "args": null,
-                "storageKey": null
-              },
               {
                 "kind": "ScalarField",
                 "alias": null,
@@ -194,13 +177,6 @@ return {
                 "args": null,
                 "storageKey": null
               },
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "reserveStatus",
-                "args": null,
-                "storageKey": null
-              },
               {
                 "kind": "LinkedField",
                 "alias": null,
@@ -298,7 +274,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "AuctionPriceTestsQuery",
-    "id": "5fbc15e44c3fcc0459d43153dba0babf",
+    "id": "6d244de9906e4602332d1cf51d127e2b",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/AuctionPrice_artwork.graphql.ts b/src/__generated__/AuctionPrice_artwork.graphql.ts
index 6ee34eae6..45bd95617 100644
--- a/src/__generated__/AuctionPrice_artwork.graphql.ts
+++ b/src/__generated__/AuctionPrice_artwork.graphql.ts
@@ -4,7 +4,6 @@ import { ReaderFragment } from "relay-runtime";
 declare const _AuctionPrice_artwork$ref: unique symbol;
 export type AuctionPrice_artwork$ref = typeof _AuctionPrice_artwork$ref;
 export type AuctionPrice_artwork = {
-    readonly slug: string;
     readonly sale: {
         readonly internalID: string;
         readonly isWithBuyersPremium: boolean | null;
@@ -12,9 +11,7 @@ export type AuctionPrice_artwork = {
         readonly isLiveOpen: boolean | null;
     } | null;
     readonly saleArtwork: {
-        readonly isWithReserve: boolean | null;
         readonly reserveMessage: string | null;
-        readonly reserveStatus: string | null;
         readonly currentBid: {
             readonly display: string | null;
         } | null;
@@ -54,13 +51,6 @@ return {
   "metadata": null,
   "argumentDefinitions": [],
   "selections": [
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "slug",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "LinkedField",
       "alias": null,
@@ -109,13 +99,6 @@ return {
       "concreteType": "SaleArtwork",
       "plural": false,
       "selections": [
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "isWithReserve",
-          "args": null,
-          "storageKey": null
-        },
         {
           "kind": "ScalarField",
           "alias": null,
@@ -123,13 +106,6 @@ return {
           "args": null,
           "storageKey": null
         },
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "reserveStatus",
-          "args": null,
-          "storageKey": null
-        },
         {
           "kind": "LinkedField",
           "alias": null,
@@ -219,5 +195,5 @@ return {
   ]
 };
 })();
-(node as any).hash = 'a26e6102c41d924b3013ed987b48dd56';
+(node as any).hash = '6595333be88a259da957344f624b6db2';
 export default node;
diff --git a/src/__generated__/BidButtonTestsQuery.graphql.ts b/src/__generated__/BidButtonTestsQuery.graphql.ts
index f36bef356..b7cb1a48b 100644
--- a/src/__generated__/BidButtonTestsQuery.graphql.ts
+++ b/src/__generated__/BidButtonTestsQuery.graphql.ts
@@ -27,13 +27,11 @@ fragment BidButton_artwork on Artwork {
   slug
   sale {
     slug
-    internalID
     registrationStatus {
       qualifiedForBidding
       id
     }
     isPreview
-    isOpen
     isLiveOpen
     isClosed
     isRegistrationClosed
@@ -50,7 +48,6 @@ fragment BidButton_artwork on Artwork {
   saleArtwork {
     increments {
       cents
-      display
     }
     id
   }
@@ -79,13 +76,15 @@ v2 = {
   "args": null,
   "storageKey": null
 },
-v3 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "cents",
-  "args": null,
-  "storageKey": null
-};
+v3 = [
+  {
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "cents",
+    "args": null,
+    "storageKey": null
+  }
+];
 return {
   "kind": "Request",
   "fragment": {
@@ -138,13 +137,6 @@ return {
             "plural": false,
             "selections": [
               (v1/*: any*/),
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "internalID",
-                "args": null,
-                "storageKey": null
-              },
               {
                 "kind": "LinkedField",
                 "alias": null,
@@ -171,13 +163,6 @@ return {
                 "args": null,
                 "storageKey": null
               },
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "isOpen",
-                "args": null,
-                "storageKey": null
-              },
               {
                 "kind": "ScalarField",
                 "alias": null,
@@ -234,9 +219,7 @@ return {
                     "args": null,
                     "concreteType": "BidderPositionMaxBid",
                     "plural": false,
-                    "selections": [
-                      (v3/*: any*/)
-                    ]
+                    "selections": (v3/*: any*/)
                   },
                   (v2/*: any*/)
                 ]
@@ -260,16 +243,7 @@ return {
                 "args": null,
                 "concreteType": "BidIncrementsFormatted",
                 "plural": true,
-                "selections": [
-                  (v3/*: any*/),
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "display",
-                    "args": null,
-                    "storageKey": null
-                  }
-                ]
+                "selections": (v3/*: any*/)
               },
               (v2/*: any*/)
             ]
@@ -282,7 +256,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "BidButtonTestsQuery",
-    "id": "fe4c89fbdebe0b713ce33a76f9e1774a",
+    "id": "e7747d2e2e0f06cb72388e3869d50387",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/BidButton_artwork.graphql.ts b/src/__generated__/BidButton_artwork.graphql.ts
index 3e48f263d..cb75f5bd7 100644
--- a/src/__generated__/BidButton_artwork.graphql.ts
+++ b/src/__generated__/BidButton_artwork.graphql.ts
@@ -7,12 +7,10 @@ export type BidButton_artwork = {
     readonly slug: string;
     readonly sale: {
         readonly slug: string;
-        readonly internalID: string;
         readonly registrationStatus: {
             readonly qualifiedForBidding: boolean | null;
         } | null;
         readonly isPreview: boolean | null;
-        readonly isOpen: boolean | null;
         readonly isLiveOpen: boolean | null;
         readonly isClosed: boolean | null;
         readonly isRegistrationClosed: boolean | null;
@@ -27,7 +25,6 @@ export type BidButton_artwork = {
     readonly saleArtwork: {
         readonly increments: ReadonlyArray<{
             readonly cents: number | null;
-            readonly display: string | null;
         } | null> | null;
     } | null;
     readonly " $refType": BidButton_artwork$ref;
@@ -43,13 +40,15 @@ var v0 = {
   "args": null,
   "storageKey": null
 },
-v1 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "cents",
-  "args": null,
-  "storageKey": null
-};
+v1 = [
+  {
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "cents",
+    "args": null,
+    "storageKey": null
+  }
+];
 return {
   "kind": "Fragment",
   "name": "BidButton_artwork",
@@ -68,13 +67,6 @@ return {
       "plural": false,
       "selections": [
         (v0/*: any*/),
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "internalID",
-          "args": null,
-          "storageKey": null
-        },
         {
           "kind": "LinkedField",
           "alias": null,
@@ -100,13 +92,6 @@ return {
           "args": null,
           "storageKey": null
         },
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "isOpen",
-          "args": null,
-          "storageKey": null
-        },
         {
           "kind": "ScalarField",
           "alias": null,
@@ -162,9 +147,7 @@ return {
               "args": null,
               "concreteType": "BidderPositionMaxBid",
               "plural": false,
-              "selections": [
-                (v1/*: any*/)
-              ]
+              "selections": (v1/*: any*/)
             }
           ]
         }
@@ -187,21 +170,12 @@ return {
           "args": null,
           "concreteType": "BidIncrementsFormatted",
           "plural": true,
-          "selections": [
-            (v1/*: any*/),
-            {
-              "kind": "ScalarField",
-              "alias": null,
-              "name": "display",
-              "args": null,
-              "storageKey": null
-            }
-          ]
+          "selections": (v1/*: any*/)
         }
       ]
     }
   ]
 };
 })();
-(node as any).hash = '1c08add1bf088f42a66a138df9979dd0';
+(node as any).hash = 'ec09ef9d1708154bd5abdb12518bcf64';
 export default node;
diff --git a/src/__generated__/BidFlowSelectMaxBidRendererQuery.graphql.ts b/src/__generated__/BidFlowSelectMaxBidRendererQuery.graphql.ts
index be0cfbdff..2c263708c 100644
--- a/src/__generated__/BidFlowSelectMaxBidRendererQuery.graphql.ts
+++ b/src/__generated__/BidFlowSelectMaxBidRendererQuery.graphql.ts
@@ -32,7 +32,6 @@ fragment SelectMaxBid_sale_artwork on SaleArtwork {
   id
   increments(useMyMaxBid: true) {
     display
-    cents
   }
   ...ConfirmBid_sale_artwork
 }
@@ -60,14 +59,9 @@ fragment ConfirmBid_sale_artwork on SaleArtwork {
 }
 
 fragment BidResult_sale_artwork on SaleArtwork {
-  minimum_next_bid: minimumNextBid {
-    amount
-    cents
-    display
-  }
   sale {
-    live_start_at: liveStartAt
-    end_at: endAt
+    liveStartAt
+    endAt
     slug
     id
   }
@@ -98,20 +92,6 @@ v2 = {
   "storageKey": null
 },
 v3 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "display",
-  "args": null,
-  "storageKey": null
-},
-v4 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "cents",
-  "args": null,
-  "storageKey": null
-},
-v5 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "slug",
@@ -186,8 +166,13 @@ return {
                 "concreteType": "BidIncrementsFormatted",
                 "plural": true,
                 "selections": [
-                  (v3/*: any*/),
-                  (v4/*: any*/)
+                  {
+                    "kind": "ScalarField",
+                    "alias": null,
+                    "name": "display",
+                    "args": null,
+                    "storageKey": null
+                  }
                 ]
               },
               {
@@ -206,7 +191,7 @@ return {
                 "concreteType": "Sale",
                 "plural": false,
                 "selections": [
-                  (v5/*: any*/),
+                  (v3/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": "live_start_at",
@@ -221,7 +206,21 @@ return {
                     "args": null,
                     "storageKey": null
                   },
-                  (v2/*: any*/)
+                  (v2/*: any*/),
+                  {
+                    "kind": "ScalarField",
+                    "alias": null,
+                    "name": "liveStartAt",
+                    "args": null,
+                    "storageKey": null
+                  },
+                  {
+                    "kind": "ScalarField",
+                    "alias": null,
+                    "name": "endAt",
+                    "args": null,
+                    "storageKey": null
+                  }
                 ]
               },
               {
@@ -233,7 +232,7 @@ return {
                 "concreteType": "Artwork",
                 "plural": false,
                 "selections": [
-                  (v5/*: any*/),
+                  (v3/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": null,
@@ -288,26 +287,6 @@ return {
                 "name": "lotLabel",
                 "args": null,
                 "storageKey": null
-              },
-              {
-                "kind": "LinkedField",
-                "alias": "minimum_next_bid",
-                "name": "minimumNextBid",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "SaleArtworkMinimumNextBid",
-                "plural": false,
-                "selections": [
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "amount",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  (v4/*: any*/),
-                  (v3/*: any*/)
-                ]
               }
             ]
           }
@@ -318,7 +297,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "BidFlowSelectMaxBidRendererQuery",
-    "id": "3d92c2c1bba407045c0efcfd8b7755cf",
+    "id": "f8fb2d7ad9bb72b52884f1e2e45fe513",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/BidResult_sale_artwork.graphql.ts b/src/__generated__/BidResult_sale_artwork.graphql.ts
index 1ac242f9d..2577caeff 100644
--- a/src/__generated__/BidResult_sale_artwork.graphql.ts
+++ b/src/__generated__/BidResult_sale_artwork.graphql.ts
@@ -4,14 +4,9 @@ import { ReaderFragment } from "relay-runtime";
 declare const _BidResult_sale_artwork$ref: unique symbol;
 export type BidResult_sale_artwork$ref = typeof _BidResult_sale_artwork$ref;
 export type BidResult_sale_artwork = {
-    readonly minimum_next_bid: {
-        readonly amount: string | null;
-        readonly cents: number | null;
-        readonly display: string | null;
-    } | null;
     readonly sale: {
-        readonly live_start_at: string | null;
-        readonly end_at: string | null;
+        readonly liveStartAt: string | null;
+        readonly endAt: string | null;
         readonly slug: string;
     } | null;
     readonly " $refType": BidResult_sale_artwork$ref;
@@ -26,38 +21,6 @@ const node: ReaderFragment = {
   "metadata": null,
   "argumentDefinitions": [],
   "selections": [
-    {
-      "kind": "LinkedField",
-      "alias": "minimum_next_bid",
-      "name": "minimumNextBid",
-      "storageKey": null,
-      "args": null,
-      "concreteType": "SaleArtworkMinimumNextBid",
-      "plural": false,
-      "selections": [
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "amount",
-          "args": null,
-          "storageKey": null
-        },
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "cents",
-          "args": null,
-          "storageKey": null
-        },
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "display",
-          "args": null,
-          "storageKey": null
-        }
-      ]
-    },
     {
       "kind": "LinkedField",
       "alias": null,
@@ -69,14 +32,14 @@ const node: ReaderFragment = {
       "selections": [
         {
           "kind": "ScalarField",
-          "alias": "live_start_at",
+          "alias": null,
           "name": "liveStartAt",
           "args": null,
           "storageKey": null
         },
         {
           "kind": "ScalarField",
-          "alias": "end_at",
+          "alias": null,
           "name": "endAt",
           "args": null,
           "storageKey": null
@@ -92,5 +55,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = 'ee847f087f9e4c73c05790583a54b77a';
+(node as any).hash = '44a66e7bfb7bc37bde83d3bfdce023ca';
 export default node;
diff --git a/src/__generated__/CategoriesMeQuery.graphql.ts b/src/__generated__/CategoriesMeQuery.graphql.ts
index afce3436c..6b54d5744 100644
--- a/src/__generated__/CategoriesMeQuery.graphql.ts
+++ b/src/__generated__/CategoriesMeQuery.graphql.ts
@@ -39,7 +39,6 @@ fragment Categories_me_1G22uz on Me {
       edges {
         node {
           gene {
-            slug
             id
             name
             href
@@ -213,13 +212,6 @@ return {
                             "concreteType": "Gene",
                             "plural": false,
                             "selections": [
-                              {
-                                "kind": "ScalarField",
-                                "alias": null,
-                                "name": "slug",
-                                "args": null,
-                                "storageKey": null
-                              },
                               (v2/*: any*/),
                               {
                                 "kind": "ScalarField",
@@ -295,7 +287,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "CategoriesMeQuery",
-    "id": "33cdc78670ae63eb8ad546f7a1432172",
+    "id": "0ee862fb0d588dc294b1620573b3677f",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/Categories_me.graphql.ts b/src/__generated__/Categories_me.graphql.ts
index eff815a61..e0617d304 100644
--- a/src/__generated__/Categories_me.graphql.ts
+++ b/src/__generated__/Categories_me.graphql.ts
@@ -13,7 +13,6 @@ export type Categories_me = {
             readonly edges: ReadonlyArray<{
                 readonly node: {
                     readonly gene: {
-                        readonly slug: string;
                         readonly id: string;
                         readonly name: string | null;
                         readonly href: string | null;
@@ -132,13 +131,6 @@ const node: ReaderFragment = {
                       "concreteType": "Gene",
                       "plural": false,
                       "selections": [
-                        {
-                          "kind": "ScalarField",
-                          "alias": null,
-                          "name": "slug",
-                          "args": null,
-                          "storageKey": null
-                        },
                         {
                           "kind": "ScalarField",
                           "alias": null,
@@ -204,5 +196,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = '66628e16561a5d98d8436304c89838ce';
+(node as any).hash = '6583628cb5e43c46ef8136f0ffbc38c7';
 export default node;
diff --git a/src/__generated__/CollectionHeader_collection.graphql.ts b/src/__generated__/CollectionHeader_collection.graphql.ts
index 98e41e6c1..bdeffcdf1 100644
--- a/src/__generated__/CollectionHeader_collection.graphql.ts
+++ b/src/__generated__/CollectionHeader_collection.graphql.ts
@@ -4,12 +4,8 @@ import { ReaderFragment } from "relay-runtime";
 declare const _CollectionHeader_collection$ref: unique symbol;
 export type CollectionHeader_collection$ref = typeof _CollectionHeader_collection$ref;
 export type CollectionHeader_collection = {
-    readonly slug: string;
     readonly title: string;
     readonly description: string | null;
-    readonly headerImage: string | null;
-    readonly category: string;
-    readonly credit: string | null;
     readonly " $refType": CollectionHeader_collection$ref;
 };
 
@@ -22,13 +18,6 @@ const node: ReaderFragment = {
   "metadata": null,
   "argumentDefinitions": [],
   "selections": [
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "slug",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "ScalarField",
       "alias": null,
@@ -42,29 +31,8 @@ const node: ReaderFragment = {
       "name": "description",
       "args": null,
       "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "headerImage",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "category",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "credit",
-      "args": null,
-      "storageKey": null
     }
   ]
 };
-(node as any).hash = '9b4f64d7222b3912ff2f6c9d1b569a4d';
+(node as any).hash = '6b59485ca672dd49d5364f76eb414413';
 export default node;
diff --git a/src/__generated__/Collection_collection.graphql.ts b/src/__generated__/Collection_collection.graphql.ts
index aee9d8849..715f1afa0 100644
--- a/src/__generated__/Collection_collection.graphql.ts
+++ b/src/__generated__/Collection_collection.graphql.ts
@@ -5,12 +5,6 @@ import { CollectionHeader_collection$ref } from "./CollectionHeader_collection.g
 declare const _Collection_collection$ref: unique symbol;
 export type Collection_collection$ref = typeof _Collection_collection$ref;
 export type Collection_collection = {
-    readonly slug: string;
-    readonly title: string;
-    readonly description: string | null;
-    readonly headerImage: string | null;
-    readonly category: string;
-    readonly credit: string | null;
     readonly " $fragmentRefs": CollectionHeader_collection$ref;
     readonly " $refType": Collection_collection$ref;
 };
@@ -24,48 +18,6 @@ const node: ReaderFragment = {
   "metadata": null,
   "argumentDefinitions": [],
   "selections": [
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "slug",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "title",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "description",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "headerImage",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "category",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "credit",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "FragmentSpread",
       "name": "CollectionHeader_collection",
@@ -73,5 +25,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = '272bdcb6bf0e1ce2656b47a173b123cb';
+(node as any).hash = 'ce918671e232657859d23f6badbebe8b';
 export default node;
diff --git a/src/__generated__/CommercialButtonsTestsMutationQuery.graphql.ts b/src/__generated__/CommercialButtonsTestsMutationQuery.graphql.ts
index ef9bd01bd..d8ebc2097 100644
--- a/src/__generated__/CommercialButtonsTestsMutationQuery.graphql.ts
+++ b/src/__generated__/CommercialButtonsTestsMutationQuery.graphql.ts
@@ -25,11 +25,9 @@ query CommercialButtonsTestsMutationQuery {
 
 fragment CommercialButtons_artwork on Artwork {
   slug
-  internalID
   isAcquireable
   isOfferable
   isInquireable
-  isBiddable
   isInAuction
   isBuyNowable
   editionSets {
@@ -53,13 +51,11 @@ fragment BidButton_artwork on Artwork {
   slug
   sale {
     slug
-    internalID
     registrationStatus {
       qualifiedForBidding
       id
     }
     isPreview
-    isOpen
     isLiveOpen
     isClosed
     isRegistrationClosed
@@ -76,7 +72,6 @@ fragment BidButton_artwork on Artwork {
   saleArtwork {
     increments {
       cents
-      display
     }
     id
   }
@@ -103,26 +98,21 @@ v1 = {
   "storageKey": null
 },
 v2 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "internalID",
-  "args": null,
-  "storageKey": null
-},
-v3 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "id",
   "args": null,
   "storageKey": null
 },
-v4 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "cents",
-  "args": null,
-  "storageKey": null
-};
+v3 = [
+  {
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "cents",
+    "args": null,
+    "storageKey": null
+  }
+];
 return {
   "kind": "Request",
   "fragment": {
@@ -165,7 +155,6 @@ return {
         "plural": false,
         "selections": [
           (v1/*: any*/),
-          (v2/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -187,13 +176,6 @@ return {
             "args": null,
             "storageKey": null
           },
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "isBiddable",
-            "args": null,
-            "storageKey": null
-          },
           {
             "kind": "ScalarField",
             "alias": null,
@@ -217,7 +199,7 @@ return {
             "concreteType": "EditionSet",
             "plural": true,
             "selections": [
-              (v3/*: any*/)
+              (v2/*: any*/)
             ]
           },
           {
@@ -236,9 +218,8 @@ return {
                 "args": null,
                 "storageKey": null
               },
-              (v3/*: any*/),
-              (v1/*: any*/),
               (v2/*: any*/),
+              (v1/*: any*/),
               {
                 "kind": "LinkedField",
                 "alias": null,
@@ -255,7 +236,7 @@ return {
                     "args": null,
                     "storageKey": null
                   },
-                  (v3/*: any*/)
+                  (v2/*: any*/)
                 ]
               },
               {
@@ -265,13 +246,6 @@ return {
                 "args": null,
                 "storageKey": null
               },
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "isOpen",
-                "args": null,
-                "storageKey": null
-              },
               {
                 "kind": "ScalarField",
                 "alias": null,
@@ -288,6 +262,13 @@ return {
               }
             ]
           },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "internalID",
+            "args": null,
+            "storageKey": null
+          },
           {
             "kind": "ScalarField",
             "alias": null,
@@ -327,11 +308,9 @@ return {
                     "args": null,
                     "concreteType": "BidderPositionMaxBid",
                     "plural": false,
-                    "selections": [
-                      (v4/*: any*/)
-                    ]
+                    "selections": (v3/*: any*/)
                   },
-                  (v3/*: any*/)
+                  (v2/*: any*/)
                 ]
               }
             ]
@@ -353,21 +332,12 @@ return {
                 "args": null,
                 "concreteType": "BidIncrementsFormatted",
                 "plural": true,
-                "selections": [
-                  (v4/*: any*/),
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "display",
-                    "args": null,
-                    "storageKey": null
-                  }
-                ]
+                "selections": (v3/*: any*/)
               },
-              (v3/*: any*/)
+              (v2/*: any*/)
             ]
           },
-          (v3/*: any*/)
+          (v2/*: any*/)
         ]
       }
     ]
@@ -375,7 +345,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "CommercialButtonsTestsMutationQuery",
-    "id": "2169f64fa04bc267a271a15d9bf97acc",
+    "id": "96ca3563fe2a823087059822fd995912",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/CommercialButtonsTestsRenderQuery.graphql.ts b/src/__generated__/CommercialButtonsTestsRenderQuery.graphql.ts
index 3a938c42f..f8e9b956d 100644
--- a/src/__generated__/CommercialButtonsTestsRenderQuery.graphql.ts
+++ b/src/__generated__/CommercialButtonsTestsRenderQuery.graphql.ts
@@ -25,11 +25,9 @@ query CommercialButtonsTestsRenderQuery {
 
 fragment CommercialButtons_artwork on Artwork {
   slug
-  internalID
   isAcquireable
   isOfferable
   isInquireable
-  isBiddable
   isInAuction
   isBuyNowable
   editionSets {
@@ -53,13 +51,11 @@ fragment BidButton_artwork on Artwork {
   slug
   sale {
     slug
-    internalID
     registrationStatus {
       qualifiedForBidding
       id
     }
     isPreview
-    isOpen
     isLiveOpen
     isClosed
     isRegistrationClosed
@@ -76,7 +72,6 @@ fragment BidButton_artwork on Artwork {
   saleArtwork {
     increments {
       cents
-      display
     }
     id
   }
@@ -103,26 +98,21 @@ v1 = {
   "storageKey": null
 },
 v2 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "internalID",
-  "args": null,
-  "storageKey": null
-},
-v3 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "id",
   "args": null,
   "storageKey": null
 },
-v4 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "cents",
-  "args": null,
-  "storageKey": null
-};
+v3 = [
+  {
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "cents",
+    "args": null,
+    "storageKey": null
+  }
+];
 return {
   "kind": "Request",
   "fragment": {
@@ -165,7 +155,6 @@ return {
         "plural": false,
         "selections": [
           (v1/*: any*/),
-          (v2/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -187,13 +176,6 @@ return {
             "args": null,
             "storageKey": null
           },
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "isBiddable",
-            "args": null,
-            "storageKey": null
-          },
           {
             "kind": "ScalarField",
             "alias": null,
@@ -217,7 +199,7 @@ return {
             "concreteType": "EditionSet",
             "plural": true,
             "selections": [
-              (v3/*: any*/)
+              (v2/*: any*/)
             ]
           },
           {
@@ -236,9 +218,8 @@ return {
                 "args": null,
                 "storageKey": null
               },
-              (v3/*: any*/),
-              (v1/*: any*/),
               (v2/*: any*/),
+              (v1/*: any*/),
               {
                 "kind": "LinkedField",
                 "alias": null,
@@ -255,7 +236,7 @@ return {
                     "args": null,
                     "storageKey": null
                   },
-                  (v3/*: any*/)
+                  (v2/*: any*/)
                 ]
               },
               {
@@ -265,13 +246,6 @@ return {
                 "args": null,
                 "storageKey": null
               },
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "isOpen",
-                "args": null,
-                "storageKey": null
-              },
               {
                 "kind": "ScalarField",
                 "alias": null,
@@ -288,6 +262,13 @@ return {
               }
             ]
           },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "internalID",
+            "args": null,
+            "storageKey": null
+          },
           {
             "kind": "ScalarField",
             "alias": null,
@@ -327,11 +308,9 @@ return {
                     "args": null,
                     "concreteType": "BidderPositionMaxBid",
                     "plural": false,
-                    "selections": [
-                      (v4/*: any*/)
-                    ]
+                    "selections": (v3/*: any*/)
                   },
-                  (v3/*: any*/)
+                  (v2/*: any*/)
                 ]
               }
             ]
@@ -353,21 +332,12 @@ return {
                 "args": null,
                 "concreteType": "BidIncrementsFormatted",
                 "plural": true,
-                "selections": [
-                  (v4/*: any*/),
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "display",
-                    "args": null,
-                    "storageKey": null
-                  }
-                ]
+                "selections": (v3/*: any*/)
               },
-              (v3/*: any*/)
+              (v2/*: any*/)
             ]
           },
-          (v3/*: any*/)
+          (v2/*: any*/)
         ]
       }
     ]
@@ -375,7 +345,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "CommercialButtonsTestsRenderQuery",
-    "id": "da2e859381cb65cd9d5eaa42d0effffa",
+    "id": "b4ff9a3ccff3e595f0c3a9924eea69c2",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/CommercialButtons_artwork.graphql.ts b/src/__generated__/CommercialButtons_artwork.graphql.ts
index 01236c04e..57e82aacd 100644
--- a/src/__generated__/CommercialButtons_artwork.graphql.ts
+++ b/src/__generated__/CommercialButtons_artwork.graphql.ts
@@ -8,11 +8,9 @@ declare const _CommercialButtons_artwork$ref: unique symbol;
 export type CommercialButtons_artwork$ref = typeof _CommercialButtons_artwork$ref;
 export type CommercialButtons_artwork = {
     readonly slug: string;
-    readonly internalID: string;
     readonly isAcquireable: boolean | null;
     readonly isOfferable: boolean | null;
     readonly isInquireable: boolean | null;
-    readonly isBiddable: boolean | null;
     readonly isInAuction: boolean | null;
     readonly isBuyNowable: boolean | null;
     readonly editionSets: ReadonlyArray<{
@@ -41,13 +39,6 @@ const node: ReaderFragment = {
       "args": null,
       "storageKey": null
     },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "internalID",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "ScalarField",
       "alias": null,
@@ -69,13 +60,6 @@ const node: ReaderFragment = {
       "args": null,
       "storageKey": null
     },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "isBiddable",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "ScalarField",
       "alias": null,
@@ -143,5 +127,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = '446a2a05fe9eeb88b52db0dec7389234';
+(node as any).hash = 'e65fb79099cb3b3e016dedcb0a763cf1';
 export default node;
diff --git a/src/__generated__/CommercialEditionSetInformation_artwork.graphql.ts b/src/__generated__/CommercialEditionSetInformation_artwork.graphql.ts
index 17ef24eea..a44386d16 100644
--- a/src/__generated__/CommercialEditionSetInformation_artwork.graphql.ts
+++ b/src/__generated__/CommercialEditionSetInformation_artwork.graphql.ts
@@ -8,8 +8,6 @@ export type CommercialEditionSetInformation_artwork = {
     readonly editionSets: ReadonlyArray<{
         readonly id: string;
         readonly internalID: string;
-        readonly isAcquireable: boolean | null;
-        readonly isOfferable: boolean | null;
         readonly saleMessage: string | null;
         readonly editionOf: string | null;
         readonly dimensions: {
@@ -53,20 +51,6 @@ const node: ReaderFragment = {
           "args": null,
           "storageKey": null
         },
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "isAcquireable",
-          "args": null,
-          "storageKey": null
-        },
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "isOfferable",
-          "args": null,
-          "storageKey": null
-        },
         {
           "kind": "ScalarField",
           "alias": null,
@@ -115,5 +99,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = '49298d8a0f9d10a0e0ef8682fd28ad37';
+(node as any).hash = 'e8a7c66739dcb5af490a7dddbdc52d07';
 export default node;
diff --git a/src/__generated__/CommercialInformation_artwork.graphql.ts b/src/__generated__/CommercialInformation_artwork.graphql.ts
index 6bfc16ad8..81e9e100b 100644
--- a/src/__generated__/CommercialInformation_artwork.graphql.ts
+++ b/src/__generated__/CommercialInformation_artwork.graphql.ts
@@ -10,60 +10,62 @@ import { CommercialPartnerInformation_artwork$ref } from "./CommercialPartnerInf
 declare const _CommercialInformation_artwork$ref: unique symbol;
 export type CommercialInformation_artwork$ref = typeof _CommercialInformation_artwork$ref;
 export type CommercialInformation_artwork = {
+    readonly isAcquireable: boolean | null;
+    readonly isOfferable: boolean | null;
+    readonly isInquireable: boolean | null;
+    readonly isInAuction: boolean | null;
     readonly availability: string | null;
+    readonly saleMessage: string | null;
     readonly artists: ReadonlyArray<{
         readonly isConsignable: boolean | null;
     } | null> | null;
     readonly editionSets: ReadonlyArray<{
-        readonly isAcquireable: boolean | null;
-        readonly isOfferable: boolean | null;
-        readonly saleMessage: string | null;
+        readonly id: string;
     } | null> | null;
     readonly sale: {
         readonly isClosed: boolean | null;
     } | null;
-    readonly saleMessage: string | null;
-    readonly shippingInfo: string | null;
-    readonly shippingOrigin: string | null;
-    readonly isAcquireable: boolean | null;
-    readonly isOfferable: boolean | null;
-    readonly isInquireable: boolean | null;
-    readonly isInAuction: boolean | null;
     readonly " $fragmentRefs": CommercialButtons_artwork$ref & CommercialPartnerInformation_artwork$ref & CommercialEditionSetInformation_artwork$ref & AuctionCountDownTimer_artwork$ref & ArtworkExtraLinks_artwork$ref & AuctionPrice_artwork$ref;
     readonly " $refType": CommercialInformation_artwork$ref;
 };
 
 
 
-const node: ReaderFragment = (function(){
-var v0 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "isAcquireable",
-  "args": null,
-  "storageKey": null
-},
-v1 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "isOfferable",
-  "args": null,
-  "storageKey": null
-},
-v2 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "saleMessage",
-  "args": null,
-  "storageKey": null
-};
-return {
+const node: ReaderFragment = {
   "kind": "Fragment",
   "name": "CommercialInformation_artwork",
   "type": "Artwork",
   "metadata": null,
   "argumentDefinitions": [],
   "selections": [
+    {
+      "kind": "ScalarField",
+      "alias": null,
+      "name": "isAcquireable",
+      "args": null,
+      "storageKey": null
+    },
+    {
+      "kind": "ScalarField",
+      "alias": null,
+      "name": "isOfferable",
+      "args": null,
+      "storageKey": null
+    },
+    {
+      "kind": "ScalarField",
+      "alias": null,
+      "name": "isInquireable",
+      "args": null,
+      "storageKey": null
+    },
+    {
+      "kind": "ScalarField",
+      "alias": null,
+      "name": "isInAuction",
+      "args": null,
+      "storageKey": null
+    },
     {
       "kind": "ScalarField",
       "alias": null,
@@ -71,6 +73,13 @@ return {
       "args": null,
       "storageKey": null
     },
+    {
+      "kind": "ScalarField",
+      "alias": null,
+      "name": "saleMessage",
+      "args": null,
+      "storageKey": null
+    },
     {
       "kind": "LinkedField",
       "alias": null,
@@ -98,9 +107,13 @@ return {
       "concreteType": "EditionSet",
       "plural": true,
       "selections": [
-        (v0/*: any*/),
-        (v1/*: any*/),
-        (v2/*: any*/)
+        {
+          "kind": "ScalarField",
+          "alias": null,
+          "name": "id",
+          "args": null,
+          "storageKey": null
+        }
       ]
     },
     {
@@ -121,37 +134,6 @@ return {
         }
       ]
     },
-    (v2/*: any*/),
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "shippingInfo",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "shippingOrigin",
-      "args": null,
-      "storageKey": null
-    },
-    (v0/*: any*/),
-    (v1/*: any*/),
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "isInquireable",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "isInAuction",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "FragmentSpread",
       "name": "CommercialButtons_artwork",
@@ -184,6 +166,5 @@ return {
     }
   ]
 };
-})();
-(node as any).hash = '80b6e7da486b3229e5ce1066f2a644ea';
+(node as any).hash = '4bd54198a6f6f917d462d02953797897';
 export default node;
diff --git a/src/__generated__/ConfirmBidRefetchQuery.graphql.ts b/src/__generated__/ConfirmBidRefetchQuery.graphql.ts
index efe1bbdff..c5d0848bf 100644
--- a/src/__generated__/ConfirmBidRefetchQuery.graphql.ts
+++ b/src/__generated__/ConfirmBidRefetchQuery.graphql.ts
@@ -8,7 +8,7 @@ export type ConfirmBidRefetchQueryResponse = {
     readonly me: {
         readonly has_qualified_credit_cards: boolean | null;
         readonly bidders: ReadonlyArray<{
-            readonly qualified_for_bidding: boolean | null;
+            readonly id: string;
         } | null> | null;
     } | null;
 };
@@ -26,7 +26,6 @@ query ConfirmBidRefetchQuery(
   me {
     has_qualified_credit_cards: hasQualifiedCreditCards
     bidders(saleID: $saleID) {
-      qualified_for_bidding: qualifiedForBidding
       id
     }
     id
@@ -50,26 +49,30 @@ v1 = {
   "args": null,
   "storageKey": null
 },
-v2 = [
-  {
-    "kind": "Variable",
-    "name": "saleID",
-    "variableName": "saleID"
-  }
-],
-v3 = {
-  "kind": "ScalarField",
-  "alias": "qualified_for_bidding",
-  "name": "qualifiedForBidding",
-  "args": null,
-  "storageKey": null
-},
-v4 = {
+v2 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "id",
   "args": null,
   "storageKey": null
+},
+v3 = {
+  "kind": "LinkedField",
+  "alias": null,
+  "name": "bidders",
+  "storageKey": null,
+  "args": [
+    {
+      "kind": "Variable",
+      "name": "saleID",
+      "variableName": "saleID"
+    }
+  ],
+  "concreteType": "Bidder",
+  "plural": true,
+  "selections": [
+    (v2/*: any*/)
+  ]
 };
 return {
   "kind": "Request",
@@ -90,18 +93,7 @@ return {
         "plural": false,
         "selections": [
           (v1/*: any*/),
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "bidders",
-            "storageKey": null,
-            "args": (v2/*: any*/),
-            "concreteType": "Bidder",
-            "plural": true,
-            "selections": [
-              (v3/*: any*/)
-            ]
-          }
+          (v3/*: any*/)
         ]
       }
     ]
@@ -121,20 +113,8 @@ return {
         "plural": false,
         "selections": [
           (v1/*: any*/),
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "bidders",
-            "storageKey": null,
-            "args": (v2/*: any*/),
-            "concreteType": "Bidder",
-            "plural": true,
-            "selections": [
-              (v3/*: any*/),
-              (v4/*: any*/)
-            ]
-          },
-          (v4/*: any*/)
+          (v3/*: any*/),
+          (v2/*: any*/)
         ]
       }
     ]
@@ -142,11 +122,11 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ConfirmBidRefetchQuery",
-    "id": "5a4cf26f4fd23009e67008c634e06a57",
+    "id": "ad1642dc31d8cc664803d629a050b4e9",
     "text": null,
     "metadata": {}
   }
 };
 })();
-(node as any).hash = 'd51babc8a4e214e0ab945cdf1587144f';
+(node as any).hash = 'a6ee6ff7504cdc72ac306e391d258c9c';
 export default node;
diff --git a/src/__generated__/ConfirmBid_me.graphql.ts b/src/__generated__/ConfirmBid_me.graphql.ts
index e8af96af8..59a3c67f9 100644
--- a/src/__generated__/ConfirmBid_me.graphql.ts
+++ b/src/__generated__/ConfirmBid_me.graphql.ts
@@ -6,7 +6,7 @@ export type ConfirmBid_me$ref = typeof _ConfirmBid_me$ref;
 export type ConfirmBid_me = {
     readonly has_qualified_credit_cards: boolean | null;
     readonly bidders: ReadonlyArray<{
-        readonly qualified_for_bidding: boolean | null;
+        readonly id: string;
     } | null> | null;
     readonly " $refType": ConfirmBid_me$ref;
 };
@@ -50,8 +50,8 @@ const node: ReaderFragment = {
       "selections": [
         {
           "kind": "ScalarField",
-          "alias": "qualified_for_bidding",
-          "name": "qualifiedForBidding",
+          "alias": null,
+          "name": "id",
           "args": null,
           "storageKey": null
         }
@@ -59,5 +59,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = '0286e30226bf7c9a94564705a699336f';
+(node as any).hash = '316558546349c6c6cd56a990b045c1e4';
 export default node;
diff --git a/src/__generated__/ContextCardFollowMutation.graphql.ts b/src/__generated__/ContextCardFollowMutation.graphql.ts
index 74633a32d..4b7475e38 100644
--- a/src/__generated__/ContextCardFollowMutation.graphql.ts
+++ b/src/__generated__/ContextCardFollowMutation.graphql.ts
@@ -14,7 +14,7 @@ export type ContextCardFollowMutationResponse = {
         readonly show: {
             readonly slug: string;
             readonly internalID: string;
-            readonly is_followed: boolean | null;
+            readonly isFollowed: boolean | null;
             readonly id: string;
         } | null;
     } | null;
@@ -34,7 +34,7 @@ mutation ContextCardFollowMutation(
     show {
       slug
       internalID
-      is_followed: isFollowed
+      isFollowed
       id
     }
   }
@@ -91,7 +91,7 @@ v1 = [
           },
           {
             "kind": "ScalarField",
-            "alias": "is_followed",
+            "alias": null,
             "name": "isFollowed",
             "args": null,
             "storageKey": null
@@ -127,11 +127,11 @@ return {
   "params": {
     "operationKind": "mutation",
     "name": "ContextCardFollowMutation",
-    "id": "21c3b692a0a5a7285359d5d74c4cc7b7",
+    "id": "d492efc5bb01d11b8045f4bd9a8013d7",
     "text": null,
     "metadata": {}
   }
 };
 })();
-(node as any).hash = 'd66bb4d85639e8f70731c332a3674ad9';
+(node as any).hash = 'd5670cb5205e24a337e07eec0afbf553';
 export default node;
diff --git a/src/__generated__/ContextCard_artwork.graphql.ts b/src/__generated__/ContextCard_artwork.graphql.ts
index 4a3d92e1b..f50b7a228 100644
--- a/src/__generated__/ContextCard_artwork.graphql.ts
+++ b/src/__generated__/ContextCard_artwork.graphql.ts
@@ -5,8 +5,6 @@ declare const _ContextCard_artwork$ref: unique symbol;
 export type ContextCard_artwork$ref = typeof _ContextCard_artwork$ref;
 export type ContextCard_artwork = {
     readonly id: string;
-    readonly slug: string;
-    readonly internalID: string;
     readonly context: ({
         readonly __typename: string;
         readonly id?: string;
@@ -15,16 +13,16 @@ export type ContextCard_artwork = {
         readonly href?: string | null;
         readonly formattedStartDateTime?: string | null;
         readonly isAuction?: boolean | null;
-        readonly cover_image?: {
+        readonly coverImage?: {
             readonly url: string | null;
         } | null;
-        readonly exhibition_period?: string | null;
+        readonly exhibitionPeriod?: string | null;
         readonly image?: {
             readonly url: string | null;
         } | null;
-        readonly coverImage?: {
-            readonly url: string | null;
-        } | null;
+        readonly internalID?: string;
+        readonly slug?: string;
+        readonly isFollowed?: boolean | null;
     } & ({
         readonly __typename: "Sale";
         readonly id: string;
@@ -33,37 +31,25 @@ export type ContextCard_artwork = {
         readonly href: string | null;
         readonly formattedStartDateTime: string | null;
         readonly isAuction: boolean | null;
-        readonly cover_image: {
+        readonly coverImage: {
             readonly url: string | null;
         } | null;
     } | {
         readonly __typename: "Fair";
-        readonly exhibition_period: string | null;
+        readonly exhibitionPeriod: string | null;
         readonly image: {
             readonly url: string | null;
         } | null;
     } | {
         readonly __typename: "Show";
-        readonly coverImage: {
-            readonly url: string | null;
-        } | null;
+        readonly internalID: string;
+        readonly slug: string;
+        readonly isFollowed: boolean | null;
     } | {
         /*This will never be '% other', but we need some
         value in case none of the concrete values match.*/
         readonly __typename: "%other";
     })) | null;
-    readonly shows: ReadonlyArray<{
-        readonly id: string;
-        readonly name: string | null;
-        readonly href: string | null;
-        readonly slug: string;
-        readonly internalID: string;
-        readonly exhibition_period: string | null;
-        readonly is_followed: boolean | null;
-        readonly cover_image: {
-            readonly url: string | null;
-        } | null;
-    } | null> | null;
     readonly " $refType": ContextCard_artwork$ref;
 };
 
@@ -78,34 +64,20 @@ var v0 = {
   "storageKey": null
 },
 v1 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "slug",
-  "args": null,
-  "storageKey": null
-},
-v2 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "internalID",
-  "args": null,
-  "storageKey": null
-},
-v3 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "name",
   "args": null,
   "storageKey": null
 },
-v4 = {
+v2 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "href",
   "args": null,
   "storageKey": null
 },
-v5 = [
+v3 = [
   {
     "kind": "ScalarField",
     "alias": null,
@@ -114,19 +86,19 @@ v5 = [
     "storageKey": null
   }
 ],
-v6 = {
+v4 = {
   "kind": "LinkedField",
-  "alias": "cover_image",
+  "alias": null,
   "name": "coverImage",
   "storageKey": null,
   "args": null,
   "concreteType": "Image",
   "plural": false,
-  "selections": (v5/*: any*/)
+  "selections": (v3/*: any*/)
 },
-v7 = {
+v5 = {
   "kind": "ScalarField",
-  "alias": "exhibition_period",
+  "alias": null,
   "name": "exhibitionPeriod",
   "args": null,
   "storageKey": null
@@ -139,8 +111,6 @@ return {
   "argumentDefinitions": [],
   "selections": [
     (v0/*: any*/),
-    (v1/*: any*/),
-    (v2/*: any*/),
     {
       "kind": "LinkedField",
       "alias": null,
@@ -162,7 +132,7 @@ return {
           "type": "Sale",
           "selections": [
             (v0/*: any*/),
-            (v3/*: any*/),
+            (v1/*: any*/),
             {
               "kind": "ScalarField",
               "alias": null,
@@ -170,7 +140,7 @@ return {
               "args": null,
               "storageKey": null
             },
-            (v4/*: any*/),
+            (v2/*: any*/),
             {
               "kind": "ScalarField",
               "alias": null,
@@ -185,7 +155,7 @@ return {
               "args": null,
               "storageKey": null
             },
-            (v6/*: any*/)
+            (v4/*: any*/)
           ]
         },
         {
@@ -193,9 +163,9 @@ return {
           "type": "Fair",
           "selections": [
             (v0/*: any*/),
-            (v3/*: any*/),
-            (v4/*: any*/),
-            (v7/*: any*/),
+            (v1/*: any*/),
+            (v2/*: any*/),
+            (v5/*: any*/),
             {
               "kind": "LinkedField",
               "alias": null,
@@ -204,7 +174,7 @@ return {
               "args": null,
               "concreteType": "Image",
               "plural": false,
-              "selections": (v5/*: any*/)
+              "selections": (v3/*: any*/)
             }
           ]
         },
@@ -213,56 +183,37 @@ return {
           "type": "Show",
           "selections": [
             (v0/*: any*/),
-            (v3/*: any*/),
-            (v4/*: any*/),
-            (v7/*: any*/),
             {
-              "kind": "LinkedField",
+              "kind": "ScalarField",
               "alias": null,
-              "name": "coverImage",
-              "storageKey": null,
+              "name": "internalID",
               "args": null,
-              "concreteType": "Image",
-              "plural": false,
-              "selections": (v5/*: any*/)
-            }
+              "storageKey": null
+            },
+            {
+              "kind": "ScalarField",
+              "alias": null,
+              "name": "slug",
+              "args": null,
+              "storageKey": null
+            },
+            (v1/*: any*/),
+            (v2/*: any*/),
+            (v5/*: any*/),
+            {
+              "kind": "ScalarField",
+              "alias": null,
+              "name": "isFollowed",
+              "args": null,
+              "storageKey": null
+            },
+            (v4/*: any*/)
           ]
         }
       ]
-    },
-    {
-      "kind": "LinkedField",
-      "alias": null,
-      "name": "shows",
-      "storageKey": "shows(size:1)",
-      "args": [
-        {
-          "kind": "Literal",
-          "name": "size",
-          "value": 1
-        }
-      ],
-      "concreteType": "Show",
-      "plural": true,
-      "selections": [
-        (v0/*: any*/),
-        (v3/*: any*/),
-        (v4/*: any*/),
-        (v1/*: any*/),
-        (v2/*: any*/),
-        (v7/*: any*/),
-        {
-          "kind": "ScalarField",
-          "alias": "is_followed",
-          "name": "isFollowed",
-          "args": null,
-          "storageKey": null
-        },
-        (v6/*: any*/)
-      ]
     }
   ]
 };
 })();
-(node as any).hash = '942cbc5eb661d7eaa34f7a1d88c3c5ed';
+(node as any).hash = 'a9ece62ccaacd7f6ed0daafc8355fd91';
 export default node;
diff --git a/src/__generated__/ConversationSnippet_conversation.graphql.ts b/src/__generated__/ConversationSnippet_conversation.graphql.ts
index 302416fbe..c841d6d6a 100644
--- a/src/__generated__/ConversationSnippet_conversation.graphql.ts
+++ b/src/__generated__/ConversationSnippet_conversation.graphql.ts
@@ -8,15 +8,15 @@ export type ConversationSnippet_conversation = {
     readonly to: {
         readonly name: string;
     };
-    readonly last_message: string | null;
-    readonly last_message_at: string | null;
+    readonly lastMessage: string | null;
+    readonly lastMessageAt: string | null;
     readonly unread: boolean | null;
     readonly items: ReadonlyArray<{
         readonly item: ({
             readonly __typename: string;
             readonly date?: string | null;
             readonly title?: string | null;
-            readonly artist_names?: string | null;
+            readonly artistNames?: string | null;
             readonly image?: {
                 readonly url: string | null;
             } | null;
@@ -24,14 +24,14 @@ export type ConversationSnippet_conversation = {
                 readonly name: string | null;
             } | null;
             readonly name?: string | null;
-            readonly cover_image?: {
+            readonly coverImage?: {
                 readonly url: string | null;
             } | null;
         } & ({
             readonly __typename: "Artwork";
             readonly date: string | null;
             readonly title: string | null;
-            readonly artist_names: string | null;
+            readonly artistNames: string | null;
             readonly image: {
                 readonly url: string | null;
             } | null;
@@ -41,7 +41,7 @@ export type ConversationSnippet_conversation = {
                 readonly name: string | null;
             } | null;
             readonly name: string | null;
-            readonly cover_image: {
+            readonly coverImage: {
                 readonly url: string | null;
             } | null;
         } | {
@@ -101,14 +101,14 @@ return {
     },
     {
       "kind": "ScalarField",
-      "alias": "last_message",
+      "alias": null,
       "name": "lastMessage",
       "args": null,
       "storageKey": null
     },
     {
       "kind": "ScalarField",
-      "alias": "last_message_at",
+      "alias": null,
       "name": "lastMessageAt",
       "args": null,
       "storageKey": null
@@ -165,7 +165,7 @@ return {
                 },
                 {
                   "kind": "ScalarField",
-                  "alias": "artist_names",
+                  "alias": null,
                   "name": "artistNames",
                   "args": null,
                   "storageKey": null
@@ -199,7 +199,7 @@ return {
                 (v0/*: any*/),
                 {
                   "kind": "LinkedField",
-                  "alias": "cover_image",
+                  "alias": null,
                   "name": "coverImage",
                   "storageKey": null,
                   "args": null,
@@ -216,5 +216,5 @@ return {
   ]
 };
 })();
-(node as any).hash = 'ac3f7de52b8ab5b35e443600bfc0039f';
+(node as any).hash = '51a731d89429f7b46a9000aed66aec62';
 export default node;
diff --git a/src/__generated__/Conversation_me.graphql.ts b/src/__generated__/Conversation_me.graphql.ts
index 51f370e78..b128eff43 100644
--- a/src/__generated__/Conversation_me.graphql.ts
+++ b/src/__generated__/Conversation_me.graphql.ts
@@ -8,16 +8,14 @@ export type Conversation_me = {
     readonly conversation: {
         readonly internalID: string | null;
         readonly id: string;
+        readonly lastMessageID: string | null;
+        readonly unread: boolean | null;
         readonly to: {
             readonly name: string;
-            readonly initials: string | null;
         };
         readonly from: {
             readonly email: string;
         };
-        readonly last_message_id: string | null;
-        readonly initial_message: string;
-        readonly unread: boolean | null;
         readonly " $fragmentRefs": Messages_conversation$ref;
     } | null;
     readonly " $refType": Conversation_me$ref;
@@ -67,6 +65,20 @@ const node: ReaderFragment = {
           "args": null,
           "storageKey": null
         },
+        {
+          "kind": "ScalarField",
+          "alias": null,
+          "name": "lastMessageID",
+          "args": null,
+          "storageKey": null
+        },
+        {
+          "kind": "ScalarField",
+          "alias": null,
+          "name": "unread",
+          "args": null,
+          "storageKey": null
+        },
         {
           "kind": "LinkedField",
           "alias": null,
@@ -82,13 +94,6 @@ const node: ReaderFragment = {
               "name": "name",
               "args": null,
               "storageKey": null
-            },
-            {
-              "kind": "ScalarField",
-              "alias": null,
-              "name": "initials",
-              "args": null,
-              "storageKey": null
             }
           ]
         },
@@ -110,27 +115,6 @@ const node: ReaderFragment = {
             }
           ]
         },
-        {
-          "kind": "ScalarField",
-          "alias": "last_message_id",
-          "name": "lastMessageID",
-          "args": null,
-          "storageKey": null
-        },
-        {
-          "kind": "ScalarField",
-          "alias": "initial_message",
-          "name": "initialMessage",
-          "args": null,
-          "storageKey": null
-        },
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "unread",
-          "args": null,
-          "storageKey": null
-        },
         {
           "kind": "FragmentSpread",
           "name": "Messages_conversation",
@@ -140,5 +124,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = '74b9d6ee6f9fad3edc49b42533d4a50e';
+(node as any).hash = '453817fb6e16a3de8ec1ba95936c0a8a';
 export default node;
diff --git a/src/__generated__/ConversationsQuery.graphql.ts b/src/__generated__/ConversationsQuery.graphql.ts
index 014346e67..b2f584381 100644
--- a/src/__generated__/ConversationsQuery.graphql.ts
+++ b/src/__generated__/ConversationsQuery.graphql.ts
@@ -54,8 +54,8 @@ fragment ConversationSnippet_conversation on Conversation {
     name
     id
   }
-  last_message: lastMessage
-  last_message_at: lastMessageAt
+  lastMessage
+  lastMessageAt
   unread
   items {
     item {
@@ -63,7 +63,7 @@ fragment ConversationSnippet_conversation on Conversation {
       ... on Artwork {
         date
         title
-        artist_names: artistNames
+        artistNames
         image {
           url
         }
@@ -74,7 +74,7 @@ fragment ConversationSnippet_conversation on Conversation {
           id
         }
         name
-        cover_image: coverImage {
+        coverImage {
           url
         }
       }
@@ -277,7 +277,14 @@ return {
                       },
                       {
                         "kind": "ScalarField",
-                        "alias": "last_message_at",
+                        "alias": null,
+                        "name": "lastMessage",
+                        "args": null,
+                        "storageKey": null
+                      },
+                      {
+                        "kind": "ScalarField",
+                        "alias": null,
                         "name": "lastMessageAt",
                         "args": null,
                         "storageKey": null
@@ -329,7 +336,7 @@ return {
                                   },
                                   {
                                     "kind": "ScalarField",
-                                    "alias": "artist_names",
+                                    "alias": null,
                                     "name": "artistNames",
                                     "args": null,
                                     "storageKey": null
@@ -363,7 +370,7 @@ return {
                                   (v2/*: any*/),
                                   {
                                     "kind": "LinkedField",
-                                    "alias": "cover_image",
+                                    "alias": null,
                                     "name": "coverImage",
                                     "storageKey": null,
                                     "args": null,
@@ -409,7 +416,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ConversationsQuery",
-    "id": "386aa36282a025b6c65fc9a129b345b6",
+    "id": "4587fa958ec869e9700b9d66df269bc3",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/DetailTestsQuery.graphql.ts b/src/__generated__/DetailTestsQuery.graphql.ts
index 464a3c5ee..5257f8eeb 100644
--- a/src/__generated__/DetailTestsQuery.graphql.ts
+++ b/src/__generated__/DetailTestsQuery.graphql.ts
@@ -26,13 +26,7 @@ query DetailTestsQuery {
 fragment Detail_show on Show {
   internalID
   slug
-  name
   description
-  city
-  isStubShow
-  images {
-    internalID
-  }
   ...ShowHeader_show
   ...ShowArtworksPreview_show
   ...ShowArtistsPreview_show
@@ -53,7 +47,7 @@ fragment Detail_show on Show {
     }
     id
   }
-  artists_without_artworks: artistsWithoutArtworks {
+  artistsWithoutArtworks {
     slug
     id
   }
@@ -61,7 +55,6 @@ fragment Detail_show on Show {
     artworks
     artists
   }
-  status
   partner {
     __typename
     ... on Partner {
@@ -82,11 +75,9 @@ fragment ShowHeader_show on Show {
   internalID
   id
   name
-  press_release: pressRelease
   is_followed: isFollowed
   end_at: endAt
   exhibition_period: exhibitionPeriod
-  status
   isStubShow
   partner {
     __typename
@@ -212,7 +203,6 @@ fragment ShowItem_show on Show {
   end_at: endAt
   images {
     url
-    aspect_ratio: aspectRatio
   }
   partner {
     __typename
@@ -246,7 +236,6 @@ fragment ArtistListItem_artist on Artist {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -257,15 +246,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -317,101 +303,97 @@ v2 = {
 v3 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "name",
+  "name": "id",
   "args": null,
   "storageKey": null
 },
 v4 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "city",
+  "name": "name",
   "args": null,
   "storageKey": null
 },
 v5 = {
   "kind": "ScalarField",
-  "alias": null,
-  "name": "url",
+  "alias": "is_followed",
+  "name": "isFollowed",
   "args": null,
   "storageKey": null
 },
 v6 = {
   "kind": "ScalarField",
-  "alias": "aspect_ratio",
-  "name": "aspectRatio",
+  "alias": "end_at",
+  "name": "endAt",
   "args": null,
   "storageKey": null
 },
 v7 = {
   "kind": "ScalarField",
-  "alias": null,
-  "name": "id",
+  "alias": "exhibition_period",
+  "name": "exhibitionPeriod",
   "args": null,
   "storageKey": null
 },
 v8 = {
   "kind": "ScalarField",
-  "alias": "is_followed",
-  "name": "isFollowed",
+  "alias": null,
+  "name": "__typename",
   "args": null,
   "storageKey": null
 },
 v9 = {
   "kind": "ScalarField",
-  "alias": "end_at",
-  "name": "endAt",
+  "alias": null,
+  "name": "href",
   "args": null,
   "storageKey": null
 },
 v10 = {
   "kind": "ScalarField",
-  "alias": "exhibition_period",
-  "name": "exhibitionPeriod",
+  "alias": null,
+  "name": "url",
   "args": null,
   "storageKey": null
 },
 v11 = {
   "kind": "ScalarField",
-  "alias": null,
-  "name": "__typename",
+  "alias": "aspect_ratio",
+  "name": "aspectRatio",
   "args": null,
   "storageKey": null
 },
 v12 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "href",
-  "args": null,
-  "storageKey": null
-},
-v13 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "initials",
   "args": null,
   "storageKey": null
 },
-v14 = {
+v13 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "nationality",
   "args": null,
   "storageKey": null
 },
-v15 = {
+v14 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "birthday",
   "args": null,
   "storageKey": null
 },
-v16 = {
+v15 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "deathday",
   "args": null,
   "storageKey": null
 },
+v16 = [
+  (v10/*: any*/)
+],
 v17 = {
   "kind": "LinkedField",
   "alias": null,
@@ -420,13 +402,11 @@ v17 = {
   "args": null,
   "concreteType": "Image",
   "plural": false,
-  "selections": [
-    (v5/*: any*/)
-  ]
+  "selections": (v16/*: any*/)
 },
 v18 = [
-  (v3/*: any*/),
-  (v7/*: any*/)
+  (v4/*: any*/),
+  (v3/*: any*/)
 ];
 return {
   "kind": "Request",
@@ -471,7 +451,6 @@ return {
         "selections": [
           (v1/*: any*/),
           (v2/*: any*/),
-          (v3/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -479,43 +458,15 @@ return {
             "args": null,
             "storageKey": null
           },
+          (v3/*: any*/),
           (v4/*: any*/),
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "isStubShow",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "images",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "Image",
-            "plural": true,
-            "selections": [
-              (v1/*: any*/),
-              (v5/*: any*/),
-              (v6/*: any*/)
-            ]
-          },
+          (v5/*: any*/),
+          (v6/*: any*/),
           (v7/*: any*/),
-          {
-            "kind": "ScalarField",
-            "alias": "press_release",
-            "name": "pressRelease",
-            "args": null,
-            "storageKey": null
-          },
-          (v8/*: any*/),
-          (v9/*: any*/),
-          (v10/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
-            "name": "status",
+            "name": "isStubShow",
             "args": null,
             "storageKey": null
           },
@@ -528,15 +479,15 @@ return {
             "concreteType": null,
             "plural": false,
             "selections": [
-              (v11/*: any*/),
-              (v7/*: any*/),
+              (v8/*: any*/),
+              (v3/*: any*/),
               {
                 "kind": "InlineFragment",
                 "type": "Partner",
                 "selections": [
-                  (v3/*: any*/),
+                  (v4/*: any*/),
                   (v2/*: any*/),
-                  (v12/*: any*/),
+                  (v9/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": null,
@@ -548,6 +499,19 @@ return {
               }
             ]
           },
+          {
+            "kind": "LinkedField",
+            "alias": null,
+            "name": "images",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Image",
+            "plural": true,
+            "selections": [
+              (v10/*: any*/),
+              (v11/*: any*/)
+            ]
+          },
           {
             "kind": "LinkedField",
             "alias": "followedArtists",
@@ -590,11 +554,11 @@ return {
                         "concreteType": "Artist",
                         "plural": false,
                         "selections": [
-                          (v3/*: any*/),
-                          (v12/*: any*/),
+                          (v4/*: any*/),
+                          (v9/*: any*/),
                           (v2/*: any*/),
                           (v1/*: any*/),
-                          (v7/*: any*/)
+                          (v3/*: any*/)
                         ]
                       }
                     ]
@@ -612,16 +576,16 @@ return {
             "concreteType": "Artist",
             "plural": true,
             "selections": [
-              (v3/*: any*/),
-              (v12/*: any*/),
+              (v4/*: any*/),
+              (v9/*: any*/),
               (v2/*: any*/),
               (v1/*: any*/),
-              (v7/*: any*/),
+              (v3/*: any*/),
+              (v12/*: any*/),
+              (v5/*: any*/),
               (v13/*: any*/),
-              (v8/*: any*/),
               (v14/*: any*/),
               (v15/*: any*/),
-              (v16/*: any*/),
               (v17/*: any*/)
             ]
           },
@@ -683,8 +647,7 @@ return {
                     "concreteType": "Artwork",
                     "plural": false,
                     "selections": [
-                      (v7/*: any*/),
-                      (v2/*: any*/),
+                      (v3/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -694,7 +657,7 @@ return {
                         "concreteType": "Image",
                         "plural": false,
                         "selections": [
-                          (v6/*: any*/),
+                          (v11/*: any*/),
                           {
                             "kind": "ScalarField",
                             "alias": null,
@@ -731,13 +694,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -759,6 +715,7 @@ return {
                         "args": null,
                         "storageKey": null
                       },
+                      (v2/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -775,20 +732,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_live_open",
-                            "name": "isLiveOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_open",
-                            "name": "isOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -803,7 +746,7 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          (v7/*: any*/)
+                          (v3/*: any*/)
                         ]
                       },
                       {
@@ -833,7 +776,7 @@ return {
                               }
                             ]
                           },
-                          (v7/*: any*/)
+                          (v3/*: any*/)
                         ]
                       },
                       {
@@ -862,7 +805,7 @@ return {
                         "plural": false,
                         "selections": (v18/*: any*/)
                       },
-                      (v12/*: any*/)
+                      (v9/*: any*/)
                     ]
                   }
                 ]
@@ -878,16 +821,16 @@ return {
             "concreteType": "Artist",
             "plural": true,
             "selections": [
-              (v7/*: any*/),
+              (v3/*: any*/),
               (v1/*: any*/),
               (v2/*: any*/),
+              (v9/*: any*/),
+              (v4/*: any*/),
               (v12/*: any*/),
-              (v3/*: any*/),
+              (v5/*: any*/),
               (v13/*: any*/),
-              (v8/*: any*/),
               (v14/*: any*/),
               (v15/*: any*/),
-              (v16/*: any*/),
               (v17/*: any*/)
             ]
           },
@@ -924,12 +867,12 @@ return {
                     "concreteType": "Show",
                     "plural": false,
                     "selections": [
-                      (v7/*: any*/),
+                      (v3/*: any*/),
                       (v1/*: any*/),
                       (v2/*: any*/),
-                      (v3/*: any*/),
-                      (v10/*: any*/),
-                      (v9/*: any*/),
+                      (v4/*: any*/),
+                      (v7/*: any*/),
+                      (v6/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -938,10 +881,7 @@ return {
                         "args": null,
                         "concreteType": "Image",
                         "plural": true,
-                        "selections": [
-                          (v5/*: any*/),
-                          (v6/*: any*/)
-                        ]
+                        "selections": (v16/*: any*/)
                       },
                       {
                         "kind": "LinkedField",
@@ -952,13 +892,13 @@ return {
                         "concreteType": null,
                         "plural": false,
                         "selections": [
-                          (v11/*: any*/),
-                          (v7/*: any*/),
+                          (v8/*: any*/),
+                          (v3/*: any*/),
                           {
                             "kind": "InlineFragment",
                             "type": "Partner",
                             "selections": [
-                              (v3/*: any*/)
+                              (v4/*: any*/)
                             ]
                           }
                         ]
@@ -978,9 +918,15 @@ return {
             "concreteType": "Location",
             "plural": false,
             "selections": [
-              (v7/*: any*/),
+              (v3/*: any*/),
               (v1/*: any*/),
-              (v4/*: any*/),
+              {
+                "kind": "ScalarField",
+                "alias": null,
+                "name": "city",
+                "args": null,
+                "storageKey": null
+              },
               {
                 "kind": "ScalarField",
                 "alias": null,
@@ -1075,7 +1021,7 @@ return {
                 "concreteType": null,
                 "plural": false,
                 "selections": [
-                  (v11/*: any*/),
+                  (v8/*: any*/),
                   {
                     "kind": "InlineFragment",
                     "type": "OpeningHoursArray",
@@ -1123,6 +1069,19 @@ return {
                 ]
               }
             ]
+          },
+          {
+            "kind": "LinkedField",
+            "alias": null,
+            "name": "artistsWithoutArtworks",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Artist",
+            "plural": true,
+            "selections": [
+              (v2/*: any*/),
+              (v3/*: any*/)
+            ]
           }
         ]
       }
@@ -1131,7 +1090,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "DetailTestsQuery",
-    "id": "ebbb043e0af94839bdf6eace942f47ac",
+    "id": "eb3334f2f0a392023ea218c814a2a8e3",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/Detail_show.graphql.ts b/src/__generated__/Detail_show.graphql.ts
index 19e2ba63a..9f564476c 100644
--- a/src/__generated__/Detail_show.graphql.ts
+++ b/src/__generated__/Detail_show.graphql.ts
@@ -11,13 +11,7 @@ export type Detail_show$ref = typeof _Detail_show$ref;
 export type Detail_show = {
     readonly internalID: string;
     readonly slug: string;
-    readonly name: string | null;
     readonly description: string | null;
-    readonly city: string | null;
-    readonly isStubShow: boolean | null;
-    readonly images: ReadonlyArray<{
-        readonly internalID: string | null;
-    } | null> | null;
     readonly location: {
         readonly openingHours: ({
             readonly schedules?: ReadonlyArray<{
@@ -39,14 +33,13 @@ export type Detail_show = {
         })) | null;
         readonly " $fragmentRefs": LocationMap_location$ref;
     } | null;
-    readonly artists_without_artworks: ReadonlyArray<{
+    readonly artistsWithoutArtworks: ReadonlyArray<{
         readonly slug: string;
     } | null> | null;
     readonly counts: {
         readonly artworks: number | null;
         readonly artists: number | null;
     } | null;
-    readonly status: string | null;
     readonly partner: ({
         readonly name?: string | null;
         readonly type?: string | null;
@@ -66,25 +59,11 @@ export type Detail_show = {
 
 const node: ReaderFragment = (function(){
 var v0 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "internalID",
-  "args": null,
-  "storageKey": null
-},
-v1 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "slug",
   "args": null,
   "storageKey": null
-},
-v2 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "name",
-  "args": null,
-  "storageKey": null
 };
 return {
   "kind": "Fragment",
@@ -93,42 +72,21 @@ return {
   "metadata": null,
   "argumentDefinitions": [],
   "selections": [
-    (v0/*: any*/),
-    (v1/*: any*/),
-    (v2/*: any*/),
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "description",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "ScalarField",
       "alias": null,
-      "name": "city",
+      "name": "internalID",
       "args": null,
       "storageKey": null
     },
+    (v0/*: any*/),
     {
       "kind": "ScalarField",
       "alias": null,
-      "name": "isStubShow",
+      "name": "description",
       "args": null,
       "storageKey": null
     },
-    {
-      "kind": "LinkedField",
-      "alias": null,
-      "name": "images",
-      "storageKey": null,
-      "args": null,
-      "concreteType": "Image",
-      "plural": true,
-      "selections": [
-        (v0/*: any*/)
-      ]
-    },
     {
       "kind": "LinkedField",
       "alias": null,
@@ -202,14 +160,14 @@ return {
     },
     {
       "kind": "LinkedField",
-      "alias": "artists_without_artworks",
+      "alias": null,
       "name": "artistsWithoutArtworks",
       "storageKey": null,
       "args": null,
       "concreteType": "Artist",
       "plural": true,
       "selections": [
-        (v1/*: any*/)
+        (v0/*: any*/)
       ]
     },
     {
@@ -237,13 +195,6 @@ return {
         }
       ]
     },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "status",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "LinkedField",
       "alias": null,
@@ -257,7 +208,13 @@ return {
           "kind": "InlineFragment",
           "type": "Partner",
           "selections": [
-            (v2/*: any*/),
+            {
+              "kind": "ScalarField",
+              "alias": null,
+              "name": "name",
+              "args": null,
+              "storageKey": null
+            },
             {
               "kind": "ScalarField",
               "alias": null,
@@ -292,5 +249,5 @@ return {
   ]
 };
 })();
-(node as any).hash = '96d683f7cf1d11df32d49cf249862c77';
+(node as any).hash = '6b10fecaf389604f1d711c4b5b4bda88';
 export default node;
diff --git a/src/__generated__/FairArtistsQuery.graphql.ts b/src/__generated__/FairArtistsQuery.graphql.ts
index 0a2aec057..f514b20d8 100644
--- a/src/__generated__/FairArtistsQuery.graphql.ts
+++ b/src/__generated__/FairArtistsQuery.graphql.ts
@@ -41,16 +41,13 @@ fragment FairArtists_fair_1G22uz on Fair {
       endCursor
     }
     edges {
-      cursor
       node {
         ...ArtistListItem_artist
-        sortable_id: sortableID
-        href
-        internalID
-        slug
+        sortableID
         id
         __typename
       }
+      cursor
     }
   }
 }
@@ -237,13 +234,6 @@ return {
                 "concreteType": "ArtistEdge",
                 "plural": true,
                 "selections": [
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "cursor",
-                    "args": null,
-                    "storageKey": null
-                  },
                   {
                     "kind": "LinkedField",
                     "alias": null,
@@ -325,7 +315,7 @@ return {
                       },
                       {
                         "kind": "ScalarField",
-                        "alias": "sortable_id",
+                        "alias": null,
                         "name": "sortableID",
                         "args": null,
                         "storageKey": null
@@ -338,6 +328,13 @@ return {
                         "storageKey": null
                       }
                     ]
+                  },
+                  {
+                    "kind": "ScalarField",
+                    "alias": null,
+                    "name": "cursor",
+                    "args": null,
+                    "storageKey": null
                   }
                 ]
               }
@@ -360,7 +357,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FairArtistsQuery",
-    "id": "bbfabd259d81cf2ff2ada77917f36ad5",
+    "id": "23c357620a5af8ece6b385299613e942",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FairArtistsRendererQuery.graphql.ts b/src/__generated__/FairArtistsRendererQuery.graphql.ts
index cc0ca2e8b..894dc0e78 100644
--- a/src/__generated__/FairArtistsRendererQuery.graphql.ts
+++ b/src/__generated__/FairArtistsRendererQuery.graphql.ts
@@ -37,16 +37,13 @@ fragment FairArtists_fair on Fair {
       endCursor
     }
     edges {
-      cursor
       node {
         ...ArtistListItem_artist
-        sortable_id: sortableID
-        href
-        internalID
-        slug
+        sortableID
         id
         __typename
       }
+      cursor
     }
   }
 }
@@ -205,13 +202,6 @@ return {
                 "concreteType": "ArtistEdge",
                 "plural": true,
                 "selections": [
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "cursor",
-                    "args": null,
-                    "storageKey": null
-                  },
                   {
                     "kind": "LinkedField",
                     "alias": null,
@@ -293,7 +283,7 @@ return {
                       },
                       {
                         "kind": "ScalarField",
-                        "alias": "sortable_id",
+                        "alias": null,
                         "name": "sortableID",
                         "args": null,
                         "storageKey": null
@@ -306,6 +296,13 @@ return {
                         "storageKey": null
                       }
                     ]
+                  },
+                  {
+                    "kind": "ScalarField",
+                    "alias": null,
+                    "name": "cursor",
+                    "args": null,
+                    "storageKey": null
                   }
                 ]
               }
@@ -328,7 +325,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FairArtistsRendererQuery",
-    "id": "01ca1b098cc2d55915aa938ba0f515ae",
+    "id": "b3cdae9c8f868ed4f5bbde50e08ed541",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FairArtistsTestsQuery.graphql.ts b/src/__generated__/FairArtistsTestsQuery.graphql.ts
index 1e7ab680e..5270fb97f 100644
--- a/src/__generated__/FairArtistsTestsQuery.graphql.ts
+++ b/src/__generated__/FairArtistsTestsQuery.graphql.ts
@@ -33,16 +33,13 @@ fragment FairArtists_fair on Fair {
       endCursor
     }
     edges {
-      cursor
       node {
         ...ArtistListItem_artist
-        sortable_id: sortableID
-        href
-        internalID
-        slug
+        sortableID
         id
         __typename
       }
+      cursor
     }
   }
 }
@@ -193,13 +190,6 @@ return {
                 "concreteType": "ArtistEdge",
                 "plural": true,
                 "selections": [
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "cursor",
-                    "args": null,
-                    "storageKey": null
-                  },
                   {
                     "kind": "LinkedField",
                     "alias": null,
@@ -281,7 +271,7 @@ return {
                       },
                       {
                         "kind": "ScalarField",
-                        "alias": "sortable_id",
+                        "alias": null,
                         "name": "sortableID",
                         "args": null,
                         "storageKey": null
@@ -294,6 +284,13 @@ return {
                         "storageKey": null
                       }
                     ]
+                  },
+                  {
+                    "kind": "ScalarField",
+                    "alias": null,
+                    "name": "cursor",
+                    "args": null,
+                    "storageKey": null
                   }
                 ]
               }
@@ -316,7 +313,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FairArtistsTestsQuery",
-    "id": "62cb3fe189067bbdf1ccc7c2d0ffcf57",
+    "id": "662b0a169cbb810b1b296edfa11f5c48",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FairArtists_fair.graphql.ts b/src/__generated__/FairArtists_fair.graphql.ts
index 349bb89b8..3a254b7e7 100644
--- a/src/__generated__/FairArtists_fair.graphql.ts
+++ b/src/__generated__/FairArtists_fair.graphql.ts
@@ -14,12 +14,8 @@ export type FairArtists_fair = {
             readonly endCursor: string | null;
         };
         readonly edges: ReadonlyArray<{
-            readonly cursor: string;
             readonly node: {
-                readonly sortable_id: string | null;
-                readonly href: string | null;
-                readonly internalID: string;
-                readonly slug: string;
+                readonly sortableID: string | null;
                 readonly " $fragmentRefs": ArtistListItem_artist$ref;
             } | null;
         } | null> | null;
@@ -29,22 +25,7 @@ export type FairArtists_fair = {
 
 
 
-const node: ReaderFragment = (function(){
-var v0 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "slug",
-  "args": null,
-  "storageKey": null
-},
-v1 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "internalID",
-  "args": null,
-  "storageKey": null
-};
-return {
+const node: ReaderFragment = {
   "kind": "Fragment",
   "name": "FairArtists_fair",
   "type": "Fair",
@@ -75,8 +56,20 @@ return {
     }
   ],
   "selections": [
-    (v0/*: any*/),
-    (v1/*: any*/),
+    {
+      "kind": "ScalarField",
+      "alias": null,
+      "name": "slug",
+      "args": null,
+      "storageKey": null
+    },
+    {
+      "kind": "ScalarField",
+      "alias": null,
+      "name": "internalID",
+      "args": null,
+      "storageKey": null
+    },
     {
       "kind": "LinkedField",
       "alias": "artists",
@@ -127,13 +120,6 @@ return {
           "concreteType": "ArtistEdge",
           "plural": true,
           "selections": [
-            {
-              "kind": "ScalarField",
-              "alias": null,
-              "name": "cursor",
-              "args": null,
-              "storageKey": null
-            },
             {
               "kind": "LinkedField",
               "alias": null,
@@ -143,22 +129,13 @@ return {
               "concreteType": "Artist",
               "plural": false,
               "selections": [
-                {
-                  "kind": "ScalarField",
-                  "alias": "sortable_id",
-                  "name": "sortableID",
-                  "args": null,
-                  "storageKey": null
-                },
                 {
                   "kind": "ScalarField",
                   "alias": null,
-                  "name": "href",
+                  "name": "sortableID",
                   "args": null,
                   "storageKey": null
                 },
-                (v1/*: any*/),
-                (v0/*: any*/),
                 {
                   "kind": "ScalarField",
                   "alias": null,
@@ -172,6 +149,13 @@ return {
                   "args": null
                 }
               ]
+            },
+            {
+              "kind": "ScalarField",
+              "alias": null,
+              "name": "cursor",
+              "args": null,
+              "storageKey": null
             }
           ]
         }
@@ -179,6 +163,5 @@ return {
     }
   ]
 };
-})();
-(node as any).hash = '054553e19a3179920e30ef9e136c0839';
+(node as any).hash = '1dfc136e3df0fccd7b8f79d48fcdd6c6';
 export default node;
diff --git a/src/__generated__/FairArtworksQuery.graphql.ts b/src/__generated__/FairArtworksQuery.graphql.ts
index cb10965c9..f4294a2e1 100644
--- a/src/__generated__/FairArtworksQuery.graphql.ts
+++ b/src/__generated__/FairArtworksQuery.graphql.ts
@@ -40,7 +40,6 @@ fragment FilteredInfiniteScrollGrid_entity on EntityWithFilterArtworksConnection
     edges {
       node {
         id
-        slug
         __typename
       }
       cursor
@@ -91,15 +90,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -331,13 +327,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -375,20 +364,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_live_open",
-                            "name": "isLiveOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_open",
-                            "name": "isOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -580,7 +555,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FairArtworksQuery",
-    "id": "72df559297044e9a001ab18c8e53c6dc",
+    "id": "13452b3965fea39155549ff276ce98e5",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FairArtworksTestsQuery.graphql.ts b/src/__generated__/FairArtworksTestsQuery.graphql.ts
index 475661cb4..c49544899 100644
--- a/src/__generated__/FairArtworksTestsQuery.graphql.ts
+++ b/src/__generated__/FairArtworksTestsQuery.graphql.ts
@@ -36,7 +36,6 @@ fragment FilteredInfiniteScrollGrid_entity on EntityWithFilterArtworksConnection
     edges {
       node {
         id
-        slug
         __typename
       }
       cursor
@@ -87,15 +86,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -319,13 +315,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -363,20 +352,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_live_open",
-                            "name": "isLiveOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_open",
-                            "name": "isOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -568,7 +543,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FairArtworksTestsQuery",
-    "id": "e29e33bff8a63d737fc7e81e71f1963b",
+    "id": "ee34f9e5a131918377225b0a06243944",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FairBoothPreviewMutation.graphql.ts b/src/__generated__/FairBoothPreviewMutation.graphql.ts
index 9d9965ac4..d716190ab 100644
--- a/src/__generated__/FairBoothPreviewMutation.graphql.ts
+++ b/src/__generated__/FairBoothPreviewMutation.graphql.ts
@@ -12,9 +12,10 @@ export type FairBoothPreviewMutationVariables = {
 export type FairBoothPreviewMutationResponse = {
     readonly followProfile: {
         readonly profile: {
+            readonly id: string;
             readonly slug: string;
             readonly internalID: string;
-            readonly is_followed: boolean | null;
+            readonly isFollowed: boolean | null;
         } | null;
     } | null;
 };
@@ -31,10 +32,10 @@ mutation FairBoothPreviewMutation(
 ) {
   followProfile(input: $input) {
     profile {
+      id
       slug
       internalID
-      is_followed: isFollowed
-      id
+      isFollowed
     }
   }
 }
@@ -51,115 +52,86 @@ var v0 = [
 ],
 v1 = [
   {
-    "kind": "Variable",
-    "name": "input",
-    "variableName": "input"
-  }
-],
-v2 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "slug",
-  "args": null,
-  "storageKey": null
-},
-v3 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "internalID",
-  "args": null,
-  "storageKey": null
-},
-v4 = {
-  "kind": "ScalarField",
-  "alias": "is_followed",
-  "name": "isFollowed",
-  "args": null,
-  "storageKey": null
-};
-return {
-  "kind": "Request",
-  "fragment": {
-    "kind": "Fragment",
-    "name": "FairBoothPreviewMutation",
-    "type": "Mutation",
-    "metadata": null,
-    "argumentDefinitions": (v0/*: any*/),
+    "kind": "LinkedField",
+    "alias": null,
+    "name": "followProfile",
+    "storageKey": null,
+    "args": [
+      {
+        "kind": "Variable",
+        "name": "input",
+        "variableName": "input"
+      }
+    ],
+    "concreteType": "FollowProfilePayload",
+    "plural": false,
     "selections": [
       {
         "kind": "LinkedField",
         "alias": null,
-        "name": "followProfile",
+        "name": "profile",
         "storageKey": null,
-        "args": (v1/*: any*/),
-        "concreteType": "FollowProfilePayload",
+        "args": null,
+        "concreteType": "Profile",
         "plural": false,
         "selections": [
           {
-            "kind": "LinkedField",
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "id",
+            "args": null,
+            "storageKey": null
+          },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "slug",
+            "args": null,
+            "storageKey": null
+          },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "internalID",
+            "args": null,
+            "storageKey": null
+          },
+          {
+            "kind": "ScalarField",
             "alias": null,
-            "name": "profile",
-            "storageKey": null,
+            "name": "isFollowed",
             "args": null,
-            "concreteType": "Profile",
-            "plural": false,
-            "selections": [
-              (v2/*: any*/),
-              (v3/*: any*/),
-              (v4/*: any*/)
-            ]
+            "storageKey": null
           }
         ]
       }
     ]
+  }
+];
+return {
+  "kind": "Request",
+  "fragment": {
+    "kind": "Fragment",
+    "name": "FairBoothPreviewMutation",
+    "type": "Mutation",
+    "metadata": null,
+    "argumentDefinitions": (v0/*: any*/),
+    "selections": (v1/*: any*/)
   },
   "operation": {
     "kind": "Operation",
     "name": "FairBoothPreviewMutation",
     "argumentDefinitions": (v0/*: any*/),
-    "selections": [
-      {
-        "kind": "LinkedField",
-        "alias": null,
-        "name": "followProfile",
-        "storageKey": null,
-        "args": (v1/*: any*/),
-        "concreteType": "FollowProfilePayload",
-        "plural": false,
-        "selections": [
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "profile",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "Profile",
-            "plural": false,
-            "selections": [
-              (v2/*: any*/),
-              (v3/*: any*/),
-              (v4/*: any*/),
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "id",
-                "args": null,
-                "storageKey": null
-              }
-            ]
-          }
-        ]
-      }
-    ]
+    "selections": (v1/*: any*/)
   },
   "params": {
     "operationKind": "mutation",
     "name": "FairBoothPreviewMutation",
-    "id": "09fc4312cc6d21e7b3584d6e01a1ab83",
+    "id": "f135de64aecf1f33218a65b94d43af44",
     "text": null,
     "metadata": {}
   }
 };
 })();
-(node as any).hash = 'eb8f9bc1bcdd5031af92c3da49de2038';
+(node as any).hash = '246d8dbaaee607fce95e8c6ad4be0e6d';
 export default node;
diff --git a/src/__generated__/FairBoothPreview_show.graphql.ts b/src/__generated__/FairBoothPreview_show.graphql.ts
index ad59066f6..bbcf48a17 100644
--- a/src/__generated__/FairBoothPreview_show.graphql.ts
+++ b/src/__generated__/FairBoothPreview_show.graphql.ts
@@ -7,8 +7,6 @@ export type FairBoothPreview_show$ref = typeof _FairBoothPreview_show$ref;
 export type FairBoothPreview_show = {
     readonly slug: string;
     readonly internalID: string;
-    readonly name: string | null;
-    readonly is_fair_booth: boolean | null;
     readonly counts: {
         readonly artworks: number | null;
     } | null;
@@ -19,8 +17,10 @@ export type FairBoothPreview_show = {
         readonly internalID?: string;
         readonly id?: string;
         readonly profile?: {
+            readonly id: string;
+            readonly slug: string;
             readonly internalID: string;
-            readonly is_followed: boolean | null;
+            readonly isFollowed: boolean | null;
         } | null;
     } & ({
         readonly name: string | null;
@@ -29,18 +29,17 @@ export type FairBoothPreview_show = {
         readonly internalID: string;
         readonly id: string;
         readonly profile: {
+            readonly id: string;
+            readonly slug: string;
             readonly internalID: string;
-            readonly is_followed: boolean | null;
+            readonly isFollowed: boolean | null;
         } | null;
     } | {
         /*This will never be '% other', but we need some
         value in case none of the concrete values match.*/
         readonly __typename: "%other";
     })) | null;
-    readonly fair: {
-        readonly name: string | null;
-    } | null;
-    readonly cover_image: {
+    readonly coverImage: {
         readonly url: string | null;
     } | null;
     readonly location: {
@@ -76,7 +75,7 @@ v1 = {
 v2 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "name",
+  "name": "id",
   "args": null,
   "storageKey": null
 };
@@ -89,14 +88,6 @@ return {
   "selections": [
     (v0/*: any*/),
     (v1/*: any*/),
-    (v2/*: any*/),
-    {
-      "kind": "ScalarField",
-      "alias": "is_fair_booth",
-      "name": "isFairBooth",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "LinkedField",
       "alias": null,
@@ -128,23 +119,23 @@ return {
           "kind": "InlineFragment",
           "type": "Partner",
           "selections": [
-            (v2/*: any*/),
             {
               "kind": "ScalarField",
               "alias": null,
-              "name": "href",
+              "name": "name",
               "args": null,
               "storageKey": null
             },
-            (v0/*: any*/),
-            (v1/*: any*/),
             {
               "kind": "ScalarField",
               "alias": null,
-              "name": "id",
+              "name": "href",
               "args": null,
               "storageKey": null
             },
+            (v0/*: any*/),
+            (v1/*: any*/),
+            (v2/*: any*/),
             {
               "kind": "LinkedField",
               "alias": null,
@@ -154,10 +145,12 @@ return {
               "concreteType": "Profile",
               "plural": false,
               "selections": [
+                (v2/*: any*/),
+                (v0/*: any*/),
                 (v1/*: any*/),
                 {
                   "kind": "ScalarField",
-                  "alias": "is_followed",
+                  "alias": null,
                   "name": "isFollowed",
                   "args": null,
                   "storageKey": null
@@ -171,18 +164,6 @@ return {
     {
       "kind": "LinkedField",
       "alias": null,
-      "name": "fair",
-      "storageKey": null,
-      "args": null,
-      "concreteType": "Fair",
-      "plural": false,
-      "selections": [
-        (v2/*: any*/)
-      ]
-    },
-    {
-      "kind": "LinkedField",
-      "alias": "cover_image",
       "name": "coverImage",
       "storageKey": null,
       "args": null,
@@ -263,5 +244,5 @@ return {
   ]
 };
 })();
-(node as any).hash = 'e7b099c3d4951e2459d0b8527811ce38';
+(node as any).hash = '046ef34f7f4e477a2de6b5c29b37e648';
 export default node;
diff --git a/src/__generated__/FairBoothQuery.graphql.ts b/src/__generated__/FairBoothQuery.graphql.ts
index a72e3a424..b33006326 100644
--- a/src/__generated__/FairBoothQuery.graphql.ts
+++ b/src/__generated__/FairBoothQuery.graphql.ts
@@ -33,8 +33,6 @@ fragment FairBooth_show on Show {
   ...FairBoothHeader_show
   ...ShowArtworksPreview_show
   ...ShowArtistsPreview_show
-  ...ShowArtists_show
-  ...ShowArtworks_show
 }
 
 fragment FairBoothHeader_show on Show {
@@ -108,93 +106,40 @@ fragment ShowArtistsPreview_show on Show {
   }
 }
 
-fragment ShowArtists_show on Show {
+fragment ArtistListItem_artist on Artist {
+  id
   internalID
   slug
-  artists_grouped_by_name: artistsGroupedByName {
-    letter
-    items {
-      ...ArtistListItem_artist
-      sortable_id: sortableID
-      href
-      id
-    }
+  name
+  initials
+  href
+  is_followed: isFollowed
+  nationality
+  birthday
+  deathday
+  image {
+    url
   }
 }
 
-fragment ShowArtworks_show on Show {
-  id
-  slug
-  internalID
-  ...FilteredInfiniteScrollGrid_entity
-}
-
-fragment FilteredInfiniteScrollGrid_entity on EntityWithFilterArtworksConnectionInterface {
+fragment GenericGrid_artworks on Artwork {
   id
-  filterArtworksConnection(first: 10, medium: "*", priceRange: "*-*", aggregations: [MEDIUM, PRICE_RANGE, TOTAL]) {
-    edges {
-      node {
-        id
-        slug
-        __typename
-      }
-      cursor
-    }
-    ...Filters_filteredArtworks
-    ...InfiniteScrollArtworksGrid_connection
-    pageInfo {
-      endCursor
-      hasNextPage
-    }
-    id
-  }
-}
-
-fragment Filters_filteredArtworks on FilterArtworksConnection {
-  aggregations {
-    slice
-    counts {
-      name
-      value
-    }
-  }
-}
-
-fragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {
-  pageInfo {
-    hasNextPage
-    startCursor
-    endCursor
-  }
-  edges {
-    __typename
-    node {
-      slug
-      id
-      image {
-        aspectRatio
-      }
-      ...ArtworkGridItem_artwork
-    }
-    ... on Node {
-      id
-    }
+  image {
+    aspect_ratio: aspectRatio
   }
+  ...ArtworkGridItem_artwork
 }
 
 fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -219,31 +164,6 @@ fragment ArtworkGridItem_artwork on Artwork {
   }
   href
 }
-
-fragment ArtistListItem_artist on Artist {
-  id
-  internalID
-  slug
-  name
-  initials
-  href
-  is_followed: isFollowed
-  nationality
-  birthday
-  deathday
-  image {
-    url
-  }
-}
-
-fragment GenericGrid_artworks on Artwork {
-  id
-  slug
-  image {
-    aspect_ratio: aspectRatio
-  }
-  ...ArtworkGridItem_artwork
-}
 */
 
 const node: ConcreteRequest = (function(){
@@ -295,282 +215,78 @@ v6 = [
   (v5/*: any*/)
 ],
 v7 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "__typename",
-  "args": null,
-  "storageKey": null
-},
-v8 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "href",
   "args": null,
   "storageKey": null
 },
-v9 = {
+v8 = {
   "kind": "ScalarField",
   "alias": "is_followed",
   "name": "isFollowed",
   "args": null,
   "storageKey": null
 },
-v10 = {
+v9 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "display",
   "args": null,
   "storageKey": null
 },
-v11 = {
-  "kind": "ScalarField",
-  "alias": "aspect_ratio",
-  "name": "aspectRatio",
-  "args": null,
-  "storageKey": null
-},
-v12 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "url",
-  "args": [
-    {
-      "kind": "Literal",
-      "name": "version",
-      "value": "large"
-    }
-  ],
-  "storageKey": "url(version:\"large\")"
-},
-v13 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "title",
-  "args": null,
-  "storageKey": null
-},
-v14 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "date",
-  "args": null,
-  "storageKey": null
-},
-v15 = {
-  "kind": "ScalarField",
-  "alias": "sale_message",
-  "name": "saleMessage",
-  "args": null,
-  "storageKey": null
-},
-v16 = {
-  "kind": "ScalarField",
-  "alias": "is_in_auction",
-  "name": "isInAuction",
-  "args": null,
-  "storageKey": null
-},
-v17 = {
-  "kind": "ScalarField",
-  "alias": "is_biddable",
-  "name": "isBiddable",
-  "args": null,
-  "storageKey": null
-},
-v18 = {
-  "kind": "ScalarField",
-  "alias": "is_acquireable",
-  "name": "isAcquireable",
-  "args": null,
-  "storageKey": null
-},
-v19 = {
-  "kind": "ScalarField",
-  "alias": "is_offerable",
-  "name": "isOfferable",
-  "args": null,
-  "storageKey": null
-},
-v20 = {
-  "kind": "LinkedField",
-  "alias": null,
-  "name": "sale",
-  "storageKey": null,
-  "args": null,
-  "concreteType": "Sale",
-  "plural": false,
-  "selections": [
-    {
-      "kind": "ScalarField",
-      "alias": "is_auction",
-      "name": "isAuction",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "is_live_open",
-      "name": "isLiveOpen",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "is_open",
-      "name": "isOpen",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "is_closed",
-      "name": "isClosed",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "display_timely_at",
-      "name": "displayTimelyAt",
-      "args": null,
-      "storageKey": null
-    },
-    (v5/*: any*/)
-  ]
-},
-v21 = {
-  "kind": "LinkedField",
-  "alias": "sale_artwork",
-  "name": "saleArtwork",
-  "storageKey": null,
-  "args": null,
-  "concreteType": "SaleArtwork",
-  "plural": false,
-  "selections": [
-    {
-      "kind": "LinkedField",
-      "alias": "current_bid",
-      "name": "currentBid",
-      "storageKey": null,
-      "args": null,
-      "concreteType": "SaleArtworkCurrentBid",
-      "plural": false,
-      "selections": [
-        (v10/*: any*/)
-      ]
-    },
-    (v5/*: any*/)
-  ]
-},
-v22 = {
-  "kind": "LinkedField",
-  "alias": null,
-  "name": "artists",
-  "storageKey": "artists(shallow:true)",
-  "args": [
-    {
-      "kind": "Literal",
-      "name": "shallow",
-      "value": true
-    }
-  ],
-  "concreteType": "Artist",
-  "plural": true,
-  "selections": (v6/*: any*/)
-},
-v23 = {
-  "kind": "LinkedField",
-  "alias": null,
-  "name": "partner",
-  "storageKey": null,
-  "args": null,
-  "concreteType": "Partner",
-  "plural": false,
-  "selections": (v6/*: any*/)
-},
-v24 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "initials",
-  "args": null,
-  "storageKey": null
-},
-v25 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "nationality",
-  "args": null,
-  "storageKey": null
-},
-v26 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "birthday",
-  "args": null,
-  "storageKey": null
-},
-v27 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "deathday",
-  "args": null,
-  "storageKey": null
-},
-v28 = {
-  "kind": "LinkedField",
-  "alias": null,
-  "name": "image",
-  "storageKey": null,
-  "args": null,
-  "concreteType": "Image",
-  "plural": false,
-  "selections": [
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "url",
-      "args": null,
-      "storageKey": null
-    }
-  ]
-},
-v29 = [
+v10 = [
   (v5/*: any*/),
   (v3/*: any*/),
   (v2/*: any*/),
-  (v8/*: any*/),
+  (v7/*: any*/),
   (v4/*: any*/),
-  (v24/*: any*/),
-  (v9/*: any*/),
-  (v25/*: any*/),
-  (v26/*: any*/),
-  (v27/*: any*/),
-  (v28/*: any*/)
-],
-v30 = [
   {
-    "kind": "Literal",
-    "name": "aggregations",
-    "value": [
-      "MEDIUM",
-      "PRICE_RANGE",
-      "TOTAL"
-    ]
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "initials",
+    "args": null,
+    "storageKey": null
+  },
+  (v8/*: any*/),
+  {
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "nationality",
+    "args": null,
+    "storageKey": null
   },
   {
-    "kind": "Literal",
-    "name": "first",
-    "value": 10
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "birthday",
+    "args": null,
+    "storageKey": null
   },
   {
-    "kind": "Literal",
-    "name": "medium",
-    "value": "*"
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "deathday",
+    "args": null,
+    "storageKey": null
   },
   {
-    "kind": "Literal",
-    "name": "priceRange",
-    "value": "*-*"
+    "kind": "LinkedField",
+    "alias": null,
+    "name": "image",
+    "storageKey": null,
+    "args": null,
+    "concreteType": "Image",
+    "plural": false,
+    "selections": [
+      {
+        "kind": "ScalarField",
+        "alias": null,
+        "name": "url",
+        "args": null,
+        "storageKey": null
+      }
+    ]
   }
 ];
 return {
@@ -635,7 +351,13 @@ return {
             "concreteType": null,
             "plural": false,
             "selections": [
-              (v7/*: any*/),
+              {
+                "kind": "ScalarField",
+                "alias": null,
+                "name": "__typename",
+                "args": null,
+                "storageKey": null
+              },
               (v5/*: any*/),
               {
                 "kind": "InlineFragment",
@@ -644,7 +366,7 @@ return {
                   (v4/*: any*/),
                   (v2/*: any*/),
                   (v3/*: any*/),
-                  (v8/*: any*/),
+                  (v7/*: any*/),
                   {
                     "kind": "LinkedField",
                     "alias": null,
@@ -656,7 +378,7 @@ return {
                     "selections": [
                       (v3/*: any*/),
                       (v2/*: any*/),
-                      (v9/*: any*/),
+                      (v8/*: any*/),
                       (v5/*: any*/)
                     ]
                   }
@@ -698,7 +420,7 @@ return {
             "concreteType": "Location",
             "plural": false,
             "selections": [
-              (v10/*: any*/),
+              (v9/*: any*/),
               (v5/*: any*/)
             ]
           },
@@ -737,7 +459,6 @@ return {
                     "plural": false,
                     "selections": [
                       (v5/*: any*/),
-                      (v2/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -747,253 +468,180 @@ return {
                         "concreteType": "Image",
                         "plural": false,
                         "selections": [
-                          (v11/*: any*/),
-                          (v12/*: any*/)
+                          {
+                            "kind": "ScalarField",
+                            "alias": "aspect_ratio",
+                            "name": "aspectRatio",
+                            "args": null,
+                            "storageKey": null
+                          },
+                          {
+                            "kind": "ScalarField",
+                            "alias": null,
+                            "name": "url",
+                            "args": [
+                              {
+                                "kind": "Literal",
+                                "name": "version",
+                                "value": "large"
+                              }
+                            ],
+                            "storageKey": "url(version:\"large\")"
+                          }
                         ]
                       },
-                      (v13/*: any*/),
-                      (v14/*: any*/),
-                      (v15/*: any*/),
-                      (v16/*: any*/),
-                      (v17/*: any*/),
-                      (v18/*: any*/),
-                      (v19/*: any*/),
-                      (v20/*: any*/),
-                      (v21/*: any*/),
-                      (v22/*: any*/),
-                      (v23/*: any*/),
-                      (v8/*: any*/)
-                    ]
-                  }
-                ]
-              }
-            ]
-          },
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "artists",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "Artist",
-            "plural": true,
-            "selections": (v29/*: any*/)
-          },
-          {
-            "kind": "LinkedField",
-            "alias": "artists_without_artworks",
-            "name": "artistsWithoutArtworks",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "Artist",
-            "plural": true,
-            "selections": (v29/*: any*/)
-          },
-          {
-            "kind": "LinkedField",
-            "alias": "artists_grouped_by_name",
-            "name": "artistsGroupedByName",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "ArtistGroup",
-            "plural": true,
-            "selections": [
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "letter",
-                "args": null,
-                "storageKey": null
-              },
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "items",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "Artist",
-                "plural": true,
-                "selections": [
-                  (v5/*: any*/),
-                  (v3/*: any*/),
-                  (v2/*: any*/),
-                  (v4/*: any*/),
-                  (v24/*: any*/),
-                  (v8/*: any*/),
-                  (v9/*: any*/),
-                  (v25/*: any*/),
-                  (v26/*: any*/),
-                  (v27/*: any*/),
-                  (v28/*: any*/),
-                  {
-                    "kind": "ScalarField",
-                    "alias": "sortable_id",
-                    "name": "sortableID",
-                    "args": null,
-                    "storageKey": null
-                  }
-                ]
-              }
-            ]
-          },
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "filterArtworksConnection",
-            "storageKey": "filterArtworksConnection(aggregations:[\"MEDIUM\",\"PRICE_RANGE\",\"TOTAL\"],first:10,medium:\"*\",priceRange:\"*-*\")",
-            "args": (v30/*: any*/),
-            "concreteType": "FilterArtworksConnection",
-            "plural": false,
-            "selections": [
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "edges",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "FilterArtworksEdge",
-                "plural": true,
-                "selections": [
-                  {
-                    "kind": "LinkedField",
-                    "alias": null,
-                    "name": "node",
-                    "storageKey": null,
-                    "args": null,
-                    "concreteType": "Artwork",
-                    "plural": false,
-                    "selections": [
-                      (v5/*: any*/),
+                      {
+                        "kind": "ScalarField",
+                        "alias": null,
+                        "name": "title",
+                        "args": null,
+                        "storageKey": null
+                      },
+                      {
+                        "kind": "ScalarField",
+                        "alias": null,
+                        "name": "date",
+                        "args": null,
+                        "storageKey": null
+                      },
+                      {
+                        "kind": "ScalarField",
+                        "alias": "sale_message",
+                        "name": "saleMessage",
+                        "args": null,
+                        "storageKey": null
+                      },
+                      {
+                        "kind": "ScalarField",
+                        "alias": "is_biddable",
+                        "name": "isBiddable",
+                        "args": null,
+                        "storageKey": null
+                      },
+                      {
+                        "kind": "ScalarField",
+                        "alias": "is_acquireable",
+                        "name": "isAcquireable",
+                        "args": null,
+                        "storageKey": null
+                      },
+                      {
+                        "kind": "ScalarField",
+                        "alias": "is_offerable",
+                        "name": "isOfferable",
+                        "args": null,
+                        "storageKey": null
+                      },
                       (v2/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
-                        "name": "image",
+                        "name": "sale",
                         "storageKey": null,
                         "args": null,
-                        "concreteType": "Image",
+                        "concreteType": "Sale",
                         "plural": false,
                         "selections": [
                           {
                             "kind": "ScalarField",
-                            "alias": null,
-                            "name": "aspectRatio",
+                            "alias": "is_auction",
+                            "name": "isAuction",
+                            "args": null,
+                            "storageKey": null
+                          },
+                          {
+                            "kind": "ScalarField",
+                            "alias": "is_closed",
+                            "name": "isClosed",
+                            "args": null,
+                            "storageKey": null
+                          },
+                          {
+                            "kind": "ScalarField",
+                            "alias": "display_timely_at",
+                            "name": "displayTimelyAt",
                             "args": null,
                             "storageKey": null
                           },
-                          (v12/*: any*/),
-                          (v11/*: any*/)
+                          (v5/*: any*/)
                         ]
                       },
-                      (v13/*: any*/),
-                      (v14/*: any*/),
-                      (v15/*: any*/),
-                      (v16/*: any*/),
-                      (v17/*: any*/),
-                      (v18/*: any*/),
-                      (v19/*: any*/),
-                      (v20/*: any*/),
-                      (v21/*: any*/),
-                      (v22/*: any*/),
-                      (v23/*: any*/),
-                      (v8/*: any*/),
-                      (v7/*: any*/)
-                    ]
-                  },
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "cursor",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  (v5/*: any*/)
-                ]
-              },
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "aggregations",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "ArtworksAggregationResults",
-                "plural": true,
-                "selections": [
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "slice",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  {
-                    "kind": "LinkedField",
-                    "alias": null,
-                    "name": "counts",
-                    "storageKey": null,
-                    "args": null,
-                    "concreteType": "AggregationCount",
-                    "plural": true,
-                    "selections": [
-                      (v4/*: any*/),
                       {
-                        "kind": "ScalarField",
+                        "kind": "LinkedField",
+                        "alias": "sale_artwork",
+                        "name": "saleArtwork",
+                        "storageKey": null,
+                        "args": null,
+                        "concreteType": "SaleArtwork",
+                        "plural": false,
+                        "selections": [
+                          {
+                            "kind": "LinkedField",
+                            "alias": "current_bid",
+                            "name": "currentBid",
+                            "storageKey": null,
+                            "args": null,
+                            "concreteType": "SaleArtworkCurrentBid",
+                            "plural": false,
+                            "selections": [
+                              (v9/*: any*/)
+                            ]
+                          },
+                          (v5/*: any*/)
+                        ]
+                      },
+                      {
+                        "kind": "LinkedField",
+                        "alias": null,
+                        "name": "artists",
+                        "storageKey": "artists(shallow:true)",
+                        "args": [
+                          {
+                            "kind": "Literal",
+                            "name": "shallow",
+                            "value": true
+                          }
+                        ],
+                        "concreteType": "Artist",
+                        "plural": true,
+                        "selections": (v6/*: any*/)
+                      },
+                      {
+                        "kind": "LinkedField",
                         "alias": null,
-                        "name": "value",
+                        "name": "partner",
+                        "storageKey": null,
                         "args": null,
-                        "storageKey": null
-                      }
+                        "concreteType": "Partner",
+                        "plural": false,
+                        "selections": (v6/*: any*/)
+                      },
+                      (v7/*: any*/)
                     ]
                   }
                 ]
-              },
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "pageInfo",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "PageInfo",
-                "plural": false,
-                "selections": [
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "hasNextPage",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "startCursor",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "endCursor",
-                    "args": null,
-                    "storageKey": null
-                  }
-                ]
-              },
-              (v5/*: any*/)
+              }
             ]
           },
           {
-            "kind": "LinkedHandle",
+            "kind": "LinkedField",
             "alias": null,
-            "name": "filterArtworksConnection",
-            "args": (v30/*: any*/),
-            "handle": "connection",
-            "key": "FilteredInfiniteScrollGridContainer_filterArtworksConnection",
-            "filters": [
-              "medium",
-              "priceRange",
-              "aggregations"
-            ]
+            "name": "artists",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Artist",
+            "plural": true,
+            "selections": (v10/*: any*/)
+          },
+          {
+            "kind": "LinkedField",
+            "alias": "artists_without_artworks",
+            "name": "artistsWithoutArtworks",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Artist",
+            "plural": true,
+            "selections": (v10/*: any*/)
           }
         ]
       }
@@ -1002,7 +650,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FairBoothQuery",
-    "id": "4a00086070d2a5b0c65171edd6bc3626",
+    "id": "2cb6bff2ecba2bf7034929f24b832bbe",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FairBoothTestsQuery.graphql.ts b/src/__generated__/FairBoothTestsQuery.graphql.ts
index 1cd10c49d..8addcd660 100644
--- a/src/__generated__/FairBoothTestsQuery.graphql.ts
+++ b/src/__generated__/FairBoothTestsQuery.graphql.ts
@@ -29,8 +29,6 @@ fragment FairBooth_show on Show {
   ...FairBoothHeader_show
   ...ShowArtworksPreview_show
   ...ShowArtistsPreview_show
-  ...ShowArtists_show
-  ...ShowArtworks_show
 }
 
 fragment FairBoothHeader_show on Show {
@@ -104,93 +102,40 @@ fragment ShowArtistsPreview_show on Show {
   }
 }
 
-fragment ShowArtists_show on Show {
+fragment ArtistListItem_artist on Artist {
+  id
   internalID
   slug
-  artists_grouped_by_name: artistsGroupedByName {
-    letter
-    items {
-      ...ArtistListItem_artist
-      sortable_id: sortableID
-      href
-      id
-    }
+  name
+  initials
+  href
+  is_followed: isFollowed
+  nationality
+  birthday
+  deathday
+  image {
+    url
   }
 }
 
-fragment ShowArtworks_show on Show {
-  id
-  slug
-  internalID
-  ...FilteredInfiniteScrollGrid_entity
-}
-
-fragment FilteredInfiniteScrollGrid_entity on EntityWithFilterArtworksConnectionInterface {
+fragment GenericGrid_artworks on Artwork {
   id
-  filterArtworksConnection(first: 10, medium: "*", priceRange: "*-*", aggregations: [MEDIUM, PRICE_RANGE, TOTAL]) {
-    edges {
-      node {
-        id
-        slug
-        __typename
-      }
-      cursor
-    }
-    ...Filters_filteredArtworks
-    ...InfiniteScrollArtworksGrid_connection
-    pageInfo {
-      endCursor
-      hasNextPage
-    }
-    id
-  }
-}
-
-fragment Filters_filteredArtworks on FilterArtworksConnection {
-  aggregations {
-    slice
-    counts {
-      name
-      value
-    }
-  }
-}
-
-fragment InfiniteScrollArtworksGrid_connection on ArtworkConnectionInterface {
-  pageInfo {
-    hasNextPage
-    startCursor
-    endCursor
-  }
-  edges {
-    __typename
-    node {
-      slug
-      id
-      image {
-        aspectRatio
-      }
-      ...ArtworkGridItem_artwork
-    }
-    ... on Node {
-      id
-    }
+  image {
+    aspect_ratio: aspectRatio
   }
+  ...ArtworkGridItem_artwork
 }
 
 fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -215,31 +160,6 @@ fragment ArtworkGridItem_artwork on Artwork {
   }
   href
 }
-
-fragment ArtistListItem_artist on Artist {
-  id
-  internalID
-  slug
-  name
-  initials
-  href
-  is_followed: isFollowed
-  nationality
-  birthday
-  deathday
-  image {
-    url
-  }
-}
-
-fragment GenericGrid_artworks on Artwork {
-  id
-  slug
-  image {
-    aspect_ratio: aspectRatio
-  }
-  ...ArtworkGridItem_artwork
-}
 */
 
 const node: ConcreteRequest = (function(){
@@ -283,282 +203,78 @@ v5 = [
   (v4/*: any*/)
 ],
 v6 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "__typename",
-  "args": null,
-  "storageKey": null
-},
-v7 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "href",
   "args": null,
   "storageKey": null
 },
-v8 = {
+v7 = {
   "kind": "ScalarField",
   "alias": "is_followed",
   "name": "isFollowed",
   "args": null,
   "storageKey": null
 },
-v9 = {
+v8 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "display",
   "args": null,
   "storageKey": null
 },
-v10 = {
-  "kind": "ScalarField",
-  "alias": "aspect_ratio",
-  "name": "aspectRatio",
-  "args": null,
-  "storageKey": null
-},
-v11 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "url",
-  "args": [
-    {
-      "kind": "Literal",
-      "name": "version",
-      "value": "large"
-    }
-  ],
-  "storageKey": "url(version:\"large\")"
-},
-v12 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "title",
-  "args": null,
-  "storageKey": null
-},
-v13 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "date",
-  "args": null,
-  "storageKey": null
-},
-v14 = {
-  "kind": "ScalarField",
-  "alias": "sale_message",
-  "name": "saleMessage",
-  "args": null,
-  "storageKey": null
-},
-v15 = {
-  "kind": "ScalarField",
-  "alias": "is_in_auction",
-  "name": "isInAuction",
-  "args": null,
-  "storageKey": null
-},
-v16 = {
-  "kind": "ScalarField",
-  "alias": "is_biddable",
-  "name": "isBiddable",
-  "args": null,
-  "storageKey": null
-},
-v17 = {
-  "kind": "ScalarField",
-  "alias": "is_acquireable",
-  "name": "isAcquireable",
-  "args": null,
-  "storageKey": null
-},
-v18 = {
-  "kind": "ScalarField",
-  "alias": "is_offerable",
-  "name": "isOfferable",
-  "args": null,
-  "storageKey": null
-},
-v19 = {
-  "kind": "LinkedField",
-  "alias": null,
-  "name": "sale",
-  "storageKey": null,
-  "args": null,
-  "concreteType": "Sale",
-  "plural": false,
-  "selections": [
-    {
-      "kind": "ScalarField",
-      "alias": "is_auction",
-      "name": "isAuction",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "is_live_open",
-      "name": "isLiveOpen",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "is_open",
-      "name": "isOpen",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "is_closed",
-      "name": "isClosed",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "display_timely_at",
-      "name": "displayTimelyAt",
-      "args": null,
-      "storageKey": null
-    },
-    (v4/*: any*/)
-  ]
-},
-v20 = {
-  "kind": "LinkedField",
-  "alias": "sale_artwork",
-  "name": "saleArtwork",
-  "storageKey": null,
-  "args": null,
-  "concreteType": "SaleArtwork",
-  "plural": false,
-  "selections": [
-    {
-      "kind": "LinkedField",
-      "alias": "current_bid",
-      "name": "currentBid",
-      "storageKey": null,
-      "args": null,
-      "concreteType": "SaleArtworkCurrentBid",
-      "plural": false,
-      "selections": [
-        (v9/*: any*/)
-      ]
-    },
-    (v4/*: any*/)
-  ]
-},
-v21 = {
-  "kind": "LinkedField",
-  "alias": null,
-  "name": "artists",
-  "storageKey": "artists(shallow:true)",
-  "args": [
-    {
-      "kind": "Literal",
-      "name": "shallow",
-      "value": true
-    }
-  ],
-  "concreteType": "Artist",
-  "plural": true,
-  "selections": (v5/*: any*/)
-},
-v22 = {
-  "kind": "LinkedField",
-  "alias": null,
-  "name": "partner",
-  "storageKey": null,
-  "args": null,
-  "concreteType": "Partner",
-  "plural": false,
-  "selections": (v5/*: any*/)
-},
-v23 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "initials",
-  "args": null,
-  "storageKey": null
-},
-v24 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "nationality",
-  "args": null,
-  "storageKey": null
-},
-v25 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "birthday",
-  "args": null,
-  "storageKey": null
-},
-v26 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "deathday",
-  "args": null,
-  "storageKey": null
-},
-v27 = {
-  "kind": "LinkedField",
-  "alias": null,
-  "name": "image",
-  "storageKey": null,
-  "args": null,
-  "concreteType": "Image",
-  "plural": false,
-  "selections": [
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "url",
-      "args": null,
-      "storageKey": null
-    }
-  ]
-},
-v28 = [
+v9 = [
   (v4/*: any*/),
   (v2/*: any*/),
   (v1/*: any*/),
-  (v7/*: any*/),
+  (v6/*: any*/),
   (v3/*: any*/),
-  (v23/*: any*/),
-  (v8/*: any*/),
-  (v24/*: any*/),
-  (v25/*: any*/),
-  (v26/*: any*/),
-  (v27/*: any*/)
-],
-v29 = [
   {
-    "kind": "Literal",
-    "name": "aggregations",
-    "value": [
-      "MEDIUM",
-      "PRICE_RANGE",
-      "TOTAL"
-    ]
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "initials",
+    "args": null,
+    "storageKey": null
   },
+  (v7/*: any*/),
   {
-    "kind": "Literal",
-    "name": "first",
-    "value": 10
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "nationality",
+    "args": null,
+    "storageKey": null
   },
   {
-    "kind": "Literal",
-    "name": "medium",
-    "value": "*"
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "birthday",
+    "args": null,
+    "storageKey": null
   },
   {
-    "kind": "Literal",
-    "name": "priceRange",
-    "value": "*-*"
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "deathday",
+    "args": null,
+    "storageKey": null
+  },
+  {
+    "kind": "LinkedField",
+    "alias": null,
+    "name": "image",
+    "storageKey": null,
+    "args": null,
+    "concreteType": "Image",
+    "plural": false,
+    "selections": [
+      {
+        "kind": "ScalarField",
+        "alias": null,
+        "name": "url",
+        "args": null,
+        "storageKey": null
+      }
+    ]
   }
 ];
 return {
@@ -623,7 +339,13 @@ return {
             "concreteType": null,
             "plural": false,
             "selections": [
-              (v6/*: any*/),
+              {
+                "kind": "ScalarField",
+                "alias": null,
+                "name": "__typename",
+                "args": null,
+                "storageKey": null
+              },
               (v4/*: any*/),
               {
                 "kind": "InlineFragment",
@@ -632,7 +354,7 @@ return {
                   (v3/*: any*/),
                   (v1/*: any*/),
                   (v2/*: any*/),
-                  (v7/*: any*/),
+                  (v6/*: any*/),
                   {
                     "kind": "LinkedField",
                     "alias": null,
@@ -644,7 +366,7 @@ return {
                     "selections": [
                       (v2/*: any*/),
                       (v1/*: any*/),
-                      (v8/*: any*/),
+                      (v7/*: any*/),
                       (v4/*: any*/)
                     ]
                   }
@@ -686,7 +408,7 @@ return {
             "concreteType": "Location",
             "plural": false,
             "selections": [
-              (v9/*: any*/),
+              (v8/*: any*/),
               (v4/*: any*/)
             ]
           },
@@ -725,7 +447,6 @@ return {
                     "plural": false,
                     "selections": [
                       (v4/*: any*/),
-                      (v1/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -735,253 +456,180 @@ return {
                         "concreteType": "Image",
                         "plural": false,
                         "selections": [
-                          (v10/*: any*/),
-                          (v11/*: any*/)
+                          {
+                            "kind": "ScalarField",
+                            "alias": "aspect_ratio",
+                            "name": "aspectRatio",
+                            "args": null,
+                            "storageKey": null
+                          },
+                          {
+                            "kind": "ScalarField",
+                            "alias": null,
+                            "name": "url",
+                            "args": [
+                              {
+                                "kind": "Literal",
+                                "name": "version",
+                                "value": "large"
+                              }
+                            ],
+                            "storageKey": "url(version:\"large\")"
+                          }
                         ]
                       },
-                      (v12/*: any*/),
-                      (v13/*: any*/),
-                      (v14/*: any*/),
-                      (v15/*: any*/),
-                      (v16/*: any*/),
-                      (v17/*: any*/),
-                      (v18/*: any*/),
-                      (v19/*: any*/),
-                      (v20/*: any*/),
-                      (v21/*: any*/),
-                      (v22/*: any*/),
-                      (v7/*: any*/)
-                    ]
-                  }
-                ]
-              }
-            ]
-          },
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "artists",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "Artist",
-            "plural": true,
-            "selections": (v28/*: any*/)
-          },
-          {
-            "kind": "LinkedField",
-            "alias": "artists_without_artworks",
-            "name": "artistsWithoutArtworks",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "Artist",
-            "plural": true,
-            "selections": (v28/*: any*/)
-          },
-          {
-            "kind": "LinkedField",
-            "alias": "artists_grouped_by_name",
-            "name": "artistsGroupedByName",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "ArtistGroup",
-            "plural": true,
-            "selections": [
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "letter",
-                "args": null,
-                "storageKey": null
-              },
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "items",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "Artist",
-                "plural": true,
-                "selections": [
-                  (v4/*: any*/),
-                  (v2/*: any*/),
-                  (v1/*: any*/),
-                  (v3/*: any*/),
-                  (v23/*: any*/),
-                  (v7/*: any*/),
-                  (v8/*: any*/),
-                  (v24/*: any*/),
-                  (v25/*: any*/),
-                  (v26/*: any*/),
-                  (v27/*: any*/),
-                  {
-                    "kind": "ScalarField",
-                    "alias": "sortable_id",
-                    "name": "sortableID",
-                    "args": null,
-                    "storageKey": null
-                  }
-                ]
-              }
-            ]
-          },
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "filterArtworksConnection",
-            "storageKey": "filterArtworksConnection(aggregations:[\"MEDIUM\",\"PRICE_RANGE\",\"TOTAL\"],first:10,medium:\"*\",priceRange:\"*-*\")",
-            "args": (v29/*: any*/),
-            "concreteType": "FilterArtworksConnection",
-            "plural": false,
-            "selections": [
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "edges",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "FilterArtworksEdge",
-                "plural": true,
-                "selections": [
-                  {
-                    "kind": "LinkedField",
-                    "alias": null,
-                    "name": "node",
-                    "storageKey": null,
-                    "args": null,
-                    "concreteType": "Artwork",
-                    "plural": false,
-                    "selections": [
-                      (v4/*: any*/),
+                      {
+                        "kind": "ScalarField",
+                        "alias": null,
+                        "name": "title",
+                        "args": null,
+                        "storageKey": null
+                      },
+                      {
+                        "kind": "ScalarField",
+                        "alias": null,
+                        "name": "date",
+                        "args": null,
+                        "storageKey": null
+                      },
+                      {
+                        "kind": "ScalarField",
+                        "alias": "sale_message",
+                        "name": "saleMessage",
+                        "args": null,
+                        "storageKey": null
+                      },
+                      {
+                        "kind": "ScalarField",
+                        "alias": "is_biddable",
+                        "name": "isBiddable",
+                        "args": null,
+                        "storageKey": null
+                      },
+                      {
+                        "kind": "ScalarField",
+                        "alias": "is_acquireable",
+                        "name": "isAcquireable",
+                        "args": null,
+                        "storageKey": null
+                      },
+                      {
+                        "kind": "ScalarField",
+                        "alias": "is_offerable",
+                        "name": "isOfferable",
+                        "args": null,
+                        "storageKey": null
+                      },
                       (v1/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
-                        "name": "image",
+                        "name": "sale",
                         "storageKey": null,
                         "args": null,
-                        "concreteType": "Image",
+                        "concreteType": "Sale",
                         "plural": false,
                         "selections": [
                           {
                             "kind": "ScalarField",
-                            "alias": null,
-                            "name": "aspectRatio",
+                            "alias": "is_auction",
+                            "name": "isAuction",
                             "args": null,
                             "storageKey": null
                           },
-                          (v11/*: any*/),
-                          (v10/*: any*/)
+                          {
+                            "kind": "ScalarField",
+                            "alias": "is_closed",
+                            "name": "isClosed",
+                            "args": null,
+                            "storageKey": null
+                          },
+                          {
+                            "kind": "ScalarField",
+                            "alias": "display_timely_at",
+                            "name": "displayTimelyAt",
+                            "args": null,
+                            "storageKey": null
+                          },
+                          (v4/*: any*/)
                         ]
                       },
-                      (v12/*: any*/),
-                      (v13/*: any*/),
-                      (v14/*: any*/),
-                      (v15/*: any*/),
-                      (v16/*: any*/),
-                      (v17/*: any*/),
-                      (v18/*: any*/),
-                      (v19/*: any*/),
-                      (v20/*: any*/),
-                      (v21/*: any*/),
-                      (v22/*: any*/),
-                      (v7/*: any*/),
-                      (v6/*: any*/)
-                    ]
-                  },
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "cursor",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  (v4/*: any*/)
-                ]
-              },
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "aggregations",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "ArtworksAggregationResults",
-                "plural": true,
-                "selections": [
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "slice",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  {
-                    "kind": "LinkedField",
-                    "alias": null,
-                    "name": "counts",
-                    "storageKey": null,
-                    "args": null,
-                    "concreteType": "AggregationCount",
-                    "plural": true,
-                    "selections": [
-                      (v3/*: any*/),
                       {
-                        "kind": "ScalarField",
+                        "kind": "LinkedField",
+                        "alias": "sale_artwork",
+                        "name": "saleArtwork",
+                        "storageKey": null,
+                        "args": null,
+                        "concreteType": "SaleArtwork",
+                        "plural": false,
+                        "selections": [
+                          {
+                            "kind": "LinkedField",
+                            "alias": "current_bid",
+                            "name": "currentBid",
+                            "storageKey": null,
+                            "args": null,
+                            "concreteType": "SaleArtworkCurrentBid",
+                            "plural": false,
+                            "selections": [
+                              (v8/*: any*/)
+                            ]
+                          },
+                          (v4/*: any*/)
+                        ]
+                      },
+                      {
+                        "kind": "LinkedField",
+                        "alias": null,
+                        "name": "artists",
+                        "storageKey": "artists(shallow:true)",
+                        "args": [
+                          {
+                            "kind": "Literal",
+                            "name": "shallow",
+                            "value": true
+                          }
+                        ],
+                        "concreteType": "Artist",
+                        "plural": true,
+                        "selections": (v5/*: any*/)
+                      },
+                      {
+                        "kind": "LinkedField",
                         "alias": null,
-                        "name": "value",
+                        "name": "partner",
+                        "storageKey": null,
                         "args": null,
-                        "storageKey": null
-                      }
+                        "concreteType": "Partner",
+                        "plural": false,
+                        "selections": (v5/*: any*/)
+                      },
+                      (v6/*: any*/)
                     ]
                   }
                 ]
-              },
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "pageInfo",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "PageInfo",
-                "plural": false,
-                "selections": [
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "hasNextPage",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "startCursor",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "endCursor",
-                    "args": null,
-                    "storageKey": null
-                  }
-                ]
-              },
-              (v4/*: any*/)
+              }
             ]
           },
           {
-            "kind": "LinkedHandle",
+            "kind": "LinkedField",
             "alias": null,
-            "name": "filterArtworksConnection",
-            "args": (v29/*: any*/),
-            "handle": "connection",
-            "key": "FilteredInfiniteScrollGridContainer_filterArtworksConnection",
-            "filters": [
-              "medium",
-              "priceRange",
-              "aggregations"
-            ]
+            "name": "artists",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Artist",
+            "plural": true,
+            "selections": (v9/*: any*/)
+          },
+          {
+            "kind": "LinkedField",
+            "alias": "artists_without_artworks",
+            "name": "artistsWithoutArtworks",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Artist",
+            "plural": true,
+            "selections": (v9/*: any*/)
           }
         ]
       }
@@ -990,7 +638,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FairBoothTestsQuery",
-    "id": "63bc1d7b9426df9bd7fa4d3e4d7e41f0",
+    "id": "cc929182d54987e7c21da6ac1c0aca11",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FairBooth_show.graphql.ts b/src/__generated__/FairBooth_show.graphql.ts
index 5bad11b61..f95c7a915 100644
--- a/src/__generated__/FairBooth_show.graphql.ts
+++ b/src/__generated__/FairBooth_show.graphql.ts
@@ -3,15 +3,13 @@
 import { ReaderFragment } from "relay-runtime";
 import { FairBoothHeader_show$ref } from "./FairBoothHeader_show.graphql";
 import { ShowArtistsPreview_show$ref } from "./ShowArtistsPreview_show.graphql";
-import { ShowArtists_show$ref } from "./ShowArtists_show.graphql";
 import { ShowArtworksPreview_show$ref } from "./ShowArtworksPreview_show.graphql";
-import { ShowArtworks_show$ref } from "./ShowArtworks_show.graphql";
 declare const _FairBooth_show$ref: unique symbol;
 export type FairBooth_show$ref = typeof _FairBooth_show$ref;
 export type FairBooth_show = {
     readonly slug: string;
     readonly internalID: string;
-    readonly " $fragmentRefs": FairBoothHeader_show$ref & ShowArtworksPreview_show$ref & ShowArtistsPreview_show$ref & ShowArtists_show$ref & ShowArtworks_show$ref;
+    readonly " $fragmentRefs": FairBoothHeader_show$ref & ShowArtworksPreview_show$ref & ShowArtistsPreview_show$ref;
     readonly " $refType": FairBooth_show$ref;
 };
 
@@ -52,18 +50,8 @@ const node: ReaderFragment = {
       "kind": "FragmentSpread",
       "name": "ShowArtistsPreview_show",
       "args": null
-    },
-    {
-      "kind": "FragmentSpread",
-      "name": "ShowArtists_show",
-      "args": null
-    },
-    {
-      "kind": "FragmentSpread",
-      "name": "ShowArtworks_show",
-      "args": null
     }
   ]
 };
-(node as any).hash = '5d6dc4f8d1fa3a1e04440e6676420abd';
+(node as any).hash = '74884b9faeba3e96137a5a96829ee904';
 export default node;
diff --git a/src/__generated__/FairDetailShowsQuery.graphql.ts b/src/__generated__/FairDetailShowsQuery.graphql.ts
index dcc3de060..db02137de 100644
--- a/src/__generated__/FairDetailShowsQuery.graphql.ts
+++ b/src/__generated__/FairDetailShowsQuery.graphql.ts
@@ -50,15 +50,13 @@ fragment FairDetail_fair_1G22uz on Fair {
     website
     id
   }
-  about
-  ticketsLink
   profile {
     name
     id
   }
   sponsoredContent {
-    activationText
     pressReleaseUrl
+    activationText
   }
   shows: showsConnection(first: $count, after: $cursor) {
     pageInfo {
@@ -69,8 +67,6 @@ fragment FairDetail_fair_1G22uz on Fair {
     edges {
       cursor
       node {
-        slug
-        internalID
         artworks: artworksConnection(first: 4) {
           edges {
             node {
@@ -89,14 +85,18 @@ fragment FairDetail_fair_1G22uz on Fair {
 
 fragment FairHeader_fair on Fair {
   slug
-  internalID
   name
   formattedOpeningHours
+  startAt
+  endAt
+  exhibitionPeriod
   counts {
     artists
-    partners
   }
-  followed_content: followedContent {
+  image {
+    url
+  }
+  followedContent {
     artists {
       name
       href
@@ -104,38 +104,8 @@ fragment FairHeader_fair on Fair {
       internalID
       id
     }
-    galleries {
-      internalID
-      name
-      id
-    }
   }
-  partner_names: showsConnection(first: 2) {
-    edges {
-      node {
-        slug
-        partner {
-          __typename
-          ... on Partner {
-            profile {
-              name
-              slug
-              internalID
-              id
-            }
-          }
-          ... on Node {
-            id
-          }
-          ... on ExternalPartner {
-            id
-          }
-        }
-        id
-      }
-    }
-  }
-  artists_names: artistsConnection(first: 3) {
+  artistsConnection(first: 3) {
     edges {
       node {
         name
@@ -146,27 +116,12 @@ fragment FairHeader_fair on Fair {
       }
     }
   }
-  image {
-    image_url: imageURL
-    aspect_ratio: aspectRatio
-    url
-  }
   profile {
+    id
     icon {
-      internalID
-      href
-      height
-      width
       url(version: "square140")
     }
-    id
-    slug
-    name
-    is_followed: isFollowed
   }
-  start_at: startAt
-  end_at: endAt
-  exhibition_period: exhibitionPeriod
 }
 
 fragment LocationMap_location on Location {
@@ -203,8 +158,6 @@ fragment LocationMap_location on Location {
 fragment FairBoothPreview_show on Show {
   slug
   internalID
-  name
-  is_fair_booth: isFairBooth
   counts {
     artworks
   }
@@ -217,9 +170,10 @@ fragment FairBoothPreview_show on Show {
       internalID
       id
       profile {
-        internalID
-        is_followed: isFollowed
         id
+        slug
+        internalID
+        isFollowed
       }
     }
     ... on Node {
@@ -229,11 +183,7 @@ fragment FairBoothPreview_show on Show {
       id
     }
   }
-  fair {
-    name
-    id
-  }
-  cover_image: coverImage {
+  coverImage {
     url
   }
   location {
@@ -252,7 +202,6 @@ fragment FairBoothPreview_show on Show {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -263,15 +212,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -334,19 +280,21 @@ v2 = {
   "storageKey": null
 },
 v3 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "internalID",
-  "args": null,
-  "storageKey": null
-},
-v4 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "name",
   "args": null,
   "storageKey": null
 },
+v4 = [
+  {
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "url",
+    "args": null,
+    "storageKey": null
+  }
+],
 v5 = {
   "kind": "ScalarField",
   "alias": null,
@@ -357,53 +305,39 @@ v5 = {
 v6 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "id",
+  "name": "internalID",
   "args": null,
   "storageKey": null
 },
-v7 = [
-  (v4/*: any*/),
-  (v5/*: any*/),
-  (v2/*: any*/),
-  (v3/*: any*/),
-  (v6/*: any*/)
-],
-v8 = {
+v7 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "__typename",
+  "name": "id",
   "args": null,
   "storageKey": null
 },
+v8 = [
+  (v3/*: any*/),
+  (v5/*: any*/),
+  (v2/*: any*/),
+  (v6/*: any*/),
+  (v7/*: any*/)
+],
 v9 = {
-  "kind": "ScalarField",
-  "alias": "aspect_ratio",
-  "name": "aspectRatio",
-  "args": null,
-  "storageKey": null
-},
-v10 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "url",
-  "args": null,
-  "storageKey": null
-},
-v11 = {
-  "kind": "ScalarField",
-  "alias": "is_followed",
-  "name": "isFollowed",
+  "name": "hours",
   "args": null,
   "storageKey": null
 },
-v12 = {
+v10 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "hours",
+  "name": "__typename",
   "args": null,
   "storageKey": null
 },
-v13 = [
+v11 = [
   {
     "kind": "Variable",
     "name": "after",
@@ -415,16 +349,16 @@ v13 = [
     "variableName": "count"
   }
 ],
-v14 = {
+v12 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "display",
   "args": null,
   "storageKey": null
 },
-v15 = [
-  (v4/*: any*/),
-  (v6/*: any*/)
+v13 = [
+  (v3/*: any*/),
+  (v7/*: any*/)
 ];
 return {
   "kind": "Request",
@@ -480,7 +414,6 @@ return {
         "selections": [
           (v2/*: any*/),
           (v3/*: any*/),
-          (v4/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -488,6 +421,27 @@ return {
             "args": null,
             "storageKey": null
           },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "startAt",
+            "args": null,
+            "storageKey": null
+          },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "endAt",
+            "args": null,
+            "storageKey": null
+          },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "exhibitionPeriod",
+            "args": null,
+            "storageKey": null
+          },
           {
             "kind": "LinkedField",
             "alias": null,
@@ -503,19 +457,22 @@ return {
                 "name": "artists",
                 "args": null,
                 "storageKey": null
-              },
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "partners",
-                "args": null,
-                "storageKey": null
               }
             ]
           },
           {
             "kind": "LinkedField",
-            "alias": "followed_content",
+            "alias": null,
+            "name": "image",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Image",
+            "plural": false,
+            "selections": (v4/*: any*/)
+          },
+          {
+            "kind": "LinkedField",
+            "alias": null,
             "name": "followedContent",
             "storageKey": null,
             "args": null,
@@ -530,102 +487,13 @@ return {
                 "args": null,
                 "concreteType": "Artist",
                 "plural": true,
-                "selections": (v7/*: any*/)
-              },
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "galleries",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "Partner",
-                "plural": true,
-                "selections": [
-                  (v3/*: any*/),
-                  (v4/*: any*/),
-                  (v6/*: any*/)
-                ]
+                "selections": (v8/*: any*/)
               }
             ]
           },
           {
             "kind": "LinkedField",
-            "alias": "partner_names",
-            "name": "showsConnection",
-            "storageKey": "showsConnection(first:2)",
-            "args": [
-              {
-                "kind": "Literal",
-                "name": "first",
-                "value": 2
-              }
-            ],
-            "concreteType": "ShowConnection",
-            "plural": false,
-            "selections": [
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "edges",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "ShowEdge",
-                "plural": true,
-                "selections": [
-                  {
-                    "kind": "LinkedField",
-                    "alias": null,
-                    "name": "node",
-                    "storageKey": null,
-                    "args": null,
-                    "concreteType": "Show",
-                    "plural": false,
-                    "selections": [
-                      (v2/*: any*/),
-                      {
-                        "kind": "LinkedField",
-                        "alias": null,
-                        "name": "partner",
-                        "storageKey": null,
-                        "args": null,
-                        "concreteType": null,
-                        "plural": false,
-                        "selections": [
-                          (v8/*: any*/),
-                          (v6/*: any*/),
-                          {
-                            "kind": "InlineFragment",
-                            "type": "Partner",
-                            "selections": [
-                              {
-                                "kind": "LinkedField",
-                                "alias": null,
-                                "name": "profile",
-                                "storageKey": null,
-                                "args": null,
-                                "concreteType": "Profile",
-                                "plural": false,
-                                "selections": [
-                                  (v4/*: any*/),
-                                  (v2/*: any*/),
-                                  (v3/*: any*/),
-                                  (v6/*: any*/)
-                                ]
-                              }
-                            ]
-                          }
-                        ]
-                      },
-                      (v6/*: any*/)
-                    ]
-                  }
-                ]
-              }
-            ]
-          },
-          {
-            "kind": "LinkedField",
-            "alias": "artists_names",
+            "alias": null,
             "name": "artistsConnection",
             "storageKey": "artistsConnection(first:3)",
             "args": [
@@ -655,32 +523,12 @@ return {
                     "args": null,
                     "concreteType": "Artist",
                     "plural": false,
-                    "selections": (v7/*: any*/)
+                    "selections": (v8/*: any*/)
                   }
                 ]
               }
             ]
           },
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "image",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "Image",
-            "plural": false,
-            "selections": [
-              {
-                "kind": "ScalarField",
-                "alias": "image_url",
-                "name": "imageURL",
-                "args": null,
-                "storageKey": null
-              },
-              (v9/*: any*/),
-              (v10/*: any*/)
-            ]
-          },
           {
             "kind": "LinkedField",
             "alias": null,
@@ -690,6 +538,7 @@ return {
             "concreteType": "Profile",
             "plural": false,
             "selections": [
+              (v7/*: any*/),
               {
                 "kind": "LinkedField",
                 "alias": null,
@@ -699,22 +548,6 @@ return {
                 "concreteType": "Image",
                 "plural": false,
                 "selections": [
-                  (v3/*: any*/),
-                  (v5/*: any*/),
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "height",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "width",
-                    "args": null,
-                    "storageKey": null
-                  },
                   {
                     "kind": "ScalarField",
                     "alias": null,
@@ -730,34 +563,11 @@ return {
                   }
                 ]
               },
-              (v6/*: any*/),
-              (v2/*: any*/),
-              (v4/*: any*/),
-              (v11/*: any*/)
+              (v3/*: any*/)
             ]
           },
-          {
-            "kind": "ScalarField",
-            "alias": "start_at",
-            "name": "startAt",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": "end_at",
-            "name": "endAt",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": "exhibition_period",
-            "name": "exhibitionPeriod",
-            "args": null,
-            "storageKey": null
-          },
-          (v12/*: any*/),
+          (v6/*: any*/),
+          (v9/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -774,8 +584,8 @@ return {
             "concreteType": "Location",
             "plural": false,
             "selections": [
+              (v7/*: any*/),
               (v6/*: any*/),
-              (v3/*: any*/),
               {
                 "kind": "ScalarField",
                 "alias": null,
@@ -877,7 +687,7 @@ return {
                 "concreteType": null,
                 "plural": false,
                 "selections": [
-                  (v8/*: any*/),
+                  (v10/*: any*/),
                   {
                     "kind": "InlineFragment",
                     "type": "OpeningHoursArray",
@@ -898,7 +708,7 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          (v12/*: any*/)
+                          (v9/*: any*/)
                         ]
                       }
                     ]
@@ -936,23 +746,9 @@ return {
                 "args": null,
                 "storageKey": null
               },
-              (v6/*: any*/)
+              (v7/*: any*/)
             ]
           },
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "about",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "ticketsLink",
-            "args": null,
-            "storageKey": null
-          },
           {
             "kind": "LinkedField",
             "alias": null,
@@ -965,14 +761,14 @@ return {
               {
                 "kind": "ScalarField",
                 "alias": null,
-                "name": "activationText",
+                "name": "pressReleaseUrl",
                 "args": null,
                 "storageKey": null
               },
               {
                 "kind": "ScalarField",
                 "alias": null,
-                "name": "pressReleaseUrl",
+                "name": "activationText",
                 "args": null,
                 "storageKey": null
               }
@@ -983,7 +779,7 @@ return {
             "alias": "shows",
             "name": "showsConnection",
             "storageKey": null,
-            "args": (v13/*: any*/),
+            "args": (v11/*: any*/),
             "concreteType": "ShowConnection",
             "plural": false,
             "selections": [
@@ -1044,8 +840,6 @@ return {
                     "concreteType": "Show",
                     "plural": false,
                     "selections": [
-                      (v2/*: any*/),
-                      (v3/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": "artworks",
@@ -1080,7 +874,7 @@ return {
                                 "plural": false,
                                 "selections": [
                                   (v2/*: any*/),
-                                  (v6/*: any*/),
+                                  (v7/*: any*/),
                                   {
                                     "kind": "LinkedField",
                                     "alias": null,
@@ -1090,7 +884,13 @@ return {
                                     "concreteType": "Image",
                                     "plural": false,
                                     "selections": [
-                                      (v9/*: any*/),
+                                      {
+                                        "kind": "ScalarField",
+                                        "alias": "aspect_ratio",
+                                        "name": "aspectRatio",
+                                        "args": null,
+                                        "storageKey": null
+                                      },
                                       {
                                         "kind": "ScalarField",
                                         "alias": null,
@@ -1127,13 +927,6 @@ return {
                                     "args": null,
                                     "storageKey": null
                                   },
-                                  {
-                                    "kind": "ScalarField",
-                                    "alias": "is_in_auction",
-                                    "name": "isInAuction",
-                                    "args": null,
-                                    "storageKey": null
-                                  },
                                   {
                                     "kind": "ScalarField",
                                     "alias": "is_biddable",
@@ -1171,20 +964,6 @@ return {
                                         "args": null,
                                         "storageKey": null
                                       },
-                                      {
-                                        "kind": "ScalarField",
-                                        "alias": "is_live_open",
-                                        "name": "isLiveOpen",
-                                        "args": null,
-                                        "storageKey": null
-                                      },
-                                      {
-                                        "kind": "ScalarField",
-                                        "alias": "is_open",
-                                        "name": "isOpen",
-                                        "args": null,
-                                        "storageKey": null
-                                      },
                                       {
                                         "kind": "ScalarField",
                                         "alias": "is_closed",
@@ -1199,7 +978,7 @@ return {
                                         "args": null,
                                         "storageKey": null
                                       },
-                                      (v6/*: any*/)
+                                      (v7/*: any*/)
                                     ]
                                   },
                                   {
@@ -1220,10 +999,10 @@ return {
                                         "concreteType": "SaleArtworkCurrentBid",
                                         "plural": false,
                                         "selections": [
-                                          (v14/*: any*/)
+                                          (v12/*: any*/)
                                         ]
                                       },
-                                      (v6/*: any*/)
+                                      (v7/*: any*/)
                                     ]
                                   },
                                   {
@@ -1240,7 +1019,7 @@ return {
                                     ],
                                     "concreteType": "Artist",
                                     "plural": true,
-                                    "selections": (v15/*: any*/)
+                                    "selections": (v13/*: any*/)
                                   },
                                   {
                                     "kind": "LinkedField",
@@ -1250,7 +1029,7 @@ return {
                                     "args": null,
                                     "concreteType": "Partner",
                                     "plural": false,
-                                    "selections": (v15/*: any*/)
+                                    "selections": (v13/*: any*/)
                                   },
                                   (v5/*: any*/)
                                 ]
@@ -1259,14 +1038,8 @@ return {
                           }
                         ]
                       },
-                      (v4/*: any*/),
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_fair_booth",
-                        "name": "isFairBooth",
-                        "args": null,
-                        "storageKey": null
-                      },
+                      (v2/*: any*/),
+                      (v6/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -1294,16 +1067,16 @@ return {
                         "concreteType": null,
                         "plural": false,
                         "selections": [
-                          (v8/*: any*/),
-                          (v6/*: any*/),
+                          (v10/*: any*/),
+                          (v7/*: any*/),
                           {
                             "kind": "InlineFragment",
                             "type": "Partner",
                             "selections": [
-                              (v4/*: any*/),
+                              (v3/*: any*/),
                               (v5/*: any*/),
                               (v2/*: any*/),
-                              (v3/*: any*/),
+                              (v6/*: any*/),
                               {
                                 "kind": "LinkedField",
                                 "alias": null,
@@ -1313,9 +1086,16 @@ return {
                                 "concreteType": "Profile",
                                 "plural": false,
                                 "selections": [
-                                  (v3/*: any*/),
-                                  (v11/*: any*/),
-                                  (v6/*: any*/)
+                                  (v7/*: any*/),
+                                  (v2/*: any*/),
+                                  (v6/*: any*/),
+                                  {
+                                    "kind": "ScalarField",
+                                    "alias": null,
+                                    "name": "isFollowed",
+                                    "args": null,
+                                    "storageKey": null
+                                  }
                                 ]
                               }
                             ]
@@ -1325,24 +1105,12 @@ return {
                       {
                         "kind": "LinkedField",
                         "alias": null,
-                        "name": "fair",
-                        "storageKey": null,
-                        "args": null,
-                        "concreteType": "Fair",
-                        "plural": false,
-                        "selections": (v15/*: any*/)
-                      },
-                      {
-                        "kind": "LinkedField",
-                        "alias": "cover_image",
                         "name": "coverImage",
                         "storageKey": null,
                         "args": null,
                         "concreteType": "Image",
                         "plural": false,
-                        "selections": [
-                          (v10/*: any*/)
-                        ]
+                        "selections": (v4/*: any*/)
                       },
                       {
                         "kind": "LinkedField",
@@ -1353,12 +1121,12 @@ return {
                         "concreteType": "Location",
                         "plural": false,
                         "selections": [
-                          (v14/*: any*/),
-                          (v6/*: any*/)
+                          (v12/*: any*/),
+                          (v7/*: any*/)
                         ]
                       },
-                      (v6/*: any*/),
-                      (v8/*: any*/)
+                      (v7/*: any*/),
+                      (v10/*: any*/)
                     ]
                   }
                 ]
@@ -1369,12 +1137,12 @@ return {
             "kind": "LinkedHandle",
             "alias": "shows",
             "name": "showsConnection",
-            "args": (v13/*: any*/),
+            "args": (v11/*: any*/),
             "handle": "connection",
             "key": "Fair_shows",
             "filters": null
           },
-          (v6/*: any*/)
+          (v7/*: any*/)
         ]
       }
     ]
@@ -1382,7 +1150,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FairDetailShowsQuery",
-    "id": "02fa370b7f84f13fe092962b51b6eef3",
+    "id": "182eb234d04f02be5e0d6681188f04c6",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FairDetailTestsQuery.graphql.ts b/src/__generated__/FairDetailTestsQuery.graphql.ts
index ae92e32e4..aee655d5c 100644
--- a/src/__generated__/FairDetailTestsQuery.graphql.ts
+++ b/src/__generated__/FairDetailTestsQuery.graphql.ts
@@ -42,15 +42,13 @@ fragment FairDetail_fair on Fair {
     website
     id
   }
-  about
-  ticketsLink
   profile {
     name
     id
   }
   sponsoredContent {
-    activationText
     pressReleaseUrl
+    activationText
   }
   shows: showsConnection(first: 5) {
     pageInfo {
@@ -61,8 +59,6 @@ fragment FairDetail_fair on Fair {
     edges {
       cursor
       node {
-        slug
-        internalID
         artworks: artworksConnection(first: 4) {
           edges {
             node {
@@ -81,14 +77,18 @@ fragment FairDetail_fair on Fair {
 
 fragment FairHeader_fair on Fair {
   slug
-  internalID
   name
   formattedOpeningHours
+  startAt
+  endAt
+  exhibitionPeriod
   counts {
     artists
-    partners
   }
-  followed_content: followedContent {
+  image {
+    url
+  }
+  followedContent {
     artists {
       name
       href
@@ -96,38 +96,8 @@ fragment FairHeader_fair on Fair {
       internalID
       id
     }
-    galleries {
-      internalID
-      name
-      id
-    }
   }
-  partner_names: showsConnection(first: 2) {
-    edges {
-      node {
-        slug
-        partner {
-          __typename
-          ... on Partner {
-            profile {
-              name
-              slug
-              internalID
-              id
-            }
-          }
-          ... on Node {
-            id
-          }
-          ... on ExternalPartner {
-            id
-          }
-        }
-        id
-      }
-    }
-  }
-  artists_names: artistsConnection(first: 3) {
+  artistsConnection(first: 3) {
     edges {
       node {
         name
@@ -138,27 +108,12 @@ fragment FairHeader_fair on Fair {
       }
     }
   }
-  image {
-    image_url: imageURL
-    aspect_ratio: aspectRatio
-    url
-  }
   profile {
+    id
     icon {
-      internalID
-      href
-      height
-      width
       url(version: "square140")
     }
-    id
-    slug
-    name
-    is_followed: isFollowed
   }
-  start_at: startAt
-  end_at: endAt
-  exhibition_period: exhibitionPeriod
 }
 
 fragment LocationMap_location on Location {
@@ -195,8 +150,6 @@ fragment LocationMap_location on Location {
 fragment FairBoothPreview_show on Show {
   slug
   internalID
-  name
-  is_fair_booth: isFairBooth
   counts {
     artworks
   }
@@ -209,9 +162,10 @@ fragment FairBoothPreview_show on Show {
       internalID
       id
       profile {
-        internalID
-        is_followed: isFollowed
         id
+        slug
+        internalID
+        isFollowed
       }
     }
     ... on Node {
@@ -221,11 +175,7 @@ fragment FairBoothPreview_show on Show {
       id
     }
   }
-  fair {
-    name
-    id
-  }
-  cover_image: coverImage {
+  coverImage {
     url
   }
   location {
@@ -244,7 +194,6 @@ fragment FairBoothPreview_show on Show {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -255,15 +204,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -306,19 +252,21 @@ v1 = {
   "storageKey": null
 },
 v2 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "internalID",
-  "args": null,
-  "storageKey": null
-},
-v3 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "name",
   "args": null,
   "storageKey": null
 },
+v3 = [
+  {
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "url",
+    "args": null,
+    "storageKey": null
+  }
+],
 v4 = {
   "kind": "ScalarField",
   "alias": null,
@@ -329,69 +277,55 @@ v4 = {
 v5 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "id",
+  "name": "internalID",
   "args": null,
   "storageKey": null
 },
-v6 = [
-  (v3/*: any*/),
-  (v4/*: any*/),
-  (v1/*: any*/),
-  (v2/*: any*/),
-  (v5/*: any*/)
-],
-v7 = {
+v6 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "__typename",
+  "name": "id",
   "args": null,
   "storageKey": null
 },
+v7 = [
+  (v2/*: any*/),
+  (v4/*: any*/),
+  (v1/*: any*/),
+  (v5/*: any*/),
+  (v6/*: any*/)
+],
 v8 = {
-  "kind": "ScalarField",
-  "alias": "aspect_ratio",
-  "name": "aspectRatio",
-  "args": null,
-  "storageKey": null
-},
-v9 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "url",
-  "args": null,
-  "storageKey": null
-},
-v10 = {
-  "kind": "ScalarField",
-  "alias": "is_followed",
-  "name": "isFollowed",
+  "name": "hours",
   "args": null,
   "storageKey": null
 },
-v11 = {
+v9 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "hours",
+  "name": "__typename",
   "args": null,
   "storageKey": null
 },
-v12 = [
+v10 = [
   {
     "kind": "Literal",
     "name": "first",
     "value": 5
   }
 ],
-v13 = {
+v11 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "display",
   "args": null,
   "storageKey": null
 },
-v14 = [
-  (v3/*: any*/),
-  (v5/*: any*/)
+v12 = [
+  (v2/*: any*/),
+  (v6/*: any*/)
 ];
 return {
   "kind": "Request",
@@ -436,7 +370,6 @@ return {
         "selections": [
           (v1/*: any*/),
           (v2/*: any*/),
-          (v3/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -444,6 +377,27 @@ return {
             "args": null,
             "storageKey": null
           },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "startAt",
+            "args": null,
+            "storageKey": null
+          },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "endAt",
+            "args": null,
+            "storageKey": null
+          },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "exhibitionPeriod",
+            "args": null,
+            "storageKey": null
+          },
           {
             "kind": "LinkedField",
             "alias": null,
@@ -459,19 +413,22 @@ return {
                 "name": "artists",
                 "args": null,
                 "storageKey": null
-              },
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "partners",
-                "args": null,
-                "storageKey": null
               }
             ]
           },
           {
             "kind": "LinkedField",
-            "alias": "followed_content",
+            "alias": null,
+            "name": "image",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Image",
+            "plural": false,
+            "selections": (v3/*: any*/)
+          },
+          {
+            "kind": "LinkedField",
+            "alias": null,
             "name": "followedContent",
             "storageKey": null,
             "args": null,
@@ -486,102 +443,13 @@ return {
                 "args": null,
                 "concreteType": "Artist",
                 "plural": true,
-                "selections": (v6/*: any*/)
-              },
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "galleries",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "Partner",
-                "plural": true,
-                "selections": [
-                  (v2/*: any*/),
-                  (v3/*: any*/),
-                  (v5/*: any*/)
-                ]
+                "selections": (v7/*: any*/)
               }
             ]
           },
           {
             "kind": "LinkedField",
-            "alias": "partner_names",
-            "name": "showsConnection",
-            "storageKey": "showsConnection(first:2)",
-            "args": [
-              {
-                "kind": "Literal",
-                "name": "first",
-                "value": 2
-              }
-            ],
-            "concreteType": "ShowConnection",
-            "plural": false,
-            "selections": [
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "edges",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "ShowEdge",
-                "plural": true,
-                "selections": [
-                  {
-                    "kind": "LinkedField",
-                    "alias": null,
-                    "name": "node",
-                    "storageKey": null,
-                    "args": null,
-                    "concreteType": "Show",
-                    "plural": false,
-                    "selections": [
-                      (v1/*: any*/),
-                      {
-                        "kind": "LinkedField",
-                        "alias": null,
-                        "name": "partner",
-                        "storageKey": null,
-                        "args": null,
-                        "concreteType": null,
-                        "plural": false,
-                        "selections": [
-                          (v7/*: any*/),
-                          (v5/*: any*/),
-                          {
-                            "kind": "InlineFragment",
-                            "type": "Partner",
-                            "selections": [
-                              {
-                                "kind": "LinkedField",
-                                "alias": null,
-                                "name": "profile",
-                                "storageKey": null,
-                                "args": null,
-                                "concreteType": "Profile",
-                                "plural": false,
-                                "selections": [
-                                  (v3/*: any*/),
-                                  (v1/*: any*/),
-                                  (v2/*: any*/),
-                                  (v5/*: any*/)
-                                ]
-                              }
-                            ]
-                          }
-                        ]
-                      },
-                      (v5/*: any*/)
-                    ]
-                  }
-                ]
-              }
-            ]
-          },
-          {
-            "kind": "LinkedField",
-            "alias": "artists_names",
+            "alias": null,
             "name": "artistsConnection",
             "storageKey": "artistsConnection(first:3)",
             "args": [
@@ -611,32 +479,12 @@ return {
                     "args": null,
                     "concreteType": "Artist",
                     "plural": false,
-                    "selections": (v6/*: any*/)
+                    "selections": (v7/*: any*/)
                   }
                 ]
               }
             ]
           },
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "image",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "Image",
-            "plural": false,
-            "selections": [
-              {
-                "kind": "ScalarField",
-                "alias": "image_url",
-                "name": "imageURL",
-                "args": null,
-                "storageKey": null
-              },
-              (v8/*: any*/),
-              (v9/*: any*/)
-            ]
-          },
           {
             "kind": "LinkedField",
             "alias": null,
@@ -646,6 +494,7 @@ return {
             "concreteType": "Profile",
             "plural": false,
             "selections": [
+              (v6/*: any*/),
               {
                 "kind": "LinkedField",
                 "alias": null,
@@ -655,22 +504,6 @@ return {
                 "concreteType": "Image",
                 "plural": false,
                 "selections": [
-                  (v2/*: any*/),
-                  (v4/*: any*/),
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "height",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "width",
-                    "args": null,
-                    "storageKey": null
-                  },
                   {
                     "kind": "ScalarField",
                     "alias": null,
@@ -686,34 +519,11 @@ return {
                   }
                 ]
               },
-              (v5/*: any*/),
-              (v1/*: any*/),
-              (v3/*: any*/),
-              (v10/*: any*/)
+              (v2/*: any*/)
             ]
           },
-          {
-            "kind": "ScalarField",
-            "alias": "start_at",
-            "name": "startAt",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": "end_at",
-            "name": "endAt",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": "exhibition_period",
-            "name": "exhibitionPeriod",
-            "args": null,
-            "storageKey": null
-          },
-          (v11/*: any*/),
+          (v5/*: any*/),
+          (v8/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -730,8 +540,8 @@ return {
             "concreteType": "Location",
             "plural": false,
             "selections": [
+              (v6/*: any*/),
               (v5/*: any*/),
-              (v2/*: any*/),
               {
                 "kind": "ScalarField",
                 "alias": null,
@@ -833,7 +643,7 @@ return {
                 "concreteType": null,
                 "plural": false,
                 "selections": [
-                  (v7/*: any*/),
+                  (v9/*: any*/),
                   {
                     "kind": "InlineFragment",
                     "type": "OpeningHoursArray",
@@ -854,7 +664,7 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          (v11/*: any*/)
+                          (v8/*: any*/)
                         ]
                       }
                     ]
@@ -892,23 +702,9 @@ return {
                 "args": null,
                 "storageKey": null
               },
-              (v5/*: any*/)
+              (v6/*: any*/)
             ]
           },
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "about",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "ticketsLink",
-            "args": null,
-            "storageKey": null
-          },
           {
             "kind": "LinkedField",
             "alias": null,
@@ -921,14 +717,14 @@ return {
               {
                 "kind": "ScalarField",
                 "alias": null,
-                "name": "activationText",
+                "name": "pressReleaseUrl",
                 "args": null,
                 "storageKey": null
               },
               {
                 "kind": "ScalarField",
                 "alias": null,
-                "name": "pressReleaseUrl",
+                "name": "activationText",
                 "args": null,
                 "storageKey": null
               }
@@ -939,7 +735,7 @@ return {
             "alias": "shows",
             "name": "showsConnection",
             "storageKey": "showsConnection(first:5)",
-            "args": (v12/*: any*/),
+            "args": (v10/*: any*/),
             "concreteType": "ShowConnection",
             "plural": false,
             "selections": [
@@ -1000,8 +796,6 @@ return {
                     "concreteType": "Show",
                     "plural": false,
                     "selections": [
-                      (v1/*: any*/),
-                      (v2/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": "artworks",
@@ -1036,7 +830,7 @@ return {
                                 "plural": false,
                                 "selections": [
                                   (v1/*: any*/),
-                                  (v5/*: any*/),
+                                  (v6/*: any*/),
                                   {
                                     "kind": "LinkedField",
                                     "alias": null,
@@ -1046,7 +840,13 @@ return {
                                     "concreteType": "Image",
                                     "plural": false,
                                     "selections": [
-                                      (v8/*: any*/),
+                                      {
+                                        "kind": "ScalarField",
+                                        "alias": "aspect_ratio",
+                                        "name": "aspectRatio",
+                                        "args": null,
+                                        "storageKey": null
+                                      },
                                       {
                                         "kind": "ScalarField",
                                         "alias": null,
@@ -1083,13 +883,6 @@ return {
                                     "args": null,
                                     "storageKey": null
                                   },
-                                  {
-                                    "kind": "ScalarField",
-                                    "alias": "is_in_auction",
-                                    "name": "isInAuction",
-                                    "args": null,
-                                    "storageKey": null
-                                  },
                                   {
                                     "kind": "ScalarField",
                                     "alias": "is_biddable",
@@ -1127,20 +920,6 @@ return {
                                         "args": null,
                                         "storageKey": null
                                       },
-                                      {
-                                        "kind": "ScalarField",
-                                        "alias": "is_live_open",
-                                        "name": "isLiveOpen",
-                                        "args": null,
-                                        "storageKey": null
-                                      },
-                                      {
-                                        "kind": "ScalarField",
-                                        "alias": "is_open",
-                                        "name": "isOpen",
-                                        "args": null,
-                                        "storageKey": null
-                                      },
                                       {
                                         "kind": "ScalarField",
                                         "alias": "is_closed",
@@ -1155,7 +934,7 @@ return {
                                         "args": null,
                                         "storageKey": null
                                       },
-                                      (v5/*: any*/)
+                                      (v6/*: any*/)
                                     ]
                                   },
                                   {
@@ -1176,10 +955,10 @@ return {
                                         "concreteType": "SaleArtworkCurrentBid",
                                         "plural": false,
                                         "selections": [
-                                          (v13/*: any*/)
+                                          (v11/*: any*/)
                                         ]
                                       },
-                                      (v5/*: any*/)
+                                      (v6/*: any*/)
                                     ]
                                   },
                                   {
@@ -1196,7 +975,7 @@ return {
                                     ],
                                     "concreteType": "Artist",
                                     "plural": true,
-                                    "selections": (v14/*: any*/)
+                                    "selections": (v12/*: any*/)
                                   },
                                   {
                                     "kind": "LinkedField",
@@ -1206,7 +985,7 @@ return {
                                     "args": null,
                                     "concreteType": "Partner",
                                     "plural": false,
-                                    "selections": (v14/*: any*/)
+                                    "selections": (v12/*: any*/)
                                   },
                                   (v4/*: any*/)
                                 ]
@@ -1215,14 +994,8 @@ return {
                           }
                         ]
                       },
-                      (v3/*: any*/),
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_fair_booth",
-                        "name": "isFairBooth",
-                        "args": null,
-                        "storageKey": null
-                      },
+                      (v1/*: any*/),
+                      (v5/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -1250,16 +1023,16 @@ return {
                         "concreteType": null,
                         "plural": false,
                         "selections": [
-                          (v7/*: any*/),
-                          (v5/*: any*/),
+                          (v9/*: any*/),
+                          (v6/*: any*/),
                           {
                             "kind": "InlineFragment",
                             "type": "Partner",
                             "selections": [
-                              (v3/*: any*/),
+                              (v2/*: any*/),
                               (v4/*: any*/),
                               (v1/*: any*/),
-                              (v2/*: any*/),
+                              (v5/*: any*/),
                               {
                                 "kind": "LinkedField",
                                 "alias": null,
@@ -1269,9 +1042,16 @@ return {
                                 "concreteType": "Profile",
                                 "plural": false,
                                 "selections": [
-                                  (v2/*: any*/),
-                                  (v10/*: any*/),
-                                  (v5/*: any*/)
+                                  (v6/*: any*/),
+                                  (v1/*: any*/),
+                                  (v5/*: any*/),
+                                  {
+                                    "kind": "ScalarField",
+                                    "alias": null,
+                                    "name": "isFollowed",
+                                    "args": null,
+                                    "storageKey": null
+                                  }
                                 ]
                               }
                             ]
@@ -1281,24 +1061,12 @@ return {
                       {
                         "kind": "LinkedField",
                         "alias": null,
-                        "name": "fair",
-                        "storageKey": null,
-                        "args": null,
-                        "concreteType": "Fair",
-                        "plural": false,
-                        "selections": (v14/*: any*/)
-                      },
-                      {
-                        "kind": "LinkedField",
-                        "alias": "cover_image",
                         "name": "coverImage",
                         "storageKey": null,
                         "args": null,
                         "concreteType": "Image",
                         "plural": false,
-                        "selections": [
-                          (v9/*: any*/)
-                        ]
+                        "selections": (v3/*: any*/)
                       },
                       {
                         "kind": "LinkedField",
@@ -1309,12 +1077,12 @@ return {
                         "concreteType": "Location",
                         "plural": false,
                         "selections": [
-                          (v13/*: any*/),
-                          (v5/*: any*/)
+                          (v11/*: any*/),
+                          (v6/*: any*/)
                         ]
                       },
-                      (v5/*: any*/),
-                      (v7/*: any*/)
+                      (v6/*: any*/),
+                      (v9/*: any*/)
                     ]
                   }
                 ]
@@ -1325,12 +1093,12 @@ return {
             "kind": "LinkedHandle",
             "alias": "shows",
             "name": "showsConnection",
-            "args": (v12/*: any*/),
+            "args": (v10/*: any*/),
             "handle": "connection",
             "key": "Fair_shows",
             "filters": null
           },
-          (v5/*: any*/)
+          (v6/*: any*/)
         ]
       }
     ]
@@ -1338,7 +1106,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FairDetailTestsQuery",
-    "id": "c55da51c2f8b353a0e0a7f0d4253f608",
+    "id": "b7457bd4f48b1794aed02ed22f67fb87",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FairDetail_fair.graphql.ts b/src/__generated__/FairDetail_fair.graphql.ts
index 4543fd184..0b0c73aaa 100644
--- a/src/__generated__/FairDetail_fair.graphql.ts
+++ b/src/__generated__/FairDetail_fair.graphql.ts
@@ -22,14 +22,12 @@ export type FairDetail_fair = {
     readonly organizer: {
         readonly website: string | null;
     } | null;
-    readonly about: string | null;
-    readonly ticketsLink: string | null;
     readonly profile: {
         readonly name: string | null;
     } | null;
     readonly sponsoredContent: {
-        readonly activationText: string | null;
         readonly pressReleaseUrl: string | null;
+        readonly activationText: string | null;
     } | null;
     readonly shows: {
         readonly pageInfo: {
@@ -40,8 +38,6 @@ export type FairDetail_fair = {
         readonly edges: ReadonlyArray<{
             readonly cursor: string;
             readonly node: {
-                readonly slug: string;
-                readonly internalID: string;
                 readonly artworks: {
                     readonly edges: ReadonlyArray<{
                         readonly node: {
@@ -68,13 +64,6 @@ var v0 = {
   "storageKey": null
 },
 v1 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "internalID",
-  "args": null,
-  "storageKey": null
-},
-v2 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "name",
@@ -113,8 +102,14 @@ return {
   ],
   "selections": [
     (v0/*: any*/),
+    {
+      "kind": "ScalarField",
+      "alias": null,
+      "name": "internalID",
+      "args": null,
+      "storageKey": null
+    },
     (v1/*: any*/),
-    (v2/*: any*/),
     {
       "kind": "ScalarField",
       "alias": null,
@@ -188,20 +183,6 @@ return {
         }
       ]
     },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "about",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "ticketsLink",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "LinkedField",
       "alias": null,
@@ -211,7 +192,7 @@ return {
       "concreteType": "Profile",
       "plural": false,
       "selections": [
-        (v2/*: any*/)
+        (v1/*: any*/)
       ]
     },
     {
@@ -226,14 +207,14 @@ return {
         {
           "kind": "ScalarField",
           "alias": null,
-          "name": "activationText",
+          "name": "pressReleaseUrl",
           "args": null,
           "storageKey": null
         },
         {
           "kind": "ScalarField",
           "alias": null,
-          "name": "pressReleaseUrl",
+          "name": "activationText",
           "args": null,
           "storageKey": null
         }
@@ -305,8 +286,6 @@ return {
               "concreteType": "Show",
               "plural": false,
               "selections": [
-                (v0/*: any*/),
-                (v1/*: any*/),
                 {
                   "kind": "LinkedField",
                   "alias": "artworks",
@@ -373,5 +352,5 @@ return {
   ]
 };
 })();
-(node as any).hash = 'a7053c6bb6bbbeae6c79922e0984a2c2';
+(node as any).hash = '0985881eb9fd5d43ffd3c108cf272c05';
 export default node;
diff --git a/src/__generated__/FairExhibitorsQuery.graphql.ts b/src/__generated__/FairExhibitorsQuery.graphql.ts
index 8ad613d29..c7a2b582c 100644
--- a/src/__generated__/FairExhibitorsQuery.graphql.ts
+++ b/src/__generated__/FairExhibitorsQuery.graphql.ts
@@ -30,13 +30,13 @@ query FairExhibitorsQuery(
 fragment FairExhibitors_fair on Fair {
   slug
   internalID
-  exhibitors_grouped_by_name: exhibitorsGroupedByName {
+  exhibitorsGroupedByName {
     letter
     exhibitors {
       name
       slug
-      profile_id: profileID
-      partner_id: partnerID
+      profileID
+      partnerID
     }
   }
 }
@@ -116,7 +116,7 @@ return {
           },
           {
             "kind": "LinkedField",
-            "alias": "exhibitors_grouped_by_name",
+            "alias": null,
             "name": "exhibitorsGroupedByName",
             "storageKey": null,
             "args": null,
@@ -149,14 +149,14 @@ return {
                   (v2/*: any*/),
                   {
                     "kind": "ScalarField",
-                    "alias": "profile_id",
+                    "alias": null,
                     "name": "profileID",
                     "args": null,
                     "storageKey": null
                   },
                   {
                     "kind": "ScalarField",
-                    "alias": "partner_id",
+                    "alias": null,
                     "name": "partnerID",
                     "args": null,
                     "storageKey": null
@@ -179,7 +179,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FairExhibitorsQuery",
-    "id": "97ecbd272f32e08e96c01515dd329505",
+    "id": "6b058c78a40a534099b28f58ab79db64",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FairExhibitors_fair.graphql.ts b/src/__generated__/FairExhibitors_fair.graphql.ts
index 2d601c999..fae3d9c29 100644
--- a/src/__generated__/FairExhibitors_fair.graphql.ts
+++ b/src/__generated__/FairExhibitors_fair.graphql.ts
@@ -6,13 +6,13 @@ export type FairExhibitors_fair$ref = typeof _FairExhibitors_fair$ref;
 export type FairExhibitors_fair = {
     readonly slug: string;
     readonly internalID: string;
-    readonly exhibitors_grouped_by_name: ReadonlyArray<{
+    readonly exhibitorsGroupedByName: ReadonlyArray<{
         readonly letter: string | null;
         readonly exhibitors: ReadonlyArray<{
             readonly name: string | null;
             readonly slug: string;
-            readonly profile_id: string | null;
-            readonly partner_id: string | null;
+            readonly profileID: string | null;
+            readonly partnerID: string | null;
         } | null> | null;
     } | null> | null;
     readonly " $refType": FairExhibitors_fair$ref;
@@ -45,7 +45,7 @@ return {
     },
     {
       "kind": "LinkedField",
-      "alias": "exhibitors_grouped_by_name",
+      "alias": null,
       "name": "exhibitorsGroupedByName",
       "storageKey": null,
       "args": null,
@@ -78,14 +78,14 @@ return {
             (v0/*: any*/),
             {
               "kind": "ScalarField",
-              "alias": "profile_id",
+              "alias": null,
               "name": "profileID",
               "args": null,
               "storageKey": null
             },
             {
               "kind": "ScalarField",
-              "alias": "partner_id",
+              "alias": null,
               "name": "partnerID",
               "args": null,
               "storageKey": null
@@ -97,5 +97,5 @@ return {
   ]
 };
 })();
-(node as any).hash = '458e78f3e9b1b285493f2988839af57d';
+(node as any).hash = '18b238bbd00241542a381b2fc2cc97f7';
 export default node;
diff --git a/src/__generated__/FairHeader_fair.graphql.ts b/src/__generated__/FairHeader_fair.graphql.ts
index 3fcd9487b..ab795ca74 100644
--- a/src/__generated__/FairHeader_fair.graphql.ts
+++ b/src/__generated__/FairHeader_fair.graphql.ts
@@ -5,50 +5,26 @@ declare const _FairHeader_fair$ref: unique symbol;
 export type FairHeader_fair$ref = typeof _FairHeader_fair$ref;
 export type FairHeader_fair = {
     readonly slug: string;
-    readonly internalID: string;
     readonly name: string | null;
     readonly formattedOpeningHours: string | null;
+    readonly startAt: string | null;
+    readonly endAt: string | null;
+    readonly exhibitionPeriod: string | null;
     readonly counts: {
         readonly artists: any | null;
-        readonly partners: any | null;
     } | null;
-    readonly followed_content: {
+    readonly image: {
+        readonly url: string | null;
+    } | null;
+    readonly followedContent: {
         readonly artists: ReadonlyArray<{
             readonly name: string | null;
             readonly href: string | null;
             readonly slug: string;
             readonly internalID: string;
         } | null> | null;
-        readonly galleries: ReadonlyArray<{
-            readonly internalID: string;
-            readonly name: string | null;
-        } | null> | null;
-    } | null;
-    readonly partner_names: {
-        readonly edges: ReadonlyArray<{
-            readonly node: {
-                readonly slug: string;
-                readonly partner: ({
-                    readonly profile?: {
-                        readonly name: string | null;
-                        readonly slug: string;
-                        readonly internalID: string;
-                    } | null;
-                } & ({
-                    readonly profile: {
-                        readonly name: string | null;
-                        readonly slug: string;
-                        readonly internalID: string;
-                    } | null;
-                } | {
-                    /*This will never be '% other', but we need some
-                    value in case none of the concrete values match.*/
-                    readonly __typename: "%other";
-                })) | null;
-            } | null;
-        } | null> | null;
     } | null;
-    readonly artists_names: {
+    readonly artistsConnection: {
         readonly edges: ReadonlyArray<{
             readonly node: {
                 readonly name: string | null;
@@ -58,27 +34,12 @@ export type FairHeader_fair = {
             } | null;
         } | null> | null;
     } | null;
-    readonly image: {
-        readonly image_url: string | null;
-        readonly aspect_ratio: number;
-        readonly url: string | null;
-    } | null;
     readonly profile: {
+        readonly id: string;
         readonly icon: {
-            readonly internalID: string | null;
-            readonly href: string | null;
-            readonly height: number | null;
-            readonly width: number | null;
             readonly url: string | null;
         } | null;
-        readonly id: string;
-        readonly slug: string;
-        readonly name: string | null;
-        readonly is_followed: boolean | null;
     } | null;
-    readonly start_at: string | null;
-    readonly end_at: string | null;
-    readonly exhibition_period: string | null;
     readonly " $refType": FairHeader_fair$ref;
 };
 
@@ -93,31 +54,29 @@ var v0 = {
   "storageKey": null
 },
 v1 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "internalID",
-  "args": null,
-  "storageKey": null
-},
-v2 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "name",
   "args": null,
   "storageKey": null
 },
-v3 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "href",
-  "args": null,
-  "storageKey": null
-},
-v4 = [
-  (v2/*: any*/),
-  (v3/*: any*/),
+v2 = [
+  (v1/*: any*/),
+  {
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "href",
+    "args": null,
+    "storageKey": null
+  },
   (v0/*: any*/),
-  (v1/*: any*/)
+  {
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "internalID",
+    "args": null,
+    "storageKey": null
+  }
 ];
 return {
   "kind": "Fragment",
@@ -128,7 +87,6 @@ return {
   "selections": [
     (v0/*: any*/),
     (v1/*: any*/),
-    (v2/*: any*/),
     {
       "kind": "ScalarField",
       "alias": null,
@@ -136,6 +94,27 @@ return {
       "args": null,
       "storageKey": null
     },
+    {
+      "kind": "ScalarField",
+      "alias": null,
+      "name": "startAt",
+      "args": null,
+      "storageKey": null
+    },
+    {
+      "kind": "ScalarField",
+      "alias": null,
+      "name": "endAt",
+      "args": null,
+      "storageKey": null
+    },
+    {
+      "kind": "ScalarField",
+      "alias": null,
+      "name": "exhibitionPeriod",
+      "args": null,
+      "storageKey": null
+    },
     {
       "kind": "LinkedField",
       "alias": null,
@@ -151,124 +130,51 @@ return {
           "name": "artists",
           "args": null,
           "storageKey": null
-        },
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "partners",
-          "args": null,
-          "storageKey": null
         }
       ]
     },
     {
       "kind": "LinkedField",
-      "alias": "followed_content",
-      "name": "followedContent",
+      "alias": null,
+      "name": "image",
       "storageKey": null,
       "args": null,
-      "concreteType": "FollowedContent",
+      "concreteType": "Image",
       "plural": false,
       "selections": [
         {
-          "kind": "LinkedField",
-          "alias": null,
-          "name": "artists",
-          "storageKey": null,
-          "args": null,
-          "concreteType": "Artist",
-          "plural": true,
-          "selections": (v4/*: any*/)
-        },
-        {
-          "kind": "LinkedField",
+          "kind": "ScalarField",
           "alias": null,
-          "name": "galleries",
-          "storageKey": null,
+          "name": "url",
           "args": null,
-          "concreteType": "Partner",
-          "plural": true,
-          "selections": [
-            (v1/*: any*/),
-            (v2/*: any*/)
-          ]
+          "storageKey": null
         }
       ]
     },
     {
       "kind": "LinkedField",
-      "alias": "partner_names",
-      "name": "showsConnection",
-      "storageKey": "showsConnection(first:2)",
-      "args": [
-        {
-          "kind": "Literal",
-          "name": "first",
-          "value": 2
-        }
-      ],
-      "concreteType": "ShowConnection",
+      "alias": null,
+      "name": "followedContent",
+      "storageKey": null,
+      "args": null,
+      "concreteType": "FollowedContent",
       "plural": false,
       "selections": [
         {
           "kind": "LinkedField",
           "alias": null,
-          "name": "edges",
+          "name": "artists",
           "storageKey": null,
           "args": null,
-          "concreteType": "ShowEdge",
+          "concreteType": "Artist",
           "plural": true,
-          "selections": [
-            {
-              "kind": "LinkedField",
-              "alias": null,
-              "name": "node",
-              "storageKey": null,
-              "args": null,
-              "concreteType": "Show",
-              "plural": false,
-              "selections": [
-                (v0/*: any*/),
-                {
-                  "kind": "LinkedField",
-                  "alias": null,
-                  "name": "partner",
-                  "storageKey": null,
-                  "args": null,
-                  "concreteType": null,
-                  "plural": false,
-                  "selections": [
-                    {
-                      "kind": "InlineFragment",
-                      "type": "Partner",
-                      "selections": [
-                        {
-                          "kind": "LinkedField",
-                          "alias": null,
-                          "name": "profile",
-                          "storageKey": null,
-                          "args": null,
-                          "concreteType": "Profile",
-                          "plural": false,
-                          "selections": [
-                            (v2/*: any*/),
-                            (v0/*: any*/),
-                            (v1/*: any*/)
-                          ]
-                        }
-                      ]
-                    }
-                  ]
-                }
-              ]
-            }
-          ]
+          "selections": (v2/*: any*/)
         }
       ]
     },
     {
       "kind": "LinkedField",
-      "alias": "artists_names",
+      "alias": null,
       "name": "artistsConnection",
       "storageKey": "artistsConnection(first:3)",
       "args": [
@@ -298,7 +204,7 @@ return {
               "args": null,
               "concreteType": "Artist",
               "plural": false,
-              "selections": (v4/*: any*/)
+              "selections": (v2/*: any*/)
             }
           ]
         }
@@ -307,44 +213,19 @@ return {
     {
       "kind": "LinkedField",
       "alias": null,
-      "name": "image",
+      "name": "profile",
       "storageKey": null,
       "args": null,
-      "concreteType": "Image",
+      "concreteType": "Profile",
       "plural": false,
       "selections": [
-        {
-          "kind": "ScalarField",
-          "alias": "image_url",
-          "name": "imageURL",
-          "args": null,
-          "storageKey": null
-        },
-        {
-          "kind": "ScalarField",
-          "alias": "aspect_ratio",
-          "name": "aspectRatio",
-          "args": null,
-          "storageKey": null
-        },
         {
           "kind": "ScalarField",
           "alias": null,
-          "name": "url",
+          "name": "id",
           "args": null,
           "storageKey": null
-        }
-      ]
-    },
-    {
-      "kind": "LinkedField",
-      "alias": null,
-      "name": "profile",
-      "storageKey": null,
-      "args": null,
-      "concreteType": "Profile",
-      "plural": false,
-      "selections": [
+        },
         {
           "kind": "LinkedField",
           "alias": null,
@@ -354,22 +235,6 @@ return {
           "concreteType": "Image",
           "plural": false,
           "selections": [
-            (v1/*: any*/),
-            (v3/*: any*/),
-            {
-              "kind": "ScalarField",
-              "alias": null,
-              "name": "height",
-              "args": null,
-              "storageKey": null
-            },
-            {
-              "kind": "ScalarField",
-              "alias": null,
-              "name": "width",
-              "args": null,
-              "storageKey": null
-            },
             {
               "kind": "ScalarField",
               "alias": null,
@@ -384,48 +249,11 @@ return {
               "storageKey": "url(version:\"square140\")"
             }
           ]
-        },
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "id",
-          "args": null,
-          "storageKey": null
-        },
-        (v0/*: any*/),
-        (v2/*: any*/),
-        {
-          "kind": "ScalarField",
-          "alias": "is_followed",
-          "name": "isFollowed",
-          "args": null,
-          "storageKey": null
         }
       ]
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "start_at",
-      "name": "startAt",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "end_at",
-      "name": "endAt",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "exhibition_period",
-      "name": "exhibitionPeriod",
-      "args": null,
-      "storageKey": null
     }
   ]
 };
 })();
-(node as any).hash = '16fe58134d4f45dbd19d24fc64d1ce7c';
+(node as any).hash = '7313dd563d2f4aae124bdc1f4cba7ddc';
 export default node;
diff --git a/src/__generated__/FairQuery.graphql.ts b/src/__generated__/FairQuery.graphql.ts
index 72ffbce29..5c6579be0 100644
--- a/src/__generated__/FairQuery.graphql.ts
+++ b/src/__generated__/FairQuery.graphql.ts
@@ -29,14 +29,7 @@ query FairQuery(
 
 fragment Fair_fair on Fair {
   id
-  slug
   ...FairDetail_fair
-  organizer {
-    website
-    id
-  }
-  about
-  ticketsLink
 }
 
 fragment FairDetail_fair on Fair {
@@ -58,15 +51,13 @@ fragment FairDetail_fair on Fair {
     website
     id
   }
-  about
-  ticketsLink
   profile {
     name
     id
   }
   sponsoredContent {
-    activationText
     pressReleaseUrl
+    activationText
   }
   shows: showsConnection(first: 5) {
     pageInfo {
@@ -77,8 +68,6 @@ fragment FairDetail_fair on Fair {
     edges {
       cursor
       node {
-        slug
-        internalID
         artworks: artworksConnection(first: 4) {
           edges {
             node {
@@ -97,14 +86,18 @@ fragment FairDetail_fair on Fair {
 
 fragment FairHeader_fair on Fair {
   slug
-  internalID
   name
   formattedOpeningHours
+  startAt
+  endAt
+  exhibitionPeriod
   counts {
     artists
-    partners
   }
-  followed_content: followedContent {
+  image {
+    url
+  }
+  followedContent {
     artists {
       name
       href
@@ -112,38 +105,8 @@ fragment FairHeader_fair on Fair {
       internalID
       id
     }
-    galleries {
-      internalID
-      name
-      id
-    }
   }
-  partner_names: showsConnection(first: 2) {
-    edges {
-      node {
-        slug
-        partner {
-          __typename
-          ... on Partner {
-            profile {
-              name
-              slug
-              internalID
-              id
-            }
-          }
-          ... on Node {
-            id
-          }
-          ... on ExternalPartner {
-            id
-          }
-        }
-        id
-      }
-    }
-  }
-  artists_names: artistsConnection(first: 3) {
+  artistsConnection(first: 3) {
     edges {
       node {
         name
@@ -154,27 +117,12 @@ fragment FairHeader_fair on Fair {
       }
     }
   }
-  image {
-    image_url: imageURL
-    aspect_ratio: aspectRatio
-    url
-  }
   profile {
+    id
     icon {
-      internalID
-      href
-      height
-      width
       url(version: "square140")
     }
-    id
-    slug
-    name
-    is_followed: isFollowed
   }
-  start_at: startAt
-  end_at: endAt
-  exhibition_period: exhibitionPeriod
 }
 
 fragment LocationMap_location on Location {
@@ -211,8 +159,6 @@ fragment LocationMap_location on Location {
 fragment FairBoothPreview_show on Show {
   slug
   internalID
-  name
-  is_fair_booth: isFairBooth
   counts {
     artworks
   }
@@ -225,9 +171,10 @@ fragment FairBoothPreview_show on Show {
       internalID
       id
       profile {
-        internalID
-        is_followed: isFollowed
         id
+        slug
+        internalID
+        isFollowed
       }
     }
     ... on Node {
@@ -237,11 +184,7 @@ fragment FairBoothPreview_show on Show {
       id
     }
   }
-  fair {
-    name
-    id
-  }
-  cover_image: coverImage {
+  coverImage {
     url
   }
   location {
@@ -260,7 +203,6 @@ fragment FairBoothPreview_show on Show {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -271,15 +213,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -339,82 +278,70 @@ v3 = {
 v4 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "internalID",
+  "name": "name",
   "args": null,
   "storageKey": null
 },
-v5 = {
+v5 = [
+  {
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "url",
+    "args": null,
+    "storageKey": null
+  }
+],
+v6 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "name",
+  "name": "href",
   "args": null,
   "storageKey": null
 },
-v6 = {
+v7 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "href",
+  "name": "internalID",
   "args": null,
   "storageKey": null
 },
-v7 = [
-  (v5/*: any*/),
+v8 = [
+  (v4/*: any*/),
   (v6/*: any*/),
   (v3/*: any*/),
-  (v4/*: any*/),
+  (v7/*: any*/),
   (v2/*: any*/)
 ],
-v8 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "__typename",
-  "args": null,
-  "storageKey": null
-},
 v9 = {
-  "kind": "ScalarField",
-  "alias": "aspect_ratio",
-  "name": "aspectRatio",
-  "args": null,
-  "storageKey": null
-},
-v10 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "url",
-  "args": null,
-  "storageKey": null
-},
-v11 = {
-  "kind": "ScalarField",
-  "alias": "is_followed",
-  "name": "isFollowed",
+  "name": "hours",
   "args": null,
   "storageKey": null
 },
-v12 = {
+v10 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "hours",
+  "name": "__typename",
   "args": null,
   "storageKey": null
 },
-v13 = [
+v11 = [
   {
     "kind": "Literal",
     "name": "first",
     "value": 5
   }
 ],
-v14 = {
+v12 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "display",
   "args": null,
   "storageKey": null
 },
-v15 = [
-  (v5/*: any*/),
+v13 = [
+  (v4/*: any*/),
   (v2/*: any*/)
 ];
 return {
@@ -461,7 +388,6 @@ return {
           (v2/*: any*/),
           (v3/*: any*/),
           (v4/*: any*/),
-          (v5/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -469,6 +395,27 @@ return {
             "args": null,
             "storageKey": null
           },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "startAt",
+            "args": null,
+            "storageKey": null
+          },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "endAt",
+            "args": null,
+            "storageKey": null
+          },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "exhibitionPeriod",
+            "args": null,
+            "storageKey": null
+          },
           {
             "kind": "LinkedField",
             "alias": null,
@@ -484,19 +431,22 @@ return {
                 "name": "artists",
                 "args": null,
                 "storageKey": null
-              },
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "partners",
-                "args": null,
-                "storageKey": null
               }
             ]
           },
           {
             "kind": "LinkedField",
-            "alias": "followed_content",
+            "alias": null,
+            "name": "image",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Image",
+            "plural": false,
+            "selections": (v5/*: any*/)
+          },
+          {
+            "kind": "LinkedField",
+            "alias": null,
             "name": "followedContent",
             "storageKey": null,
             "args": null,
@@ -511,102 +461,13 @@ return {
                 "args": null,
                 "concreteType": "Artist",
                 "plural": true,
-                "selections": (v7/*: any*/)
-              },
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "galleries",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "Partner",
-                "plural": true,
-                "selections": [
-                  (v4/*: any*/),
-                  (v5/*: any*/),
-                  (v2/*: any*/)
-                ]
+                "selections": (v8/*: any*/)
               }
             ]
           },
           {
             "kind": "LinkedField",
-            "alias": "partner_names",
-            "name": "showsConnection",
-            "storageKey": "showsConnection(first:2)",
-            "args": [
-              {
-                "kind": "Literal",
-                "name": "first",
-                "value": 2
-              }
-            ],
-            "concreteType": "ShowConnection",
-            "plural": false,
-            "selections": [
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "edges",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "ShowEdge",
-                "plural": true,
-                "selections": [
-                  {
-                    "kind": "LinkedField",
-                    "alias": null,
-                    "name": "node",
-                    "storageKey": null,
-                    "args": null,
-                    "concreteType": "Show",
-                    "plural": false,
-                    "selections": [
-                      (v3/*: any*/),
-                      {
-                        "kind": "LinkedField",
-                        "alias": null,
-                        "name": "partner",
-                        "storageKey": null,
-                        "args": null,
-                        "concreteType": null,
-                        "plural": false,
-                        "selections": [
-                          (v8/*: any*/),
-                          (v2/*: any*/),
-                          {
-                            "kind": "InlineFragment",
-                            "type": "Partner",
-                            "selections": [
-                              {
-                                "kind": "LinkedField",
-                                "alias": null,
-                                "name": "profile",
-                                "storageKey": null,
-                                "args": null,
-                                "concreteType": "Profile",
-                                "plural": false,
-                                "selections": [
-                                  (v5/*: any*/),
-                                  (v3/*: any*/),
-                                  (v4/*: any*/),
-                                  (v2/*: any*/)
-                                ]
-                              }
-                            ]
-                          }
-                        ]
-                      },
-                      (v2/*: any*/)
-                    ]
-                  }
-                ]
-              }
-            ]
-          },
-          {
-            "kind": "LinkedField",
-            "alias": "artists_names",
+            "alias": null,
             "name": "artistsConnection",
             "storageKey": "artistsConnection(first:3)",
             "args": [
@@ -636,32 +497,12 @@ return {
                     "args": null,
                     "concreteType": "Artist",
                     "plural": false,
-                    "selections": (v7/*: any*/)
+                    "selections": (v8/*: any*/)
                   }
                 ]
               }
             ]
           },
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "image",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "Image",
-            "plural": false,
-            "selections": [
-              {
-                "kind": "ScalarField",
-                "alias": "image_url",
-                "name": "imageURL",
-                "args": null,
-                "storageKey": null
-              },
-              (v9/*: any*/),
-              (v10/*: any*/)
-            ]
-          },
           {
             "kind": "LinkedField",
             "alias": null,
@@ -671,6 +512,7 @@ return {
             "concreteType": "Profile",
             "plural": false,
             "selections": [
+              (v2/*: any*/),
               {
                 "kind": "LinkedField",
                 "alias": null,
@@ -680,22 +522,6 @@ return {
                 "concreteType": "Image",
                 "plural": false,
                 "selections": [
-                  (v4/*: any*/),
-                  (v6/*: any*/),
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "height",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "width",
-                    "args": null,
-                    "storageKey": null
-                  },
                   {
                     "kind": "ScalarField",
                     "alias": null,
@@ -711,34 +537,11 @@ return {
                   }
                 ]
               },
-              (v2/*: any*/),
-              (v3/*: any*/),
-              (v5/*: any*/),
-              (v11/*: any*/)
+              (v4/*: any*/)
             ]
           },
-          {
-            "kind": "ScalarField",
-            "alias": "start_at",
-            "name": "startAt",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": "end_at",
-            "name": "endAt",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": "exhibition_period",
-            "name": "exhibitionPeriod",
-            "args": null,
-            "storageKey": null
-          },
-          (v12/*: any*/),
+          (v7/*: any*/),
+          (v9/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -756,7 +559,7 @@ return {
             "plural": false,
             "selections": [
               (v2/*: any*/),
-              (v4/*: any*/),
+              (v7/*: any*/),
               {
                 "kind": "ScalarField",
                 "alias": null,
@@ -858,7 +661,7 @@ return {
                 "concreteType": null,
                 "plural": false,
                 "selections": [
-                  (v8/*: any*/),
+                  (v10/*: any*/),
                   {
                     "kind": "InlineFragment",
                     "type": "OpeningHoursArray",
@@ -879,7 +682,7 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          (v12/*: any*/)
+                          (v9/*: any*/)
                         ]
                       }
                     ]
@@ -920,20 +723,6 @@ return {
               (v2/*: any*/)
             ]
           },
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "about",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "ticketsLink",
-            "args": null,
-            "storageKey": null
-          },
           {
             "kind": "LinkedField",
             "alias": null,
@@ -946,14 +735,14 @@ return {
               {
                 "kind": "ScalarField",
                 "alias": null,
-                "name": "activationText",
+                "name": "pressReleaseUrl",
                 "args": null,
                 "storageKey": null
               },
               {
                 "kind": "ScalarField",
                 "alias": null,
-                "name": "pressReleaseUrl",
+                "name": "activationText",
                 "args": null,
                 "storageKey": null
               }
@@ -964,7 +753,7 @@ return {
             "alias": "shows",
             "name": "showsConnection",
             "storageKey": "showsConnection(first:5)",
-            "args": (v13/*: any*/),
+            "args": (v11/*: any*/),
             "concreteType": "ShowConnection",
             "plural": false,
             "selections": [
@@ -1025,8 +814,6 @@ return {
                     "concreteType": "Show",
                     "plural": false,
                     "selections": [
-                      (v3/*: any*/),
-                      (v4/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": "artworks",
@@ -1071,7 +858,13 @@ return {
                                     "concreteType": "Image",
                                     "plural": false,
                                     "selections": [
-                                      (v9/*: any*/),
+                                      {
+                                        "kind": "ScalarField",
+                                        "alias": "aspect_ratio",
+                                        "name": "aspectRatio",
+                                        "args": null,
+                                        "storageKey": null
+                                      },
                                       {
                                         "kind": "ScalarField",
                                         "alias": null,
@@ -1108,13 +901,6 @@ return {
                                     "args": null,
                                     "storageKey": null
                                   },
-                                  {
-                                    "kind": "ScalarField",
-                                    "alias": "is_in_auction",
-                                    "name": "isInAuction",
-                                    "args": null,
-                                    "storageKey": null
-                                  },
                                   {
                                     "kind": "ScalarField",
                                     "alias": "is_biddable",
@@ -1152,20 +938,6 @@ return {
                                         "args": null,
                                         "storageKey": null
                                       },
-                                      {
-                                        "kind": "ScalarField",
-                                        "alias": "is_live_open",
-                                        "name": "isLiveOpen",
-                                        "args": null,
-                                        "storageKey": null
-                                      },
-                                      {
-                                        "kind": "ScalarField",
-                                        "alias": "is_open",
-                                        "name": "isOpen",
-                                        "args": null,
-                                        "storageKey": null
-                                      },
                                       {
                                         "kind": "ScalarField",
                                         "alias": "is_closed",
@@ -1201,7 +973,7 @@ return {
                                         "concreteType": "SaleArtworkCurrentBid",
                                         "plural": false,
                                         "selections": [
-                                          (v14/*: any*/)
+                                          (v12/*: any*/)
                                         ]
                                       },
                                       (v2/*: any*/)
@@ -1221,7 +993,7 @@ return {
                                     ],
                                     "concreteType": "Artist",
                                     "plural": true,
-                                    "selections": (v15/*: any*/)
+                                    "selections": (v13/*: any*/)
                                   },
                                   {
                                     "kind": "LinkedField",
@@ -1231,7 +1003,7 @@ return {
                                     "args": null,
                                     "concreteType": "Partner",
                                     "plural": false,
-                                    "selections": (v15/*: any*/)
+                                    "selections": (v13/*: any*/)
                                   },
                                   (v6/*: any*/)
                                 ]
@@ -1240,14 +1012,8 @@ return {
                           }
                         ]
                       },
-                      (v5/*: any*/),
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_fair_booth",
-                        "name": "isFairBooth",
-                        "args": null,
-                        "storageKey": null
-                      },
+                      (v3/*: any*/),
+                      (v7/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -1275,16 +1041,16 @@ return {
                         "concreteType": null,
                         "plural": false,
                         "selections": [
-                          (v8/*: any*/),
+                          (v10/*: any*/),
                           (v2/*: any*/),
                           {
                             "kind": "InlineFragment",
                             "type": "Partner",
                             "selections": [
-                              (v5/*: any*/),
+                              (v4/*: any*/),
                               (v6/*: any*/),
                               (v3/*: any*/),
-                              (v4/*: any*/),
+                              (v7/*: any*/),
                               {
                                 "kind": "LinkedField",
                                 "alias": null,
@@ -1294,9 +1060,16 @@ return {
                                 "concreteType": "Profile",
                                 "plural": false,
                                 "selections": [
-                                  (v4/*: any*/),
-                                  (v11/*: any*/),
-                                  (v2/*: any*/)
+                                  (v2/*: any*/),
+                                  (v3/*: any*/),
+                                  (v7/*: any*/),
+                                  {
+                                    "kind": "ScalarField",
+                                    "alias": null,
+                                    "name": "isFollowed",
+                                    "args": null,
+                                    "storageKey": null
+                                  }
                                 ]
                               }
                             ]
@@ -1306,24 +1079,12 @@ return {
                       {
                         "kind": "LinkedField",
                         "alias": null,
-                        "name": "fair",
-                        "storageKey": null,
-                        "args": null,
-                        "concreteType": "Fair",
-                        "plural": false,
-                        "selections": (v15/*: any*/)
-                      },
-                      {
-                        "kind": "LinkedField",
-                        "alias": "cover_image",
                         "name": "coverImage",
                         "storageKey": null,
                         "args": null,
                         "concreteType": "Image",
                         "plural": false,
-                        "selections": [
-                          (v10/*: any*/)
-                        ]
+                        "selections": (v5/*: any*/)
                       },
                       {
                         "kind": "LinkedField",
@@ -1334,12 +1095,12 @@ return {
                         "concreteType": "Location",
                         "plural": false,
                         "selections": [
-                          (v14/*: any*/),
+                          (v12/*: any*/),
                           (v2/*: any*/)
                         ]
                       },
                       (v2/*: any*/),
-                      (v8/*: any*/)
+                      (v10/*: any*/)
                     ]
                   }
                 ]
@@ -1350,7 +1111,7 @@ return {
             "kind": "LinkedHandle",
             "alias": "shows",
             "name": "showsConnection",
-            "args": (v13/*: any*/),
+            "args": (v11/*: any*/),
             "handle": "connection",
             "key": "Fair_shows",
             "filters": null
@@ -1362,7 +1123,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FairQuery",
-    "id": "2dd4364236b36dc590e5d59a7b101607",
+    "id": "99c42c5c76ee5cffeb5352733d31f853",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/Fair_fair.graphql.ts b/src/__generated__/Fair_fair.graphql.ts
index 1c4f94a09..98fb980d2 100644
--- a/src/__generated__/Fair_fair.graphql.ts
+++ b/src/__generated__/Fair_fair.graphql.ts
@@ -6,12 +6,6 @@ declare const _Fair_fair$ref: unique symbol;
 export type Fair_fair$ref = typeof _Fair_fair$ref;
 export type Fair_fair = {
     readonly id: string;
-    readonly slug: string;
-    readonly organizer: {
-        readonly website: string | null;
-    } | null;
-    readonly about: string | null;
-    readonly ticketsLink: string | null;
     readonly " $fragmentRefs": FairDetail_fair$ref;
     readonly " $refType": Fair_fair$ref;
 };
@@ -32,45 +26,6 @@ const node: ReaderFragment = {
       "args": null,
       "storageKey": null
     },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "slug",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "LinkedField",
-      "alias": null,
-      "name": "organizer",
-      "storageKey": null,
-      "args": null,
-      "concreteType": "organizer",
-      "plural": false,
-      "selections": [
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "website",
-          "args": null,
-          "storageKey": null
-        }
-      ]
-    },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "about",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "ticketsLink",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "FragmentSpread",
       "name": "FairDetail_fair",
@@ -78,5 +33,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = '7d29e01ba0979b98334e0d51983fa962';
+(node as any).hash = '76379b672e62b0644edc02b901ea0bee';
 export default node;
diff --git a/src/__generated__/FairsQuery.graphql.ts b/src/__generated__/FairsQuery.graphql.ts
index a2ab4a88e..f13c90c43 100644
--- a/src/__generated__/FairsQuery.graphql.ts
+++ b/src/__generated__/FairsQuery.graphql.ts
@@ -49,8 +49,6 @@ fragment Fairs_me_1G22uz on Me {
           image {
             url
           }
-          start_at: startAt
-          end_at: endAt
           __typename
         }
         cursor
@@ -270,20 +268,6 @@ return {
                               }
                             ]
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "start_at",
-                            "name": "startAt",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "end_at",
-                            "name": "endAt",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": null,
@@ -348,7 +332,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FairsQuery",
-    "id": "090c7f1bfb0cfe1e52990e3e331735e0",
+    "id": "0db860c34b07fefd1a0cf48e5ceb780b",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FairsRail_fairs_module.graphql.ts b/src/__generated__/FairsRail_fairs_module.graphql.ts
index 1b86dde30..da4a58ad5 100644
--- a/src/__generated__/FairsRail_fairs_module.graphql.ts
+++ b/src/__generated__/FairsRail_fairs_module.graphql.ts
@@ -7,12 +7,10 @@ export type FairsRail_fairs_module = {
     readonly results: ReadonlyArray<{
         readonly id: string;
         readonly slug: string;
-        readonly name: string | null;
         readonly profile: {
             readonly slug: string;
         } | null;
-        readonly mobile_image: {
-            readonly internalID: string | null;
+        readonly mobileImage: {
             readonly url: string | null;
         } | null;
     } | null>;
@@ -53,13 +51,6 @@ return {
           "storageKey": null
         },
         (v0/*: any*/),
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "name",
-          "args": null,
-          "storageKey": null
-        },
         {
           "kind": "LinkedField",
           "alias": null,
@@ -74,20 +65,13 @@ return {
         },
         {
           "kind": "LinkedField",
-          "alias": "mobile_image",
+          "alias": null,
           "name": "mobileImage",
           "storageKey": null,
           "args": null,
           "concreteType": "Image",
           "plural": false,
           "selections": [
-            {
-              "kind": "ScalarField",
-              "alias": null,
-              "name": "internalID",
-              "args": null,
-              "storageKey": null
-            },
             {
               "kind": "ScalarField",
               "alias": null,
@@ -102,5 +86,5 @@ return {
   ]
 };
 })();
-(node as any).hash = '891328d3519eb2c3806bf60b5b88c27e';
+(node as any).hash = 'ddfb08dfd7c899b6a007b62b54b790cf';
 export default node;
diff --git a/src/__generated__/Fairs_me.graphql.ts b/src/__generated__/Fairs_me.graphql.ts
index 66956f975..79a717c59 100644
--- a/src/__generated__/Fairs_me.graphql.ts
+++ b/src/__generated__/Fairs_me.graphql.ts
@@ -23,8 +23,6 @@ export type Fairs_me = {
                     readonly image: {
                         readonly url: string | null;
                     } | null;
-                    readonly start_at: string | null;
-                    readonly end_at: string | null;
                 } | null;
             } | null> | null;
         } | null;
@@ -194,20 +192,6 @@ return {
                         }
                       ]
                     },
-                    {
-                      "kind": "ScalarField",
-                      "alias": "start_at",
-                      "name": "startAt",
-                      "args": null,
-                      "storageKey": null
-                    },
-                    {
-                      "kind": "ScalarField",
-                      "alias": "end_at",
-                      "name": "endAt",
-                      "args": null,
-                      "storageKey": null
-                    },
                     {
                       "kind": "ScalarField",
                       "alias": null,
@@ -258,5 +242,5 @@ return {
   ]
 };
 })();
-(node as any).hash = 'df7f0e3130d3edef52b1727370d5135a';
+(node as any).hash = 'c30bb3202e4cb46d63a032ab442fb3df';
 export default node;
diff --git a/src/__generated__/FavoriteArtistsQuery.graphql.ts b/src/__generated__/FavoriteArtistsQuery.graphql.ts
index 494fb9c71..f4665db05 100644
--- a/src/__generated__/FavoriteArtistsQuery.graphql.ts
+++ b/src/__generated__/FavoriteArtistsQuery.graphql.ts
@@ -26,14 +26,9 @@ query FavoriteArtistsQuery {
 fragment Artists_me on Me {
   followsAndSaves {
     artists: artistsConnection(first: 10) {
-      pageInfo {
-        endCursor
-        hasNextPage
-      }
       edges {
         node {
           artist {
-            slug
             id
             name
             href
@@ -46,6 +41,10 @@ fragment Artists_me on Me {
         }
         cursor
       }
+      pageInfo {
+        endCursor
+        hasNextPage
+      }
     }
   }
 }
@@ -125,31 +124,6 @@ return {
                 "concreteType": "FollowArtistConnection",
                 "plural": false,
                 "selections": [
-                  {
-                    "kind": "LinkedField",
-                    "alias": null,
-                    "name": "pageInfo",
-                    "storageKey": null,
-                    "args": null,
-                    "concreteType": "PageInfo",
-                    "plural": false,
-                    "selections": [
-                      {
-                        "kind": "ScalarField",
-                        "alias": null,
-                        "name": "endCursor",
-                        "args": null,
-                        "storageKey": null
-                      },
-                      {
-                        "kind": "ScalarField",
-                        "alias": null,
-                        "name": "hasNextPage",
-                        "args": null,
-                        "storageKey": null
-                      }
-                    ]
-                  },
                   {
                     "kind": "LinkedField",
                     "alias": null,
@@ -177,13 +151,6 @@ return {
                             "concreteType": "Artist",
                             "plural": false,
                             "selections": [
-                              {
-                                "kind": "ScalarField",
-                                "alias": null,
-                                "name": "slug",
-                                "args": null,
-                                "storageKey": null
-                              },
                               (v1/*: any*/),
                               {
                                 "kind": "ScalarField",
@@ -237,6 +204,31 @@ return {
                         "storageKey": null
                       }
                     ]
+                  },
+                  {
+                    "kind": "LinkedField",
+                    "alias": null,
+                    "name": "pageInfo",
+                    "storageKey": null,
+                    "args": null,
+                    "concreteType": "PageInfo",
+                    "plural": false,
+                    "selections": [
+                      {
+                        "kind": "ScalarField",
+                        "alias": null,
+                        "name": "endCursor",
+                        "args": null,
+                        "storageKey": null
+                      },
+                      {
+                        "kind": "ScalarField",
+                        "alias": null,
+                        "name": "hasNextPage",
+                        "args": null,
+                        "storageKey": null
+                      }
+                    ]
                   }
                 ]
               },
@@ -259,7 +251,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FavoriteArtistsQuery",
-    "id": "350e55b3cbaf6eae547ff4030aa3a319",
+    "id": "061a9341a1ac948f1dbd1c2d75adbe43",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FavoriteArtworksQuery.graphql.ts b/src/__generated__/FavoriteArtworksQuery.graphql.ts
index d7d8bd4eb..4400e80cc 100644
--- a/src/__generated__/FavoriteArtworksQuery.graphql.ts
+++ b/src/__generated__/FavoriteArtworksQuery.graphql.ts
@@ -46,7 +46,6 @@ fragment Artworks_me on Me {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -57,15 +56,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -244,13 +240,6 @@ return {
                         "plural": false,
                         "selections": [
                           (v1/*: any*/),
-                          {
-                            "kind": "ScalarField",
-                            "alias": null,
-                            "name": "slug",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "LinkedField",
                             "alias": null,
@@ -303,13 +292,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_in_auction",
-                            "name": "isInAuction",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_biddable",
@@ -331,6 +313,13 @@ return {
                             "args": null,
                             "storageKey": null
                           },
+                          {
+                            "kind": "ScalarField",
+                            "alias": null,
+                            "name": "slug",
+                            "args": null,
+                            "storageKey": null
+                          },
                           {
                             "kind": "LinkedField",
                             "alias": null,
@@ -347,20 +336,6 @@ return {
                                 "args": null,
                                 "storageKey": null
                               },
-                              {
-                                "kind": "ScalarField",
-                                "alias": "is_live_open",
-                                "name": "isLiveOpen",
-                                "args": null,
-                                "storageKey": null
-                              },
-                              {
-                                "kind": "ScalarField",
-                                "alias": "is_open",
-                                "name": "isOpen",
-                                "args": null,
-                                "storageKey": null
-                              },
                               {
                                 "kind": "ScalarField",
                                 "alias": "is_closed",
@@ -482,7 +457,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FavoriteArtworksQuery",
-    "id": "e928bb2c7379715a89aaf2ce42f9cb66",
+    "id": "f1cec110977c7b8026cba7481b97d38d",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FavoriteCategoriesQuery.graphql.ts b/src/__generated__/FavoriteCategoriesQuery.graphql.ts
index 6c6fd90d4..48e1fac6d 100644
--- a/src/__generated__/FavoriteCategoriesQuery.graphql.ts
+++ b/src/__generated__/FavoriteCategoriesQuery.graphql.ts
@@ -33,7 +33,6 @@ fragment Categories_me on Me {
       edges {
         node {
           gene {
-            slug
             id
             name
             href
@@ -177,13 +176,6 @@ return {
                             "concreteType": "Gene",
                             "plural": false,
                             "selections": [
-                              {
-                                "kind": "ScalarField",
-                                "alias": null,
-                                "name": "slug",
-                                "args": null,
-                                "storageKey": null
-                              },
                               (v1/*: any*/),
                               {
                                 "kind": "ScalarField",
@@ -259,7 +251,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FavoriteCategoriesQuery",
-    "id": "f312805c2a946c3fcded0303eeacdafe",
+    "id": "a2ef576b1d9097e449c1b55acc829a34",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FavoriteFairsQuery.graphql.ts b/src/__generated__/FavoriteFairsQuery.graphql.ts
index 977a81f43..ca423f2e0 100644
--- a/src/__generated__/FavoriteFairsQuery.graphql.ts
+++ b/src/__generated__/FavoriteFairsQuery.graphql.ts
@@ -43,8 +43,6 @@ fragment Fairs_me on Me {
           image {
             url
           }
-          start_at: startAt
-          end_at: endAt
           __typename
         }
         cursor
@@ -239,20 +237,6 @@ return {
                               }
                             ]
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "start_at",
-                            "name": "startAt",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "end_at",
-                            "name": "endAt",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": null,
@@ -317,7 +301,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FavoriteFairsQuery",
-    "id": "ec5271410da1859f9c565ee5b9f750e4",
+    "id": "47abc6e55498189a7a9ebf3b14c90599",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FavoriteShowsQuery.graphql.ts b/src/__generated__/FavoriteShowsQuery.graphql.ts
index 9240539ab..a68424ad2 100644
--- a/src/__generated__/FavoriteShowsQuery.graphql.ts
+++ b/src/__generated__/FavoriteShowsQuery.graphql.ts
@@ -74,10 +74,8 @@ fragment ShowItemRow_show on Show {
   status
   cover_image: coverImage {
     url
-    aspect_ratio: aspectRatio
   }
   is_fair_booth: isFairBooth
-  start_at: startAt
   end_at: endAt
 }
 */
@@ -349,13 +347,6 @@ return {
                                 "name": "url",
                                 "args": null,
                                 "storageKey": null
-                              },
-                              {
-                                "kind": "ScalarField",
-                                "alias": "aspect_ratio",
-                                "name": "aspectRatio",
-                                "args": null,
-                                "storageKey": null
                               }
                             ]
                           },
@@ -366,13 +357,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "start_at",
-                            "name": "startAt",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "end_at",
@@ -413,7 +397,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FavoriteShowsQuery",
-    "id": "b11c8a798c8d8923250dfea87cb9987f",
+    "id": "9ecd89570c0c0540ab703b2aa64b3e84",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FilteredInfiniteScrollGridQuery.graphql.ts b/src/__generated__/FilteredInfiniteScrollGridQuery.graphql.ts
index e510e92d2..c85f557f6 100644
--- a/src/__generated__/FilteredInfiniteScrollGridQuery.graphql.ts
+++ b/src/__generated__/FilteredInfiniteScrollGridQuery.graphql.ts
@@ -44,7 +44,6 @@ fragment FilteredInfiniteScrollGrid_entity_zoKjV on EntityWithFilterArtworksConn
     edges {
       node {
         id
-        slug
         __typename
       }
       cursor
@@ -95,15 +94,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -378,13 +374,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -422,20 +411,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_live_open",
-                            "name": "isLiveOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_open",
-                            "name": "isOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -621,7 +596,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "FilteredInfiniteScrollGridQuery",
-    "id": "ce4a715a058a1bd748a7d419e8d2f46b",
+    "id": "2bfee101a0e4eeb7336e17877772c54c",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/FilteredInfiniteScrollGrid_entity.graphql.ts b/src/__generated__/FilteredInfiniteScrollGrid_entity.graphql.ts
index c86d35b29..d4a6f12b1 100644
--- a/src/__generated__/FilteredInfiniteScrollGrid_entity.graphql.ts
+++ b/src/__generated__/FilteredInfiniteScrollGrid_entity.graphql.ts
@@ -11,7 +11,6 @@ export type FilteredInfiniteScrollGrid_entity = {
         readonly edges: ReadonlyArray<{
             readonly node: {
                 readonly id: string;
-                readonly slug: string;
             } | null;
         } | null> | null;
         readonly " $fragmentRefs": Filters_filteredArtworks$ref & InfiniteScrollArtworksGrid_connection$ref;
@@ -121,13 +120,6 @@ return {
               "plural": false,
               "selections": [
                 (v0/*: any*/),
-                {
-                  "kind": "ScalarField",
-                  "alias": null,
-                  "name": "slug",
-                  "args": null,
-                  "storageKey": null
-                },
                 {
                   "kind": "ScalarField",
                   "alias": null,
@@ -186,5 +178,5 @@ return {
   ]
 };
 })();
-(node as any).hash = '6fb12e1c4c55eacc3a06f0dd31acf3b9';
+(node as any).hash = '299cf05b1674172e889e1edb203eb98e';
 export default node;
diff --git a/src/__generated__/ForYouRefetchQuery.graphql.ts b/src/__generated__/ForYouRefetchQuery.graphql.ts
index ac595264f..b032d9eea 100644
--- a/src/__generated__/ForYouRefetchQuery.graphql.ts
+++ b/src/__generated__/ForYouRefetchQuery.graphql.ts
@@ -92,13 +92,11 @@ fragment FairsRail_fairs_module on HomePageFairsModule {
   results {
     id
     slug
-    name
     profile {
       slug
       id
     }
-    mobile_image: mobileImage {
-      internalID
+    mobileImage {
       url
     }
   }
@@ -160,7 +158,6 @@ fragment ArtworkCarouselHeader_rail on HomePageArtworkModule {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -171,15 +168,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -523,7 +517,6 @@ return {
                 "plural": true,
                 "selections": [
                   (v0/*: any*/),
-                  (v5/*: any*/),
                   {
                     "kind": "LinkedField",
                     "alias": null,
@@ -558,13 +551,6 @@ return {
                     "args": null,
                     "storageKey": null
                   },
-                  {
-                    "kind": "ScalarField",
-                    "alias": "is_in_auction",
-                    "name": "isInAuction",
-                    "args": null,
-                    "storageKey": null
-                  },
                   {
                     "kind": "ScalarField",
                     "alias": "is_biddable",
@@ -586,6 +572,7 @@ return {
                     "args": null,
                     "storageKey": null
                   },
+                  (v5/*: any*/),
                   {
                     "kind": "LinkedField",
                     "alias": null,
@@ -602,20 +589,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_live_open",
-                        "name": "isLiveOpen",
-                        "args": null,
-                        "storageKey": null
-                      },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_open",
-                        "name": "isOpen",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_closed",
@@ -769,7 +742,6 @@ return {
                 "selections": [
                   (v0/*: any*/),
                   (v5/*: any*/),
-                  (v7/*: any*/),
                   {
                     "kind": "LinkedField",
                     "alias": null,
@@ -785,14 +757,13 @@ return {
                   },
                   {
                     "kind": "LinkedField",
-                    "alias": "mobile_image",
+                    "alias": null,
                     "name": "mobileImage",
                     "storageKey": null,
                     "args": null,
                     "concreteType": "Image",
                     "plural": false,
                     "selections": [
-                      (v4/*: any*/),
                       {
                         "kind": "ScalarField",
                         "alias": null,
@@ -813,7 +784,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ForYouRefetchQuery",
-    "id": "5172e7b282bccabcc969e8cb36633544",
+    "id": "eb84b9ee3570700eaac846a037164132",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/GeneQuery.graphql.ts b/src/__generated__/GeneQuery.graphql.ts
index ebc77071b..3d3fb5995 100644
--- a/src/__generated__/GeneQuery.graphql.ts
+++ b/src/__generated__/GeneQuery.graphql.ts
@@ -121,15 +121,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -168,7 +165,7 @@ fragment RelatedArtist_artist on Artist {
   href
   name
   counts {
-    for_sale_artworks: forSaleArtworks
+    forSaleArtworks
     artworks
   }
   image {
@@ -432,7 +429,7 @@ return {
                     "selections": [
                       {
                         "kind": "ScalarField",
-                        "alias": "for_sale_artworks",
+                        "alias": null,
                         "name": "forSaleArtworks",
                         "args": null,
                         "storageKey": null
@@ -598,13 +595,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_in_auction",
-                            "name": "isInAuction",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_biddable",
@@ -642,20 +632,6 @@ return {
                                 "args": null,
                                 "storageKey": null
                               },
-                              {
-                                "kind": "ScalarField",
-                                "alias": "is_live_open",
-                                "name": "isLiveOpen",
-                                "args": null,
-                                "storageKey": null
-                              },
-                              {
-                                "kind": "ScalarField",
-                                "alias": "is_open",
-                                "name": "isOpen",
-                                "args": null,
-                                "storageKey": null
-                              },
                               {
                                 "kind": "ScalarField",
                                 "alias": "is_closed",
@@ -802,7 +778,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "GeneQuery",
-    "id": "1b26881965feca5694937ecc9e4fbeba",
+    "id": "49fbcf23b33529059885936dcd6a97f2",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/GenericGrid_artworks.graphql.ts b/src/__generated__/GenericGrid_artworks.graphql.ts
index bda0cbe03..1c4a2782e 100644
--- a/src/__generated__/GenericGrid_artworks.graphql.ts
+++ b/src/__generated__/GenericGrid_artworks.graphql.ts
@@ -6,7 +6,6 @@ declare const _GenericGrid_artworks$ref: unique symbol;
 export type GenericGrid_artworks$ref = typeof _GenericGrid_artworks$ref;
 export type GenericGrid_artworks = ReadonlyArray<{
     readonly id: string;
-    readonly slug: string;
     readonly image: {
         readonly aspect_ratio: number;
     } | null;
@@ -32,13 +31,6 @@ const node: ReaderFragment = {
       "args": null,
       "storageKey": null
     },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "slug",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "LinkedField",
       "alias": null,
@@ -64,5 +56,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = 'b076e10dbd159cf8e14ceb376f904008';
+(node as any).hash = '52d9394f994a4e3110dc4747d1ec410a';
 export default node;
diff --git a/src/__generated__/Header_sale.graphql.ts b/src/__generated__/Header_sale.graphql.ts
index 8b89efc43..7d2df9ea6 100644
--- a/src/__generated__/Header_sale.graphql.ts
+++ b/src/__generated__/Header_sale.graphql.ts
@@ -5,9 +5,6 @@ declare const _Header_sale$ref: unique symbol;
 export type Header_sale$ref = typeof _Header_sale$ref;
 export type Header_sale = {
     readonly name: string | null;
-    readonly cover_image: {
-        readonly href: string | null;
-    } | null;
     readonly " $refType": Header_sale$ref;
 };
 
@@ -26,26 +23,8 @@ const node: ReaderFragment = {
       "name": "name",
       "args": null,
       "storageKey": null
-    },
-    {
-      "kind": "LinkedField",
-      "alias": "cover_image",
-      "name": "coverImage",
-      "storageKey": null,
-      "args": null,
-      "concreteType": "Image",
-      "plural": false,
-      "selections": [
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "href",
-          "args": null,
-          "storageKey": null
-        }
-      ]
     }
   ]
 };
-(node as any).hash = '78331b4e876349d38e226db91dece950';
+(node as any).hash = 'd690eb6814de4de0a410f482c3798de8';
 export default node;
diff --git a/src/__generated__/HeroUnits_hero_units.graphql.ts b/src/__generated__/HeroUnits_hero_units.graphql.ts
index 611fee119..b921fd70a 100644
--- a/src/__generated__/HeroUnits_hero_units.graphql.ts
+++ b/src/__generated__/HeroUnits_hero_units.graphql.ts
@@ -5,8 +5,8 @@ declare const _HeroUnits_hero_units$ref: unique symbol;
 export type HeroUnits_hero_units$ref = typeof _HeroUnits_hero_units$ref;
 export type HeroUnits_hero_units = ReadonlyArray<{
     readonly id: string;
-    readonly href: string | null;
     readonly title: string | null;
+    readonly href: string | null;
     readonly heading: string | null;
     readonly narrow_image_url: string | null;
     readonly wide_image_url: string | null;
@@ -34,14 +34,14 @@ const node: ReaderFragment = {
     {
       "kind": "ScalarField",
       "alias": null,
-      "name": "href",
+      "name": "title",
       "args": null,
       "storageKey": null
     },
     {
       "kind": "ScalarField",
       "alias": null,
-      "name": "title",
+      "name": "href",
       "args": null,
       "storageKey": null
     },
@@ -80,5 +80,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = '90bba728424a5ef6818b6650fcda3f76';
+(node as any).hash = '4f027cedec5f897a10440af5d716eaf0';
 export default node;
diff --git a/src/__generated__/ImageCarouselTestsQuery.graphql.ts b/src/__generated__/ImageCarouselTestsQuery.graphql.ts
index 0dc21d252..a3c623406 100644
--- a/src/__generated__/ImageCarouselTestsQuery.graphql.ts
+++ b/src/__generated__/ImageCarouselTestsQuery.graphql.ts
@@ -28,7 +28,7 @@ query ImageCarouselTestsQuery {
 }
 
 fragment ImageCarousel_images on Image {
-  image_url: imageURL
+  url: imageURL
   width
   height
   deepZoom {
@@ -116,7 +116,7 @@ return {
             "selections": [
               {
                 "kind": "ScalarField",
-                "alias": "image_url",
+                "alias": "url",
                 "name": "imageURL",
                 "args": null,
                 "storageKey": null
@@ -219,7 +219,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ImageCarouselTestsQuery",
-    "id": "17c5328bb5c648f21dcba00f6627e56f",
+    "id": "23ef66a0dbbd53bcf52766b0e420c2db",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/ImageCarousel_images.graphql.ts b/src/__generated__/ImageCarousel_images.graphql.ts
index 589e575fc..300b677c8 100644
--- a/src/__generated__/ImageCarousel_images.graphql.ts
+++ b/src/__generated__/ImageCarousel_images.graphql.ts
@@ -4,7 +4,7 @@ import { ReaderFragment } from "relay-runtime";
 declare const _ImageCarousel_images$ref: unique symbol;
 export type ImageCarousel_images$ref = typeof _ImageCarousel_images$ref;
 export type ImageCarousel_images = ReadonlyArray<{
-    readonly image_url: string | null;
+    readonly url: string | null;
     readonly width: number | null;
     readonly height: number | null;
     readonly deepZoom: {
@@ -34,7 +34,7 @@ const node: ReaderFragment = {
   "selections": [
     {
       "kind": "ScalarField",
-      "alias": "image_url",
+      "alias": "url",
       "name": "imageURL",
       "args": null,
       "storageKey": null
@@ -123,5 +123,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = 'bf73dd1dcad59fcf94c60e75a95292ce';
+(node as any).hash = '539c0a5412f83fe58b93630093817afd';
 export default node;
diff --git a/src/__generated__/InboxQuery.graphql.ts b/src/__generated__/InboxQuery.graphql.ts
index 7874f181a..b59aedec2 100644
--- a/src/__generated__/InboxQuery.graphql.ts
+++ b/src/__generated__/InboxQuery.graphql.ts
@@ -80,9 +80,6 @@ fragment ActiveBid_bid on LotStanding {
   }
   most_recent_bid: mostRecentBid {
     id
-    max_bid: maxBid {
-      display
-    }
     sale_artwork: saleArtwork {
       artwork {
         href
@@ -111,8 +108,8 @@ fragment ConversationSnippet_conversation on Conversation {
     name
     id
   }
-  last_message: lastMessage
-  last_message_at: lastMessageAt
+  lastMessage
+  lastMessageAt
   unread
   items {
     item {
@@ -120,7 +117,7 @@ fragment ConversationSnippet_conversation on Conversation {
       ... on Artwork {
         date
         title
-        artist_names: artistNames
+        artistNames
         image {
           url
         }
@@ -131,7 +128,7 @@ fragment ConversationSnippet_conversation on Conversation {
           id
         }
         name
-        cover_image: coverImage {
+        coverImage {
           url
         }
       }
@@ -159,23 +156,14 @@ v1 = {
   "args": null,
   "storageKey": null
 },
-v2 = [
-  {
-    "kind": "ScalarField",
-    "alias": null,
-    "name": "display",
-    "args": null,
-    "storageKey": null
-  }
-],
-v3 = {
+v2 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "href",
   "args": null,
   "storageKey": null
 },
-v4 = [
+v3 = [
   {
     "kind": "ScalarField",
     "alias": null,
@@ -184,7 +172,7 @@ v4 = [
     "storageKey": null
   }
 ],
-v5 = {
+v4 = {
   "kind": "LinkedField",
   "alias": null,
   "name": "image",
@@ -192,23 +180,16 @@ v5 = {
   "args": null,
   "concreteType": "Image",
   "plural": false,
-  "selections": (v4/*: any*/)
-},
-v6 = {
-  "kind": "ScalarField",
-  "alias": "artist_names",
-  "name": "artistNames",
-  "args": null,
-  "storageKey": null
+  "selections": (v3/*: any*/)
 },
-v7 = {
+v5 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "internalID",
   "args": null,
   "storageKey": null
 },
-v8 = [
+v6 = [
   {
     "kind": "Literal",
     "name": "after",
@@ -220,18 +201,18 @@ v8 = [
     "value": 10
   }
 ],
-v9 = {
+v7 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "name",
   "args": null,
   "storageKey": null
 },
-v10 = [
-  (v9/*: any*/),
+v8 = [
+  (v7/*: any*/),
   (v1/*: any*/)
 ],
-v11 = {
+v9 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "__typename",
@@ -304,16 +285,6 @@ return {
                 "plural": false,
                 "selections": [
                   (v1/*: any*/),
-                  {
-                    "kind": "LinkedField",
-                    "alias": "max_bid",
-                    "name": "maxBid",
-                    "storageKey": null,
-                    "args": null,
-                    "concreteType": "BidderPositionMaxBid",
-                    "plural": false,
-                    "selections": (v2/*: any*/)
-                  },
                   {
                     "kind": "LinkedField",
                     "alias": "sale_artwork",
@@ -332,9 +303,15 @@ return {
                         "concreteType": "Artwork",
                         "plural": false,
                         "selections": [
-                          (v3/*: any*/),
-                          (v5/*: any*/),
-                          (v6/*: any*/),
+                          (v2/*: any*/),
+                          (v4/*: any*/),
+                          {
+                            "kind": "ScalarField",
+                            "alias": "artist_names",
+                            "name": "artistNames",
+                            "args": null,
+                            "storageKey": null
+                          },
                           (v1/*: any*/)
                         ]
                       },
@@ -364,7 +341,15 @@ return {
                         "args": null,
                         "concreteType": "SaleArtworkHighestBid",
                         "plural": false,
-                        "selections": (v2/*: any*/)
+                        "selections": [
+                          {
+                            "kind": "ScalarField",
+                            "alias": null,
+                            "name": "display",
+                            "args": null,
+                            "storageKey": null
+                          }
+                        ]
                       },
                       {
                         "kind": "ScalarField",
@@ -401,7 +386,7 @@ return {
                 "concreteType": "Sale",
                 "plural": false,
                 "selections": [
-                  (v3/*: any*/),
+                  (v2/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": "is_live_open",
@@ -447,7 +432,7 @@ return {
                     "concreteType": "Conversation",
                     "plural": false,
                     "selections": [
-                      (v7/*: any*/),
+                      (v5/*: any*/),
                       (v1/*: any*/)
                     ]
                   }
@@ -460,7 +445,7 @@ return {
             "alias": "conversations",
             "name": "conversationsConnection",
             "storageKey": "conversationsConnection(after:\"\",first:10)",
-            "args": (v8/*: any*/),
+            "args": (v6/*: any*/),
             "concreteType": "ConversationConnection",
             "plural": false,
             "selections": [
@@ -507,7 +492,7 @@ return {
                     "concreteType": "Conversation",
                     "plural": false,
                     "selections": [
-                      (v7/*: any*/),
+                      (v5/*: any*/),
                       {
                         "kind": "ScalarField",
                         "alias": "last_message",
@@ -523,11 +508,18 @@ return {
                         "args": null,
                         "concreteType": "ConversationResponder",
                         "plural": false,
-                        "selections": (v10/*: any*/)
+                        "selections": (v8/*: any*/)
                       },
                       {
                         "kind": "ScalarField",
-                        "alias": "last_message_at",
+                        "alias": null,
+                        "name": "lastMessage",
+                        "args": null,
+                        "storageKey": null
+                      },
+                      {
+                        "kind": "ScalarField",
+                        "alias": null,
                         "name": "lastMessageAt",
                         "args": null,
                         "storageKey": null
@@ -557,7 +549,7 @@ return {
                             "concreteType": null,
                             "plural": false,
                             "selections": [
-                              (v11/*: any*/),
+                              (v9/*: any*/),
                               (v1/*: any*/),
                               {
                                 "kind": "InlineFragment",
@@ -577,8 +569,14 @@ return {
                                     "args": null,
                                     "storageKey": null
                                   },
-                                  (v6/*: any*/),
-                                  (v5/*: any*/)
+                                  {
+                                    "kind": "ScalarField",
+                                    "alias": null,
+                                    "name": "artistNames",
+                                    "args": null,
+                                    "storageKey": null
+                                  },
+                                  (v4/*: any*/)
                                 ]
                               },
                               {
@@ -593,18 +591,18 @@ return {
                                     "args": null,
                                     "concreteType": "Fair",
                                     "plural": false,
-                                    "selections": (v10/*: any*/)
+                                    "selections": (v8/*: any*/)
                                   },
-                                  (v9/*: any*/),
+                                  (v7/*: any*/),
                                   {
                                     "kind": "LinkedField",
-                                    "alias": "cover_image",
+                                    "alias": null,
                                     "name": "coverImage",
                                     "storageKey": null,
                                     "args": null,
                                     "concreteType": "Image",
                                     "plural": false,
-                                    "selections": (v4/*: any*/)
+                                    "selections": (v3/*: any*/)
                                   }
                                 ]
                               }
@@ -613,7 +611,7 @@ return {
                         ]
                       },
                       (v1/*: any*/),
-                      (v11/*: any*/)
+                      (v9/*: any*/)
                     ]
                   },
                   {
@@ -631,7 +629,7 @@ return {
             "kind": "LinkedHandle",
             "alias": "conversations",
             "name": "conversationsConnection",
-            "args": (v8/*: any*/),
+            "args": (v6/*: any*/),
             "handle": "connection",
             "key": "Conversations_conversations",
             "filters": null
@@ -644,7 +642,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "InboxQuery",
-    "id": "aa8e8f8bcda3e194990a006b1b7fea6e",
+    "id": "0c076583720e9dccc2883ad76b29dc55",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/InboxRefetchQuery.graphql.ts b/src/__generated__/InboxRefetchQuery.graphql.ts
index fa6cf5ded..ff719e873 100644
--- a/src/__generated__/InboxRefetchQuery.graphql.ts
+++ b/src/__generated__/InboxRefetchQuery.graphql.ts
@@ -78,9 +78,6 @@ fragment ActiveBid_bid on LotStanding {
   }
   most_recent_bid: mostRecentBid {
     id
-    max_bid: maxBid {
-      display
-    }
     sale_artwork: saleArtwork {
       artwork {
         href
@@ -109,8 +106,8 @@ fragment ConversationSnippet_conversation on Conversation {
     name
     id
   }
-  last_message: lastMessage
-  last_message_at: lastMessageAt
+  lastMessage
+  lastMessageAt
   unread
   items {
     item {
@@ -118,7 +115,7 @@ fragment ConversationSnippet_conversation on Conversation {
       ... on Artwork {
         date
         title
-        artist_names: artistNames
+        artistNames
         image {
           url
         }
@@ -129,7 +126,7 @@ fragment ConversationSnippet_conversation on Conversation {
           id
         }
         name
-        cover_image: coverImage {
+        coverImage {
           url
         }
       }
@@ -149,23 +146,14 @@ var v0 = {
   "args": null,
   "storageKey": null
 },
-v1 = [
-  {
-    "kind": "ScalarField",
-    "alias": null,
-    "name": "display",
-    "args": null,
-    "storageKey": null
-  }
-],
-v2 = {
+v1 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "href",
   "args": null,
   "storageKey": null
 },
-v3 = [
+v2 = [
   {
     "kind": "ScalarField",
     "alias": null,
@@ -174,7 +162,7 @@ v3 = [
     "storageKey": null
   }
 ],
-v4 = {
+v3 = {
   "kind": "LinkedField",
   "alias": null,
   "name": "image",
@@ -182,23 +170,16 @@ v4 = {
   "args": null,
   "concreteType": "Image",
   "plural": false,
-  "selections": (v3/*: any*/)
-},
-v5 = {
-  "kind": "ScalarField",
-  "alias": "artist_names",
-  "name": "artistNames",
-  "args": null,
-  "storageKey": null
+  "selections": (v2/*: any*/)
 },
-v6 = {
+v4 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "internalID",
   "args": null,
   "storageKey": null
 },
-v7 = [
+v5 = [
   {
     "kind": "Literal",
     "name": "after",
@@ -210,18 +191,18 @@ v7 = [
     "value": 10
   }
 ],
-v8 = {
+v6 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "name",
   "args": null,
   "storageKey": null
 },
-v9 = [
-  (v8/*: any*/),
+v7 = [
+  (v6/*: any*/),
   (v0/*: any*/)
 ],
-v10 = {
+v8 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "__typename",
@@ -294,16 +275,6 @@ return {
                 "plural": false,
                 "selections": [
                   (v0/*: any*/),
-                  {
-                    "kind": "LinkedField",
-                    "alias": "max_bid",
-                    "name": "maxBid",
-                    "storageKey": null,
-                    "args": null,
-                    "concreteType": "BidderPositionMaxBid",
-                    "plural": false,
-                    "selections": (v1/*: any*/)
-                  },
                   {
                     "kind": "LinkedField",
                     "alias": "sale_artwork",
@@ -322,9 +293,15 @@ return {
                         "concreteType": "Artwork",
                         "plural": false,
                         "selections": [
-                          (v2/*: any*/),
-                          (v4/*: any*/),
-                          (v5/*: any*/),
+                          (v1/*: any*/),
+                          (v3/*: any*/),
+                          {
+                            "kind": "ScalarField",
+                            "alias": "artist_names",
+                            "name": "artistNames",
+                            "args": null,
+                            "storageKey": null
+                          },
                           (v0/*: any*/)
                         ]
                       },
@@ -354,7 +331,15 @@ return {
                         "args": null,
                         "concreteType": "SaleArtworkHighestBid",
                         "plural": false,
-                        "selections": (v1/*: any*/)
+                        "selections": [
+                          {
+                            "kind": "ScalarField",
+                            "alias": null,
+                            "name": "display",
+                            "args": null,
+                            "storageKey": null
+                          }
+                        ]
                       },
                       {
                         "kind": "ScalarField",
@@ -391,7 +376,7 @@ return {
                 "concreteType": "Sale",
                 "plural": false,
                 "selections": [
-                  (v2/*: any*/),
+                  (v1/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": "is_live_open",
@@ -437,7 +422,7 @@ return {
                     "concreteType": "Conversation",
                     "plural": false,
                     "selections": [
-                      (v6/*: any*/),
+                      (v4/*: any*/),
                       (v0/*: any*/)
                     ]
                   }
@@ -450,7 +435,7 @@ return {
             "alias": "conversations",
             "name": "conversationsConnection",
             "storageKey": "conversationsConnection(after:\"\",first:10)",
-            "args": (v7/*: any*/),
+            "args": (v5/*: any*/),
             "concreteType": "ConversationConnection",
             "plural": false,
             "selections": [
@@ -497,7 +482,7 @@ return {
                     "concreteType": "Conversation",
                     "plural": false,
                     "selections": [
-                      (v6/*: any*/),
+                      (v4/*: any*/),
                       {
                         "kind": "ScalarField",
                         "alias": "last_message",
@@ -513,11 +498,18 @@ return {
                         "args": null,
                         "concreteType": "ConversationResponder",
                         "plural": false,
-                        "selections": (v9/*: any*/)
+                        "selections": (v7/*: any*/)
                       },
                       {
                         "kind": "ScalarField",
-                        "alias": "last_message_at",
+                        "alias": null,
+                        "name": "lastMessage",
+                        "args": null,
+                        "storageKey": null
+                      },
+                      {
+                        "kind": "ScalarField",
+                        "alias": null,
                         "name": "lastMessageAt",
                         "args": null,
                         "storageKey": null
@@ -547,7 +539,7 @@ return {
                             "concreteType": null,
                             "plural": false,
                             "selections": [
-                              (v10/*: any*/),
+                              (v8/*: any*/),
                               (v0/*: any*/),
                               {
                                 "kind": "InlineFragment",
@@ -567,8 +559,14 @@ return {
                                     "args": null,
                                     "storageKey": null
                                   },
-                                  (v5/*: any*/),
-                                  (v4/*: any*/)
+                                  {
+                                    "kind": "ScalarField",
+                                    "alias": null,
+                                    "name": "artistNames",
+                                    "args": null,
+                                    "storageKey": null
+                                  },
+                                  (v3/*: any*/)
                                 ]
                               },
                               {
@@ -583,18 +581,18 @@ return {
                                     "args": null,
                                     "concreteType": "Fair",
                                     "plural": false,
-                                    "selections": (v9/*: any*/)
+                                    "selections": (v7/*: any*/)
                                   },
-                                  (v8/*: any*/),
+                                  (v6/*: any*/),
                                   {
                                     "kind": "LinkedField",
-                                    "alias": "cover_image",
+                                    "alias": null,
                                     "name": "coverImage",
                                     "storageKey": null,
                                     "args": null,
                                     "concreteType": "Image",
                                     "plural": false,
-                                    "selections": (v3/*: any*/)
+                                    "selections": (v2/*: any*/)
                                   }
                                 ]
                               }
@@ -603,7 +601,7 @@ return {
                         ]
                       },
                       (v0/*: any*/),
-                      (v10/*: any*/)
+                      (v8/*: any*/)
                     ]
                   },
                   {
@@ -621,7 +619,7 @@ return {
             "kind": "LinkedHandle",
             "alias": "conversations",
             "name": "conversationsConnection",
-            "args": (v7/*: any*/),
+            "args": (v5/*: any*/),
             "handle": "connection",
             "key": "Conversations_conversations",
             "filters": null
@@ -634,7 +632,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "InboxRefetchQuery",
-    "id": "056a07a9d4b4e25e8ace5d965c930fa5",
+    "id": "c4388a030cbb14d8469cb254e9a1cc53",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/LotsByFollowedArtistsQuery.graphql.ts b/src/__generated__/LotsByFollowedArtistsQuery.graphql.ts
index 51326a1c1..baad75bc3 100644
--- a/src/__generated__/LotsByFollowedArtistsQuery.graphql.ts
+++ b/src/__generated__/LotsByFollowedArtistsQuery.graphql.ts
@@ -71,15 +71,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -309,13 +306,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -353,20 +343,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_live_open",
-                            "name": "isLiveOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_open",
-                            "name": "isOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -506,7 +482,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "LotsByFollowedArtistsQuery",
-    "id": "7bb05c55dc75ddb9b229a4b618e7ee40",
+    "id": "f2aaf56f3cf74d34c8b4e9b2e7ae7835",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/MoreInfoQuery.graphql.ts b/src/__generated__/MoreInfoQuery.graphql.ts
index 8f1e526ad..f2a88aaf9 100644
--- a/src/__generated__/MoreInfoQuery.graphql.ts
+++ b/src/__generated__/MoreInfoQuery.graphql.ts
@@ -30,7 +30,6 @@ query MoreInfoQuery(
 fragment MoreInfo_show on Show {
   internalID
   slug
-  exhibition_period: exhibitionPeriod
   pressReleaseUrl
   openingReceptionText
   partner {
@@ -138,13 +137,6 @@ return {
             "args": null,
             "storageKey": null
           },
-          {
-            "kind": "ScalarField",
-            "alias": "exhibition_period",
-            "name": "exhibitionPeriod",
-            "args": null,
-            "storageKey": null
-          },
           {
             "kind": "ScalarField",
             "alias": null,
@@ -252,7 +244,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "MoreInfoQuery",
-    "id": "c1ba96606665df6d8db595bd4f9db631",
+    "id": "042f01be8d485251cc5959b1c5663a5d",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/MoreInfoTestsQuery.graphql.ts b/src/__generated__/MoreInfoTestsQuery.graphql.ts
index 6e678530a..e42a19f79 100644
--- a/src/__generated__/MoreInfoTestsQuery.graphql.ts
+++ b/src/__generated__/MoreInfoTestsQuery.graphql.ts
@@ -26,7 +26,6 @@ query MoreInfoTestsQuery {
 fragment MoreInfo_show on Show {
   internalID
   slug
-  exhibition_period: exhibitionPeriod
   pressReleaseUrl
   openingReceptionText
   partner {
@@ -126,13 +125,6 @@ return {
             "args": null,
             "storageKey": null
           },
-          {
-            "kind": "ScalarField",
-            "alias": "exhibition_period",
-            "name": "exhibitionPeriod",
-            "args": null,
-            "storageKey": null
-          },
           {
             "kind": "ScalarField",
             "alias": null,
@@ -240,7 +232,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "MoreInfoTestsQuery",
-    "id": "ccf4c6a1f56249c3b3ebaec8d757c541",
+    "id": "8335a74249c2d3565dc22caa88ba4acd",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/MoreInfo_show.graphql.ts b/src/__generated__/MoreInfo_show.graphql.ts
index f182895cd..bee82f984 100644
--- a/src/__generated__/MoreInfo_show.graphql.ts
+++ b/src/__generated__/MoreInfo_show.graphql.ts
@@ -7,7 +7,6 @@ export type MoreInfo_show$ref = typeof _MoreInfo_show$ref;
 export type MoreInfo_show = {
     readonly internalID: string;
     readonly slug: string;
-    readonly exhibition_period: string | null;
     readonly pressReleaseUrl: string | null;
     readonly openingReceptionText: string | null;
     readonly partner: ({
@@ -51,13 +50,6 @@ const node: ReaderFragment = {
       "args": null,
       "storageKey": null
     },
-    {
-      "kind": "ScalarField",
-      "alias": "exhibition_period",
-      "name": "exhibitionPeriod",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "ScalarField",
       "alias": null,
@@ -128,5 +120,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = '8c89cd8e513cef411fec9d3f3f2197be';
+(node as any).hash = '85085e24aa4e107b81ae3e19c8567e7a';
 export default node;
diff --git a/src/__generated__/PartnerCardTestsErrorQuery.graphql.ts b/src/__generated__/PartnerCardTestsErrorQuery.graphql.ts
index dc835bbd3..be9d29941 100644
--- a/src/__generated__/PartnerCardTestsErrorQuery.graphql.ts
+++ b/src/__generated__/PartnerCardTestsErrorQuery.graphql.ts
@@ -34,14 +34,12 @@ fragment PartnerCard_artwork on Artwork {
     type
     name
     slug
-    internalID
     id
     href
     initials
     profile {
       id
       internalID
-      slug
       is_followed: isFollowed
       icon {
         url(version: "square140")
@@ -69,20 +67,6 @@ v1 = {
   "name": "id",
   "args": null,
   "storageKey": null
-},
-v2 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "slug",
-  "args": null,
-  "storageKey": null
-},
-v3 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "internalID",
-  "args": null,
-  "storageKey": null
 };
 return {
   "kind": "Request",
@@ -181,8 +165,13 @@ return {
                 "args": null,
                 "storageKey": null
               },
-              (v2/*: any*/),
-              (v3/*: any*/),
+              {
+                "kind": "ScalarField",
+                "alias": null,
+                "name": "slug",
+                "args": null,
+                "storageKey": null
+              },
               (v1/*: any*/),
               {
                 "kind": "ScalarField",
@@ -208,8 +197,13 @@ return {
                 "plural": false,
                 "selections": [
                   (v1/*: any*/),
-                  (v3/*: any*/),
-                  (v2/*: any*/),
+                  {
+                    "kind": "ScalarField",
+                    "alias": null,
+                    "name": "internalID",
+                    "args": null,
+                    "storageKey": null
+                  },
                   {
                     "kind": "ScalarField",
                     "alias": "is_followed",
@@ -272,7 +266,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "PartnerCardTestsErrorQuery",
-    "id": "60c3451afb9038d8cd7273e435f401e0",
+    "id": "f5f85978663c562454138f0af5b1fa37",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/PartnerCardTestsQuery.graphql.ts b/src/__generated__/PartnerCardTestsQuery.graphql.ts
index ba7aad754..f288d2f29 100644
--- a/src/__generated__/PartnerCardTestsQuery.graphql.ts
+++ b/src/__generated__/PartnerCardTestsQuery.graphql.ts
@@ -34,14 +34,12 @@ fragment PartnerCard_artwork on Artwork {
     type
     name
     slug
-    internalID
     id
     href
     initials
     profile {
       id
       internalID
-      slug
       is_followed: isFollowed
       icon {
         url(version: "square140")
@@ -69,20 +67,6 @@ v1 = {
   "name": "id",
   "args": null,
   "storageKey": null
-},
-v2 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "slug",
-  "args": null,
-  "storageKey": null
-},
-v3 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "internalID",
-  "args": null,
-  "storageKey": null
 };
 return {
   "kind": "Request",
@@ -181,8 +165,13 @@ return {
                 "args": null,
                 "storageKey": null
               },
-              (v2/*: any*/),
-              (v3/*: any*/),
+              {
+                "kind": "ScalarField",
+                "alias": null,
+                "name": "slug",
+                "args": null,
+                "storageKey": null
+              },
               (v1/*: any*/),
               {
                 "kind": "ScalarField",
@@ -208,8 +197,13 @@ return {
                 "plural": false,
                 "selections": [
                   (v1/*: any*/),
-                  (v3/*: any*/),
-                  (v2/*: any*/),
+                  {
+                    "kind": "ScalarField",
+                    "alias": null,
+                    "name": "internalID",
+                    "args": null,
+                    "storageKey": null
+                  },
                   {
                     "kind": "ScalarField",
                     "alias": "is_followed",
@@ -272,7 +266,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "PartnerCardTestsQuery",
-    "id": "4e8c2b9f02a11999ba37ea9bf25fb90f",
+    "id": "4e32952ed4e198c5fbd4677537ce0a19",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/PartnerCard_artwork.graphql.ts b/src/__generated__/PartnerCard_artwork.graphql.ts
index e156462bd..108dee4c2 100644
--- a/src/__generated__/PartnerCard_artwork.graphql.ts
+++ b/src/__generated__/PartnerCard_artwork.graphql.ts
@@ -13,14 +13,12 @@ export type PartnerCard_artwork = {
         readonly type: string | null;
         readonly name: string | null;
         readonly slug: string;
-        readonly internalID: string;
         readonly id: string;
         readonly href: string | null;
         readonly initials: string | null;
         readonly profile: {
             readonly id: string;
             readonly internalID: string;
-            readonly slug: string;
             readonly is_followed: boolean | null;
             readonly icon: {
                 readonly url: string | null;
@@ -37,20 +35,6 @@ export type PartnerCard_artwork = {
 
 const node: ReaderFragment = (function(){
 var v0 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "slug",
-  "args": null,
-  "storageKey": null
-},
-v1 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "internalID",
-  "args": null,
-  "storageKey": null
-},
-v2 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "id",
@@ -119,9 +103,14 @@ return {
           "args": null,
           "storageKey": null
         },
+        {
+          "kind": "ScalarField",
+          "alias": null,
+          "name": "slug",
+          "args": null,
+          "storageKey": null
+        },
         (v0/*: any*/),
-        (v1/*: any*/),
-        (v2/*: any*/),
         {
           "kind": "ScalarField",
           "alias": null,
@@ -145,9 +134,14 @@ return {
           "concreteType": "Profile",
           "plural": false,
           "selections": [
-            (v2/*: any*/),
-            (v1/*: any*/),
             (v0/*: any*/),
+            {
+              "kind": "ScalarField",
+              "alias": null,
+              "name": "internalID",
+              "args": null,
+              "storageKey": null
+            },
             {
               "kind": "ScalarField",
               "alias": "is_followed",
@@ -204,5 +198,5 @@ return {
   ]
 };
 })();
-(node as any).hash = '5bb4d3858878280364e20e02f381df01';
+(node as any).hash = '662a4f1df0e12f9ce31dd37f8a512346';
 export default node;
diff --git a/src/__generated__/QueryRenderersArtistQuery.graphql.ts b/src/__generated__/QueryRenderersArtistQuery.graphql.ts
index e86f33d25..e7a829c95 100644
--- a/src/__generated__/QueryRenderersArtistQuery.graphql.ts
+++ b/src/__generated__/QueryRenderersArtistQuery.graphql.ts
@@ -189,15 +189,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -298,7 +295,7 @@ fragment RelatedArtist_artist on Artist {
   href
   name
   counts {
-    for_sale_artworks: forSaleArtworks
+    forSaleArtworks
     artworks
   }
   image {
@@ -344,34 +341,27 @@ v3 = {
   "storageKey": null
 },
 v4 = {
-  "kind": "ScalarField",
-  "alias": "for_sale_artworks",
-  "name": "forSaleArtworks",
-  "args": null,
-  "storageKey": null
-},
-v5 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "id",
   "args": null,
   "storageKey": null
 },
-v6 = {
+v5 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "name",
   "args": null,
   "storageKey": null
 },
-v7 = {
+v6 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "href",
   "args": null,
   "storageKey": null
 },
-v8 = {
+v7 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "url",
@@ -384,26 +374,26 @@ v8 = {
   ],
   "storageKey": "url(version:\"large\")"
 },
-v9 = [
-  (v8/*: any*/)
+v8 = [
+  (v7/*: any*/)
 ],
-v10 = {
+v9 = {
   "kind": "Literal",
   "name": "first",
   "value": 10
 },
-v11 = [
-  (v6/*: any*/),
-  (v5/*: any*/)
+v10 = [
+  (v5/*: any*/),
+  (v4/*: any*/)
 ],
-v12 = {
+v11 = {
   "kind": "ScalarField",
   "alias": "is_fair_booth",
   "name": "isFairBooth",
   "args": null,
   "storageKey": null
 },
-v13 = {
+v12 = {
   "kind": "LinkedField",
   "alias": "cover_image",
   "name": "coverImage",
@@ -411,47 +401,47 @@ v13 = {
   "args": null,
   "concreteType": "Image",
   "plural": false,
-  "selections": (v9/*: any*/)
+  "selections": (v8/*: any*/)
 },
-v14 = {
+v13 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "kind",
   "args": null,
   "storageKey": null
 },
-v15 = {
+v14 = {
   "kind": "ScalarField",
   "alias": "exhibition_period",
   "name": "exhibitionPeriod",
   "args": null,
   "storageKey": null
 },
-v16 = {
+v15 = {
   "kind": "ScalarField",
   "alias": "status_update",
   "name": "statusUpdate",
   "args": null,
   "storageKey": null
 },
-v17 = {
+v16 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "status",
   "args": null,
   "storageKey": null
 },
-v18 = {
+v17 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "__typename",
   "args": null,
   "storageKey": null
 },
-v19 = [
-  (v6/*: any*/)
+v18 = [
+  (v5/*: any*/)
 ],
-v20 = {
+v19 = {
   "kind": "LinkedField",
   "alias": null,
   "name": "partner",
@@ -460,21 +450,21 @@ v20 = {
   "concreteType": null,
   "plural": false,
   "selections": [
-    (v18/*: any*/),
-    (v5/*: any*/),
+    (v17/*: any*/),
+    (v4/*: any*/),
     {
       "kind": "InlineFragment",
       "type": "Partner",
-      "selections": (v19/*: any*/)
+      "selections": (v18/*: any*/)
     },
     {
       "kind": "InlineFragment",
       "type": "ExternalPartner",
-      "selections": (v19/*: any*/)
+      "selections": (v18/*: any*/)
     }
   ]
 },
-v21 = {
+v20 = {
   "kind": "LinkedField",
   "alias": null,
   "name": "location",
@@ -490,10 +480,10 @@ v21 = {
       "args": null,
       "storageKey": null
     },
-    (v5/*: any*/)
+    (v4/*: any*/)
   ]
 },
-v22 = [
+v21 = [
   {
     "kind": "LinkedField",
     "alias": null,
@@ -512,29 +502,29 @@ v22 = [
         "concreteType": "Show",
         "plural": false,
         "selections": [
-          (v5/*: any*/),
+          (v4/*: any*/),
           (v2/*: any*/),
-          (v7/*: any*/),
+          (v6/*: any*/),
+          (v11/*: any*/),
           (v12/*: any*/),
           (v13/*: any*/),
+          (v5/*: any*/),
           (v14/*: any*/),
-          (v6/*: any*/),
           (v15/*: any*/),
           (v16/*: any*/),
-          (v17/*: any*/),
-          (v20/*: any*/),
-          (v21/*: any*/)
+          (v19/*: any*/),
+          (v20/*: any*/)
         ]
       }
     ]
   }
 ],
-v23 = {
+v22 = {
   "kind": "Literal",
   "name": "sort",
   "value": "PARTNER_UPDATED_AT_DESC"
 },
-v24 = [
+v23 = [
   {
     "kind": "Literal",
     "name": "filter",
@@ -542,10 +532,10 @@ v24 = [
       "IS_FOR_SALE"
     ]
   },
-  (v10/*: any*/),
-  (v23/*: any*/)
+  (v9/*: any*/),
+  (v22/*: any*/)
 ],
-v25 = [
+v24 = [
   {
     "kind": "LinkedField",
     "alias": null,
@@ -564,7 +554,7 @@ v25 = [
         "concreteType": "Artwork",
         "plural": false,
         "selections": [
-          (v5/*: any*/),
+          (v4/*: any*/),
           (v2/*: any*/),
           {
             "kind": "LinkedField",
@@ -582,7 +572,7 @@ v25 = [
                 "args": null,
                 "storageKey": null
               },
-              (v8/*: any*/),
+              (v7/*: any*/),
               {
                 "kind": "ScalarField",
                 "alias": "aspect_ratio",
@@ -613,13 +603,6 @@ v25 = [
             "args": null,
             "storageKey": null
           },
-          {
-            "kind": "ScalarField",
-            "alias": "is_in_auction",
-            "name": "isInAuction",
-            "args": null,
-            "storageKey": null
-          },
           {
             "kind": "ScalarField",
             "alias": "is_biddable",
@@ -657,20 +640,6 @@ v25 = [
                 "args": null,
                 "storageKey": null
               },
-              {
-                "kind": "ScalarField",
-                "alias": "is_live_open",
-                "name": "isLiveOpen",
-                "args": null,
-                "storageKey": null
-              },
-              {
-                "kind": "ScalarField",
-                "alias": "is_open",
-                "name": "isOpen",
-                "args": null,
-                "storageKey": null
-              },
               {
                 "kind": "ScalarField",
                 "alias": "is_closed",
@@ -685,7 +654,7 @@ v25 = [
                 "args": null,
                 "storageKey": null
               },
-              (v5/*: any*/)
+              (v4/*: any*/)
             ]
           },
           {
@@ -715,7 +684,7 @@ v25 = [
                   }
                 ]
               },
-              (v5/*: any*/)
+              (v4/*: any*/)
             ]
           },
           {
@@ -732,7 +701,7 @@ v25 = [
             ],
             "concreteType": "Artist",
             "plural": true,
-            "selections": (v11/*: any*/)
+            "selections": (v10/*: any*/)
           },
           {
             "kind": "LinkedField",
@@ -742,10 +711,10 @@ v25 = [
             "args": null,
             "concreteType": "Partner",
             "plural": false,
-            "selections": (v11/*: any*/)
+            "selections": (v10/*: any*/)
           },
-          (v7/*: any*/),
-          (v18/*: any*/)
+          (v6/*: any*/),
+          (v17/*: any*/)
         ]
       },
       {
@@ -755,7 +724,7 @@ v25 = [
         "args": null,
         "storageKey": null
       },
-      (v5/*: any*/)
+      (v4/*: any*/)
     ]
   },
   {
@@ -791,11 +760,11 @@ v25 = [
     ]
   }
 ],
-v26 = [
+v25 = [
   "filter",
   "sort"
 ],
-v27 = [
+v26 = [
   {
     "kind": "Literal",
     "name": "filter",
@@ -803,10 +772,10 @@ v27 = [
       "IS_NOT_FOR_SALE"
     ]
   },
-  (v10/*: any*/),
-  (v23/*: any*/)
+  (v9/*: any*/),
+  (v22/*: any*/)
 ],
-v28 = [
+v27 = [
   {
     "kind": "Literal",
     "name": "first",
@@ -912,10 +881,16 @@ return {
                 "args": null,
                 "storageKey": null
               },
-              (v4/*: any*/)
+              {
+                "kind": "ScalarField",
+                "alias": "for_sale_artworks",
+                "name": "forSaleArtworks",
+                "args": null,
+                "storageKey": null
+              }
             ]
           },
-          (v5/*: any*/),
+          (v4/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -923,7 +898,7 @@ return {
             "args": null,
             "storageKey": null
           },
-          (v6/*: any*/),
+          (v5/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -1001,9 +976,9 @@ return {
                         "concreteType": "Artist",
                         "plural": false,
                         "selections": [
-                          (v5/*: any*/),
-                          (v7/*: any*/),
+                          (v4/*: any*/),
                           (v6/*: any*/),
+                          (v5/*: any*/),
                           {
                             "kind": "LinkedField",
                             "alias": null,
@@ -1013,7 +988,13 @@ return {
                             "concreteType": "ArtistCounts",
                             "plural": false,
                             "selections": [
-                              (v4/*: any*/),
+                              {
+                                "kind": "ScalarField",
+                                "alias": null,
+                                "name": "forSaleArtworks",
+                                "args": null,
+                                "storageKey": null
+                              },
                               (v3/*: any*/)
                             ]
                           },
@@ -1025,7 +1006,7 @@ return {
                             "args": null,
                             "concreteType": "Image",
                             "plural": false,
-                            "selections": (v9/*: any*/)
+                            "selections": (v8/*: any*/)
                           }
                         ]
                       }
@@ -1041,7 +1022,7 @@ return {
             "name": "articlesConnection",
             "storageKey": "articlesConnection(first:10)",
             "args": [
-              (v10/*: any*/)
+              (v9/*: any*/)
             ],
             "concreteType": "ArticleConnection",
             "plural": false,
@@ -1064,7 +1045,7 @@ return {
                     "concreteType": "Article",
                     "plural": false,
                     "selections": [
-                      (v5/*: any*/),
+                      (v4/*: any*/),
                       {
                         "kind": "ScalarField",
                         "alias": "thumbnail_title",
@@ -1072,7 +1053,7 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      (v7/*: any*/),
+                      (v6/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -1081,7 +1062,7 @@ return {
                         "args": null,
                         "concreteType": "Author",
                         "plural": false,
-                        "selections": (v11/*: any*/)
+                        "selections": (v10/*: any*/)
                       },
                       {
                         "kind": "LinkedField",
@@ -1091,7 +1072,7 @@ return {
                         "args": null,
                         "concreteType": "Image",
                         "plural": false,
-                        "selections": (v9/*: any*/)
+                        "selections": (v8/*: any*/)
                       }
                     ]
                   }
@@ -1105,7 +1086,7 @@ return {
             "name": "showsConnection",
             "storageKey": "showsConnection(first:10,status:\"running\")",
             "args": [
-              (v10/*: any*/),
+              (v9/*: any*/),
               {
                 "kind": "Literal",
                 "name": "status",
@@ -1114,7 +1095,7 @@ return {
             ],
             "concreteType": "ShowConnection",
             "plural": false,
-            "selections": (v22/*: any*/)
+            "selections": (v21/*: any*/)
           },
           {
             "kind": "LinkedField",
@@ -1122,7 +1103,7 @@ return {
             "name": "showsConnection",
             "storageKey": "showsConnection(first:10,status:\"upcoming\")",
             "args": [
-              (v10/*: any*/),
+              (v9/*: any*/),
               {
                 "kind": "Literal",
                 "name": "status",
@@ -1131,45 +1112,45 @@ return {
             ],
             "concreteType": "ShowConnection",
             "plural": false,
-            "selections": (v22/*: any*/)
+            "selections": (v21/*: any*/)
           },
           {
             "kind": "LinkedField",
             "alias": "forSaleArtworks",
             "name": "artworksConnection",
             "storageKey": "artworksConnection(filter:[\"IS_FOR_SALE\"],first:10,sort:\"PARTNER_UPDATED_AT_DESC\")",
-            "args": (v24/*: any*/),
+            "args": (v23/*: any*/),
             "concreteType": "ArtworkConnection",
             "plural": false,
-            "selections": (v25/*: any*/)
+            "selections": (v24/*: any*/)
           },
           {
             "kind": "LinkedHandle",
             "alias": "forSaleArtworks",
             "name": "artworksConnection",
-            "args": (v24/*: any*/),
+            "args": (v23/*: any*/),
             "handle": "connection",
             "key": "ArtistForSaleArtworksGrid_forSaleArtworks",
-            "filters": (v26/*: any*/)
+            "filters": (v25/*: any*/)
           },
           {
             "kind": "LinkedField",
             "alias": "notForSaleArtworks",
             "name": "artworksConnection",
             "storageKey": "artworksConnection(filter:[\"IS_NOT_FOR_SALE\"],first:10,sort:\"PARTNER_UPDATED_AT_DESC\")",
-            "args": (v27/*: any*/),
+            "args": (v26/*: any*/),
             "concreteType": "ArtworkConnection",
             "plural": false,
-            "selections": (v25/*: any*/)
+            "selections": (v24/*: any*/)
           },
           {
             "kind": "LinkedHandle",
             "alias": "notForSaleArtworks",
             "name": "artworksConnection",
-            "args": (v27/*: any*/),
+            "args": (v26/*: any*/),
             "handle": "connection",
             "key": "ArtistNotForSaleArtworksGrid_notForSaleArtworks",
-            "filters": (v26/*: any*/)
+            "filters": (v25/*: any*/)
           },
           {
             "kind": "Condition",
@@ -1181,7 +1162,7 @@ return {
                 "alias": "pastSmallShows",
                 "name": "showsConnection",
                 "storageKey": "showsConnection(first:20,status:\"closed\")",
-                "args": (v28/*: any*/),
+                "args": (v27/*: any*/),
                 "concreteType": "ShowConnection",
                 "plural": false,
                 "selections": [
@@ -1204,17 +1185,17 @@ return {
                         "plural": false,
                         "selections": [
                           (v2/*: any*/),
-                          (v7/*: any*/),
+                          (v6/*: any*/),
+                          (v11/*: any*/),
                           (v12/*: any*/),
                           (v13/*: any*/),
+                          (v5/*: any*/),
                           (v14/*: any*/),
-                          (v6/*: any*/),
                           (v15/*: any*/),
                           (v16/*: any*/),
-                          (v17/*: any*/),
+                          (v19/*: any*/),
                           (v20/*: any*/),
-                          (v21/*: any*/),
-                          (v5/*: any*/)
+                          (v4/*: any*/)
                         ]
                       }
                     ]
@@ -1233,10 +1214,10 @@ return {
                 "alias": "pastLargeShows",
                 "name": "showsConnection",
                 "storageKey": "showsConnection(first:20,status:\"closed\")",
-                "args": (v28/*: any*/),
+                "args": (v27/*: any*/),
                 "concreteType": "ShowConnection",
                 "plural": false,
-                "selections": (v22/*: any*/)
+                "selections": (v21/*: any*/)
               }
             ]
           }
@@ -1247,7 +1228,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "QueryRenderersArtistQuery",
-    "id": "83b53fcd8f01ee91b72538b2c2b85dbc",
+    "id": "6a4a323ea2211b9b7873dcf15e2d68e3",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/QueryRenderersBidFlowQuery.graphql.ts b/src/__generated__/QueryRenderersBidFlowQuery.graphql.ts
index b0d0a299a..1c67af967 100644
--- a/src/__generated__/QueryRenderersBidFlowQuery.graphql.ts
+++ b/src/__generated__/QueryRenderersBidFlowQuery.graphql.ts
@@ -57,7 +57,6 @@ fragment SelectMaxBid_me on Me {
 fragment ConfirmBid_me on Me {
   has_qualified_credit_cards: hasQualifiedCreditCards
   bidders(saleID: $saleID) {
-    qualified_for_bidding: qualifiedForBidding
     id
   }
 }
@@ -66,7 +65,6 @@ fragment SelectMaxBid_sale_artwork on SaleArtwork {
   id
   increments(useMyMaxBid: true) {
     display
-    cents
   }
   ...ConfirmBid_sale_artwork
 }
@@ -94,14 +92,9 @@ fragment ConfirmBid_sale_artwork on SaleArtwork {
 }
 
 fragment BidResult_sale_artwork on SaleArtwork {
-  minimum_next_bid: minimumNextBid {
-    amount
-    cents
-    display
-  }
   sale {
-    live_start_at: liveStartAt
-    end_at: endAt
+    liveStartAt
+    endAt
     slug
     id
   }
@@ -145,20 +138,6 @@ v3 = {
   "storageKey": null
 },
 v4 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "display",
-  "args": null,
-  "storageKey": null
-},
-v5 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "cents",
-  "args": null,
-  "storageKey": null
-},
-v6 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "slug",
@@ -258,8 +237,13 @@ return {
                 "concreteType": "BidIncrementsFormatted",
                 "plural": true,
                 "selections": [
-                  (v4/*: any*/),
-                  (v5/*: any*/)
+                  {
+                    "kind": "ScalarField",
+                    "alias": null,
+                    "name": "display",
+                    "args": null,
+                    "storageKey": null
+                  }
                 ]
               },
               {
@@ -278,7 +262,7 @@ return {
                 "concreteType": "Sale",
                 "plural": false,
                 "selections": [
-                  (v6/*: any*/),
+                  (v4/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": "live_start_at",
@@ -293,7 +277,21 @@ return {
                     "args": null,
                     "storageKey": null
                   },
-                  (v3/*: any*/)
+                  (v3/*: any*/),
+                  {
+                    "kind": "ScalarField",
+                    "alias": null,
+                    "name": "liveStartAt",
+                    "args": null,
+                    "storageKey": null
+                  },
+                  {
+                    "kind": "ScalarField",
+                    "alias": null,
+                    "name": "endAt",
+                    "args": null,
+                    "storageKey": null
+                  }
                 ]
               },
               {
@@ -305,7 +303,7 @@ return {
                 "concreteType": "Artwork",
                 "plural": false,
                 "selections": [
-                  (v6/*: any*/),
+                  (v4/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": null,
@@ -360,26 +358,6 @@ return {
                 "name": "lotLabel",
                 "args": null,
                 "storageKey": null
-              },
-              {
-                "kind": "LinkedField",
-                "alias": "minimum_next_bid",
-                "name": "minimumNextBid",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "SaleArtworkMinimumNextBid",
-                "plural": false,
-                "selections": [
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "amount",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  (v5/*: any*/),
-                  (v4/*: any*/)
-                ]
               }
             ]
           },
@@ -411,13 +389,6 @@ return {
             "concreteType": "Bidder",
             "plural": true,
             "selections": [
-              {
-                "kind": "ScalarField",
-                "alias": "qualified_for_bidding",
-                "name": "qualifiedForBidding",
-                "args": null,
-                "storageKey": null
-              },
               (v3/*: any*/)
             ]
           },
@@ -429,7 +400,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "QueryRenderersBidFlowQuery",
-    "id": "b15d66d6742139d778366cabf951be30",
+    "id": "224761847ef5f0359658f2a2b49e5b82",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/QueryRenderersCollectionQuery.graphql.ts b/src/__generated__/QueryRenderersCollectionQuery.graphql.ts
index a7ef2c38b..a61206b6c 100644
--- a/src/__generated__/QueryRenderersCollectionQuery.graphql.ts
+++ b/src/__generated__/QueryRenderersCollectionQuery.graphql.ts
@@ -27,22 +27,12 @@ query QueryRenderersCollectionQuery(
 }
 
 fragment Collection_collection on MarketingCollection {
-  slug
-  title
-  description
-  headerImage
-  category
-  credit
   ...CollectionHeader_collection
 }
 
 fragment CollectionHeader_collection on MarketingCollection {
-  slug
   title
   description
-  headerImage
-  category
-  credit
 }
 */
 
@@ -103,13 +93,6 @@ return {
         "concreteType": "MarketingCollection",
         "plural": false,
         "selections": [
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "slug",
-            "args": null,
-            "storageKey": null
-          },
           {
             "kind": "ScalarField",
             "alias": null,
@@ -123,27 +106,6 @@ return {
             "name": "description",
             "args": null,
             "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "headerImage",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "category",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "credit",
-            "args": null,
-            "storageKey": null
           }
         ]
       }
@@ -152,7 +114,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "QueryRenderersCollectionQuery",
-    "id": "8ed72db052cdb49a3f8fbc74df3fcb33",
+    "id": "18fe2187f5a732516ea47696a1ef21df",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/QueryRenderersConversationQuery.graphql.ts b/src/__generated__/QueryRenderersConversationQuery.graphql.ts
index 6b3d31861..71a8630cf 100644
--- a/src/__generated__/QueryRenderersConversationQuery.graphql.ts
+++ b/src/__generated__/QueryRenderersConversationQuery.graphql.ts
@@ -31,19 +31,17 @@ fragment Conversation_me on Me {
   conversation(id: $conversationID) {
     internalID
     id
+    lastMessageID
+    unread
     to {
       name
-      initials
       id
     }
     from {
       email
       id
     }
-    last_message_id: lastMessageID
     ...Messages_conversation
-    initial_message: initialMessage
-    unread
   }
 }
 
@@ -335,6 +333,20 @@ return {
             "selections": [
               (v1/*: any*/),
               (v2/*: any*/),
+              {
+                "kind": "ScalarField",
+                "alias": null,
+                "name": "lastMessageID",
+                "args": null,
+                "storageKey": null
+              },
+              {
+                "kind": "ScalarField",
+                "alias": null,
+                "name": "unread",
+                "args": null,
+                "storageKey": null
+              },
               {
                 "kind": "LinkedField",
                 "alias": null,
@@ -345,8 +357,8 @@ return {
                 "plural": false,
                 "selections": [
                   (v3/*: any*/),
-                  (v4/*: any*/),
-                  (v2/*: any*/)
+                  (v2/*: any*/),
+                  (v4/*: any*/)
                 ]
               },
               {
@@ -364,13 +376,6 @@ return {
                   (v4/*: any*/)
                 ]
               },
-              {
-                "kind": "ScalarField",
-                "alias": "last_message_id",
-                "name": "lastMessageID",
-                "args": null,
-                "storageKey": null
-              },
               {
                 "kind": "ScalarField",
                 "alias": "initial_message",
@@ -712,13 +717,6 @@ return {
                     ]
                   }
                 ]
-              },
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "unread",
-                "args": null,
-                "storageKey": null
               }
             ]
           },
@@ -730,7 +728,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "QueryRenderersConversationQuery",
-    "id": "9e09d2bf9687286cc5ff5190b834359d",
+    "id": "da82499be4eb913b14a04bb2eed65582",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/QueryRenderersFairQuery.graphql.ts b/src/__generated__/QueryRenderersFairQuery.graphql.ts
index da533a24a..96c26a133 100644
--- a/src/__generated__/QueryRenderersFairQuery.graphql.ts
+++ b/src/__generated__/QueryRenderersFairQuery.graphql.ts
@@ -29,14 +29,7 @@ query QueryRenderersFairQuery(
 
 fragment Fair_fair on Fair {
   id
-  slug
   ...FairDetail_fair
-  organizer {
-    website
-    id
-  }
-  about
-  ticketsLink
 }
 
 fragment FairDetail_fair on Fair {
@@ -58,15 +51,13 @@ fragment FairDetail_fair on Fair {
     website
     id
   }
-  about
-  ticketsLink
   profile {
     name
     id
   }
   sponsoredContent {
-    activationText
     pressReleaseUrl
+    activationText
   }
   shows: showsConnection(first: 5) {
     pageInfo {
@@ -77,8 +68,6 @@ fragment FairDetail_fair on Fair {
     edges {
       cursor
       node {
-        slug
-        internalID
         artworks: artworksConnection(first: 4) {
           edges {
             node {
@@ -97,14 +86,18 @@ fragment FairDetail_fair on Fair {
 
 fragment FairHeader_fair on Fair {
   slug
-  internalID
   name
   formattedOpeningHours
+  startAt
+  endAt
+  exhibitionPeriod
   counts {
     artists
-    partners
   }
-  followed_content: followedContent {
+  image {
+    url
+  }
+  followedContent {
     artists {
       name
       href
@@ -112,38 +105,8 @@ fragment FairHeader_fair on Fair {
       internalID
       id
     }
-    galleries {
-      internalID
-      name
-      id
-    }
   }
-  partner_names: showsConnection(first: 2) {
-    edges {
-      node {
-        slug
-        partner {
-          __typename
-          ... on Partner {
-            profile {
-              name
-              slug
-              internalID
-              id
-            }
-          }
-          ... on Node {
-            id
-          }
-          ... on ExternalPartner {
-            id
-          }
-        }
-        id
-      }
-    }
-  }
-  artists_names: artistsConnection(first: 3) {
+  artistsConnection(first: 3) {
     edges {
       node {
         name
@@ -154,27 +117,12 @@ fragment FairHeader_fair on Fair {
       }
     }
   }
-  image {
-    image_url: imageURL
-    aspect_ratio: aspectRatio
-    url
-  }
   profile {
+    id
     icon {
-      internalID
-      href
-      height
-      width
       url(version: "square140")
     }
-    id
-    slug
-    name
-    is_followed: isFollowed
   }
-  start_at: startAt
-  end_at: endAt
-  exhibition_period: exhibitionPeriod
 }
 
 fragment LocationMap_location on Location {
@@ -211,8 +159,6 @@ fragment LocationMap_location on Location {
 fragment FairBoothPreview_show on Show {
   slug
   internalID
-  name
-  is_fair_booth: isFairBooth
   counts {
     artworks
   }
@@ -225,9 +171,10 @@ fragment FairBoothPreview_show on Show {
       internalID
       id
       profile {
-        internalID
-        is_followed: isFollowed
         id
+        slug
+        internalID
+        isFollowed
       }
     }
     ... on Node {
@@ -237,11 +184,7 @@ fragment FairBoothPreview_show on Show {
       id
     }
   }
-  fair {
-    name
-    id
-  }
-  cover_image: coverImage {
+  coverImage {
     url
   }
   location {
@@ -260,7 +203,6 @@ fragment FairBoothPreview_show on Show {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -271,15 +213,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -339,82 +278,70 @@ v3 = {
 v4 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "internalID",
+  "name": "name",
   "args": null,
   "storageKey": null
 },
-v5 = {
+v5 = [
+  {
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "url",
+    "args": null,
+    "storageKey": null
+  }
+],
+v6 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "name",
+  "name": "href",
   "args": null,
   "storageKey": null
 },
-v6 = {
+v7 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "href",
+  "name": "internalID",
   "args": null,
   "storageKey": null
 },
-v7 = [
-  (v5/*: any*/),
+v8 = [
+  (v4/*: any*/),
   (v6/*: any*/),
   (v3/*: any*/),
-  (v4/*: any*/),
+  (v7/*: any*/),
   (v2/*: any*/)
 ],
-v8 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "__typename",
-  "args": null,
-  "storageKey": null
-},
 v9 = {
-  "kind": "ScalarField",
-  "alias": "aspect_ratio",
-  "name": "aspectRatio",
-  "args": null,
-  "storageKey": null
-},
-v10 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "url",
-  "args": null,
-  "storageKey": null
-},
-v11 = {
-  "kind": "ScalarField",
-  "alias": "is_followed",
-  "name": "isFollowed",
+  "name": "hours",
   "args": null,
   "storageKey": null
 },
-v12 = {
+v10 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "hours",
+  "name": "__typename",
   "args": null,
   "storageKey": null
 },
-v13 = [
+v11 = [
   {
     "kind": "Literal",
     "name": "first",
     "value": 5
   }
 ],
-v14 = {
+v12 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "display",
   "args": null,
   "storageKey": null
 },
-v15 = [
-  (v5/*: any*/),
+v13 = [
+  (v4/*: any*/),
   (v2/*: any*/)
 ];
 return {
@@ -461,7 +388,6 @@ return {
           (v2/*: any*/),
           (v3/*: any*/),
           (v4/*: any*/),
-          (v5/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -469,6 +395,27 @@ return {
             "args": null,
             "storageKey": null
           },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "startAt",
+            "args": null,
+            "storageKey": null
+          },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "endAt",
+            "args": null,
+            "storageKey": null
+          },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "exhibitionPeriod",
+            "args": null,
+            "storageKey": null
+          },
           {
             "kind": "LinkedField",
             "alias": null,
@@ -484,19 +431,22 @@ return {
                 "name": "artists",
                 "args": null,
                 "storageKey": null
-              },
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "partners",
-                "args": null,
-                "storageKey": null
               }
             ]
           },
           {
             "kind": "LinkedField",
-            "alias": "followed_content",
+            "alias": null,
+            "name": "image",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Image",
+            "plural": false,
+            "selections": (v5/*: any*/)
+          },
+          {
+            "kind": "LinkedField",
+            "alias": null,
             "name": "followedContent",
             "storageKey": null,
             "args": null,
@@ -511,102 +461,13 @@ return {
                 "args": null,
                 "concreteType": "Artist",
                 "plural": true,
-                "selections": (v7/*: any*/)
-              },
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "galleries",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "Partner",
-                "plural": true,
-                "selections": [
-                  (v4/*: any*/),
-                  (v5/*: any*/),
-                  (v2/*: any*/)
-                ]
+                "selections": (v8/*: any*/)
               }
             ]
           },
           {
             "kind": "LinkedField",
-            "alias": "partner_names",
-            "name": "showsConnection",
-            "storageKey": "showsConnection(first:2)",
-            "args": [
-              {
-                "kind": "Literal",
-                "name": "first",
-                "value": 2
-              }
-            ],
-            "concreteType": "ShowConnection",
-            "plural": false,
-            "selections": [
-              {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "edges",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "ShowEdge",
-                "plural": true,
-                "selections": [
-                  {
-                    "kind": "LinkedField",
-                    "alias": null,
-                    "name": "node",
-                    "storageKey": null,
-                    "args": null,
-                    "concreteType": "Show",
-                    "plural": false,
-                    "selections": [
-                      (v3/*: any*/),
-                      {
-                        "kind": "LinkedField",
-                        "alias": null,
-                        "name": "partner",
-                        "storageKey": null,
-                        "args": null,
-                        "concreteType": null,
-                        "plural": false,
-                        "selections": [
-                          (v8/*: any*/),
-                          (v2/*: any*/),
-                          {
-                            "kind": "InlineFragment",
-                            "type": "Partner",
-                            "selections": [
-                              {
-                                "kind": "LinkedField",
-                                "alias": null,
-                                "name": "profile",
-                                "storageKey": null,
-                                "args": null,
-                                "concreteType": "Profile",
-                                "plural": false,
-                                "selections": [
-                                  (v5/*: any*/),
-                                  (v3/*: any*/),
-                                  (v4/*: any*/),
-                                  (v2/*: any*/)
-                                ]
-                              }
-                            ]
-                          }
-                        ]
-                      },
-                      (v2/*: any*/)
-                    ]
-                  }
-                ]
-              }
-            ]
-          },
-          {
-            "kind": "LinkedField",
-            "alias": "artists_names",
+            "alias": null,
             "name": "artistsConnection",
             "storageKey": "artistsConnection(first:3)",
             "args": [
@@ -636,32 +497,12 @@ return {
                     "args": null,
                     "concreteType": "Artist",
                     "plural": false,
-                    "selections": (v7/*: any*/)
+                    "selections": (v8/*: any*/)
                   }
                 ]
               }
             ]
           },
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "image",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "Image",
-            "plural": false,
-            "selections": [
-              {
-                "kind": "ScalarField",
-                "alias": "image_url",
-                "name": "imageURL",
-                "args": null,
-                "storageKey": null
-              },
-              (v9/*: any*/),
-              (v10/*: any*/)
-            ]
-          },
           {
             "kind": "LinkedField",
             "alias": null,
@@ -671,6 +512,7 @@ return {
             "concreteType": "Profile",
             "plural": false,
             "selections": [
+              (v2/*: any*/),
               {
                 "kind": "LinkedField",
                 "alias": null,
@@ -680,22 +522,6 @@ return {
                 "concreteType": "Image",
                 "plural": false,
                 "selections": [
-                  (v4/*: any*/),
-                  (v6/*: any*/),
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "height",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "width",
-                    "args": null,
-                    "storageKey": null
-                  },
                   {
                     "kind": "ScalarField",
                     "alias": null,
@@ -711,34 +537,11 @@ return {
                   }
                 ]
               },
-              (v2/*: any*/),
-              (v3/*: any*/),
-              (v5/*: any*/),
-              (v11/*: any*/)
+              (v4/*: any*/)
             ]
           },
-          {
-            "kind": "ScalarField",
-            "alias": "start_at",
-            "name": "startAt",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": "end_at",
-            "name": "endAt",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": "exhibition_period",
-            "name": "exhibitionPeriod",
-            "args": null,
-            "storageKey": null
-          },
-          (v12/*: any*/),
+          (v7/*: any*/),
+          (v9/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -756,7 +559,7 @@ return {
             "plural": false,
             "selections": [
               (v2/*: any*/),
-              (v4/*: any*/),
+              (v7/*: any*/),
               {
                 "kind": "ScalarField",
                 "alias": null,
@@ -858,7 +661,7 @@ return {
                 "concreteType": null,
                 "plural": false,
                 "selections": [
-                  (v8/*: any*/),
+                  (v10/*: any*/),
                   {
                     "kind": "InlineFragment",
                     "type": "OpeningHoursArray",
@@ -879,7 +682,7 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          (v12/*: any*/)
+                          (v9/*: any*/)
                         ]
                       }
                     ]
@@ -920,20 +723,6 @@ return {
               (v2/*: any*/)
             ]
           },
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "about",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "ticketsLink",
-            "args": null,
-            "storageKey": null
-          },
           {
             "kind": "LinkedField",
             "alias": null,
@@ -946,14 +735,14 @@ return {
               {
                 "kind": "ScalarField",
                 "alias": null,
-                "name": "activationText",
+                "name": "pressReleaseUrl",
                 "args": null,
                 "storageKey": null
               },
               {
                 "kind": "ScalarField",
                 "alias": null,
-                "name": "pressReleaseUrl",
+                "name": "activationText",
                 "args": null,
                 "storageKey": null
               }
@@ -964,7 +753,7 @@ return {
             "alias": "shows",
             "name": "showsConnection",
             "storageKey": "showsConnection(first:5)",
-            "args": (v13/*: any*/),
+            "args": (v11/*: any*/),
             "concreteType": "ShowConnection",
             "plural": false,
             "selections": [
@@ -1025,8 +814,6 @@ return {
                     "concreteType": "Show",
                     "plural": false,
                     "selections": [
-                      (v3/*: any*/),
-                      (v4/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": "artworks",
@@ -1071,7 +858,13 @@ return {
                                     "concreteType": "Image",
                                     "plural": false,
                                     "selections": [
-                                      (v9/*: any*/),
+                                      {
+                                        "kind": "ScalarField",
+                                        "alias": "aspect_ratio",
+                                        "name": "aspectRatio",
+                                        "args": null,
+                                        "storageKey": null
+                                      },
                                       {
                                         "kind": "ScalarField",
                                         "alias": null,
@@ -1108,13 +901,6 @@ return {
                                     "args": null,
                                     "storageKey": null
                                   },
-                                  {
-                                    "kind": "ScalarField",
-                                    "alias": "is_in_auction",
-                                    "name": "isInAuction",
-                                    "args": null,
-                                    "storageKey": null
-                                  },
                                   {
                                     "kind": "ScalarField",
                                     "alias": "is_biddable",
@@ -1152,20 +938,6 @@ return {
                                         "args": null,
                                         "storageKey": null
                                       },
-                                      {
-                                        "kind": "ScalarField",
-                                        "alias": "is_live_open",
-                                        "name": "isLiveOpen",
-                                        "args": null,
-                                        "storageKey": null
-                                      },
-                                      {
-                                        "kind": "ScalarField",
-                                        "alias": "is_open",
-                                        "name": "isOpen",
-                                        "args": null,
-                                        "storageKey": null
-                                      },
                                       {
                                         "kind": "ScalarField",
                                         "alias": "is_closed",
@@ -1201,7 +973,7 @@ return {
                                         "concreteType": "SaleArtworkCurrentBid",
                                         "plural": false,
                                         "selections": [
-                                          (v14/*: any*/)
+                                          (v12/*: any*/)
                                         ]
                                       },
                                       (v2/*: any*/)
@@ -1221,7 +993,7 @@ return {
                                     ],
                                     "concreteType": "Artist",
                                     "plural": true,
-                                    "selections": (v15/*: any*/)
+                                    "selections": (v13/*: any*/)
                                   },
                                   {
                                     "kind": "LinkedField",
@@ -1231,7 +1003,7 @@ return {
                                     "args": null,
                                     "concreteType": "Partner",
                                     "plural": false,
-                                    "selections": (v15/*: any*/)
+                                    "selections": (v13/*: any*/)
                                   },
                                   (v6/*: any*/)
                                 ]
@@ -1240,14 +1012,8 @@ return {
                           }
                         ]
                       },
-                      (v5/*: any*/),
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_fair_booth",
-                        "name": "isFairBooth",
-                        "args": null,
-                        "storageKey": null
-                      },
+                      (v3/*: any*/),
+                      (v7/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -1275,16 +1041,16 @@ return {
                         "concreteType": null,
                         "plural": false,
                         "selections": [
-                          (v8/*: any*/),
+                          (v10/*: any*/),
                           (v2/*: any*/),
                           {
                             "kind": "InlineFragment",
                             "type": "Partner",
                             "selections": [
-                              (v5/*: any*/),
+                              (v4/*: any*/),
                               (v6/*: any*/),
                               (v3/*: any*/),
-                              (v4/*: any*/),
+                              (v7/*: any*/),
                               {
                                 "kind": "LinkedField",
                                 "alias": null,
@@ -1294,9 +1060,16 @@ return {
                                 "concreteType": "Profile",
                                 "plural": false,
                                 "selections": [
-                                  (v4/*: any*/),
-                                  (v11/*: any*/),
-                                  (v2/*: any*/)
+                                  (v2/*: any*/),
+                                  (v3/*: any*/),
+                                  (v7/*: any*/),
+                                  {
+                                    "kind": "ScalarField",
+                                    "alias": null,
+                                    "name": "isFollowed",
+                                    "args": null,
+                                    "storageKey": null
+                                  }
                                 ]
                               }
                             ]
@@ -1306,24 +1079,12 @@ return {
                       {
                         "kind": "LinkedField",
                         "alias": null,
-                        "name": "fair",
-                        "storageKey": null,
-                        "args": null,
-                        "concreteType": "Fair",
-                        "plural": false,
-                        "selections": (v15/*: any*/)
-                      },
-                      {
-                        "kind": "LinkedField",
-                        "alias": "cover_image",
                         "name": "coverImage",
                         "storageKey": null,
                         "args": null,
                         "concreteType": "Image",
                         "plural": false,
-                        "selections": [
-                          (v10/*: any*/)
-                        ]
+                        "selections": (v5/*: any*/)
                       },
                       {
                         "kind": "LinkedField",
@@ -1334,12 +1095,12 @@ return {
                         "concreteType": "Location",
                         "plural": false,
                         "selections": [
-                          (v14/*: any*/),
+                          (v12/*: any*/),
                           (v2/*: any*/)
                         ]
                       },
                       (v2/*: any*/),
-                      (v8/*: any*/)
+                      (v10/*: any*/)
                     ]
                   }
                 ]
@@ -1350,7 +1111,7 @@ return {
             "kind": "LinkedHandle",
             "alias": "shows",
             "name": "showsConnection",
-            "args": (v13/*: any*/),
+            "args": (v11/*: any*/),
             "handle": "connection",
             "key": "Fair_shows",
             "filters": null
@@ -1362,7 +1123,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "QueryRenderersFairQuery",
-    "id": "57ee6236b4901300f0ee6bc5b63ef1a1",
+    "id": "a5c28274df0901326eba513530cda030",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/QueryRenderersForYouQuery.graphql.ts b/src/__generated__/QueryRenderersForYouQuery.graphql.ts
index bf522647e..2347763e8 100644
--- a/src/__generated__/QueryRenderersForYouQuery.graphql.ts
+++ b/src/__generated__/QueryRenderersForYouQuery.graphql.ts
@@ -92,13 +92,11 @@ fragment FairsRail_fairs_module on HomePageFairsModule {
   results {
     id
     slug
-    name
     profile {
       slug
       id
     }
-    mobile_image: mobileImage {
-      internalID
+    mobileImage {
       url
     }
   }
@@ -160,7 +158,6 @@ fragment ArtworkCarouselHeader_rail on HomePageArtworkModule {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -171,15 +168,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -523,7 +517,6 @@ return {
                 "plural": true,
                 "selections": [
                   (v0/*: any*/),
-                  (v5/*: any*/),
                   {
                     "kind": "LinkedField",
                     "alias": null,
@@ -558,13 +551,6 @@ return {
                     "args": null,
                     "storageKey": null
                   },
-                  {
-                    "kind": "ScalarField",
-                    "alias": "is_in_auction",
-                    "name": "isInAuction",
-                    "args": null,
-                    "storageKey": null
-                  },
                   {
                     "kind": "ScalarField",
                     "alias": "is_biddable",
@@ -586,6 +572,7 @@ return {
                     "args": null,
                     "storageKey": null
                   },
+                  (v5/*: any*/),
                   {
                     "kind": "LinkedField",
                     "alias": null,
@@ -602,20 +589,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_live_open",
-                        "name": "isLiveOpen",
-                        "args": null,
-                        "storageKey": null
-                      },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_open",
-                        "name": "isOpen",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_closed",
@@ -769,7 +742,6 @@ return {
                 "selections": [
                   (v0/*: any*/),
                   (v5/*: any*/),
-                  (v7/*: any*/),
                   {
                     "kind": "LinkedField",
                     "alias": null,
@@ -785,14 +757,13 @@ return {
                   },
                   {
                     "kind": "LinkedField",
-                    "alias": "mobile_image",
+                    "alias": null,
                     "name": "mobileImage",
                     "storageKey": null,
                     "args": null,
                     "concreteType": "Image",
                     "plural": false,
                     "selections": [
-                      (v4/*: any*/),
                       {
                         "kind": "ScalarField",
                         "alias": null,
@@ -813,7 +784,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "QueryRenderersForYouQuery",
-    "id": "d08d7ec3c246ed80ed2af98505d8e3a3",
+    "id": "7744da3dcf9f8162717c9e8e1a4189f7",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/QueryRenderersGeneQuery.graphql.ts b/src/__generated__/QueryRenderersGeneQuery.graphql.ts
index 6558ae637..239d6afc9 100644
--- a/src/__generated__/QueryRenderersGeneQuery.graphql.ts
+++ b/src/__generated__/QueryRenderersGeneQuery.graphql.ts
@@ -106,15 +106,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -153,7 +150,7 @@ fragment RelatedArtist_artist on Artist {
   href
   name
   counts {
-    for_sale_artworks: forSaleArtworks
+    forSaleArtworks
     artworks
   }
   image {
@@ -369,7 +366,7 @@ return {
                 "selections": [
                   {
                     "kind": "ScalarField",
-                    "alias": "for_sale_artworks",
+                    "alias": null,
                     "name": "forSaleArtworks",
                     "args": null,
                     "storageKey": null
@@ -535,13 +532,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -579,20 +569,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_live_open",
-                            "name": "isLiveOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_open",
-                            "name": "isOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -743,7 +719,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "QueryRenderersGeneQuery",
-    "id": "b3b0be912fa7b057f6e7b69c4d7a24f8",
+    "id": "581e58af4d1688ca76314b374515b96d",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/QueryRenderersInboxQuery.graphql.ts b/src/__generated__/QueryRenderersInboxQuery.graphql.ts
index 06cbd7d36..2905202b6 100644
--- a/src/__generated__/QueryRenderersInboxQuery.graphql.ts
+++ b/src/__generated__/QueryRenderersInboxQuery.graphql.ts
@@ -78,9 +78,6 @@ fragment ActiveBid_bid on LotStanding {
   }
   most_recent_bid: mostRecentBid {
     id
-    max_bid: maxBid {
-      display
-    }
     sale_artwork: saleArtwork {
       artwork {
         href
@@ -109,8 +106,8 @@ fragment ConversationSnippet_conversation on Conversation {
     name
     id
   }
-  last_message: lastMessage
-  last_message_at: lastMessageAt
+  lastMessage
+  lastMessageAt
   unread
   items {
     item {
@@ -118,7 +115,7 @@ fragment ConversationSnippet_conversation on Conversation {
       ... on Artwork {
         date
         title
-        artist_names: artistNames
+        artistNames
         image {
           url
         }
@@ -129,7 +126,7 @@ fragment ConversationSnippet_conversation on Conversation {
           id
         }
         name
-        cover_image: coverImage {
+        coverImage {
           url
         }
       }
@@ -149,23 +146,14 @@ var v0 = {
   "args": null,
   "storageKey": null
 },
-v1 = [
-  {
-    "kind": "ScalarField",
-    "alias": null,
-    "name": "display",
-    "args": null,
-    "storageKey": null
-  }
-],
-v2 = {
+v1 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "href",
   "args": null,
   "storageKey": null
 },
-v3 = [
+v2 = [
   {
     "kind": "ScalarField",
     "alias": null,
@@ -174,7 +162,7 @@ v3 = [
     "storageKey": null
   }
 ],
-v4 = {
+v3 = {
   "kind": "LinkedField",
   "alias": null,
   "name": "image",
@@ -182,23 +170,16 @@ v4 = {
   "args": null,
   "concreteType": "Image",
   "plural": false,
-  "selections": (v3/*: any*/)
-},
-v5 = {
-  "kind": "ScalarField",
-  "alias": "artist_names",
-  "name": "artistNames",
-  "args": null,
-  "storageKey": null
+  "selections": (v2/*: any*/)
 },
-v6 = {
+v4 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "internalID",
   "args": null,
   "storageKey": null
 },
-v7 = [
+v5 = [
   {
     "kind": "Literal",
     "name": "after",
@@ -210,18 +191,18 @@ v7 = [
     "value": 10
   }
 ],
-v8 = {
+v6 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "name",
   "args": null,
   "storageKey": null
 },
-v9 = [
-  (v8/*: any*/),
+v7 = [
+  (v6/*: any*/),
   (v0/*: any*/)
 ],
-v10 = {
+v8 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "__typename",
@@ -294,16 +275,6 @@ return {
                 "plural": false,
                 "selections": [
                   (v0/*: any*/),
-                  {
-                    "kind": "LinkedField",
-                    "alias": "max_bid",
-                    "name": "maxBid",
-                    "storageKey": null,
-                    "args": null,
-                    "concreteType": "BidderPositionMaxBid",
-                    "plural": false,
-                    "selections": (v1/*: any*/)
-                  },
                   {
                     "kind": "LinkedField",
                     "alias": "sale_artwork",
@@ -322,9 +293,15 @@ return {
                         "concreteType": "Artwork",
                         "plural": false,
                         "selections": [
-                          (v2/*: any*/),
-                          (v4/*: any*/),
-                          (v5/*: any*/),
+                          (v1/*: any*/),
+                          (v3/*: any*/),
+                          {
+                            "kind": "ScalarField",
+                            "alias": "artist_names",
+                            "name": "artistNames",
+                            "args": null,
+                            "storageKey": null
+                          },
                           (v0/*: any*/)
                         ]
                       },
@@ -354,7 +331,15 @@ return {
                         "args": null,
                         "concreteType": "SaleArtworkHighestBid",
                         "plural": false,
-                        "selections": (v1/*: any*/)
+                        "selections": [
+                          {
+                            "kind": "ScalarField",
+                            "alias": null,
+                            "name": "display",
+                            "args": null,
+                            "storageKey": null
+                          }
+                        ]
                       },
                       {
                         "kind": "ScalarField",
@@ -391,7 +376,7 @@ return {
                 "concreteType": "Sale",
                 "plural": false,
                 "selections": [
-                  (v2/*: any*/),
+                  (v1/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": "is_live_open",
@@ -437,7 +422,7 @@ return {
                     "concreteType": "Conversation",
                     "plural": false,
                     "selections": [
-                      (v6/*: any*/),
+                      (v4/*: any*/),
                       (v0/*: any*/)
                     ]
                   }
@@ -450,7 +435,7 @@ return {
             "alias": "conversations",
             "name": "conversationsConnection",
             "storageKey": "conversationsConnection(after:\"\",first:10)",
-            "args": (v7/*: any*/),
+            "args": (v5/*: any*/),
             "concreteType": "ConversationConnection",
             "plural": false,
             "selections": [
@@ -497,7 +482,7 @@ return {
                     "concreteType": "Conversation",
                     "plural": false,
                     "selections": [
-                      (v6/*: any*/),
+                      (v4/*: any*/),
                       {
                         "kind": "ScalarField",
                         "alias": "last_message",
@@ -513,11 +498,18 @@ return {
                         "args": null,
                         "concreteType": "ConversationResponder",
                         "plural": false,
-                        "selections": (v9/*: any*/)
+                        "selections": (v7/*: any*/)
                       },
                       {
                         "kind": "ScalarField",
-                        "alias": "last_message_at",
+                        "alias": null,
+                        "name": "lastMessage",
+                        "args": null,
+                        "storageKey": null
+                      },
+                      {
+                        "kind": "ScalarField",
+                        "alias": null,
                         "name": "lastMessageAt",
                         "args": null,
                         "storageKey": null
@@ -547,7 +539,7 @@ return {
                             "concreteType": null,
                             "plural": false,
                             "selections": [
-                              (v10/*: any*/),
+                              (v8/*: any*/),
                               (v0/*: any*/),
                               {
                                 "kind": "InlineFragment",
@@ -567,8 +559,14 @@ return {
                                     "args": null,
                                     "storageKey": null
                                   },
-                                  (v5/*: any*/),
-                                  (v4/*: any*/)
+                                  {
+                                    "kind": "ScalarField",
+                                    "alias": null,
+                                    "name": "artistNames",
+                                    "args": null,
+                                    "storageKey": null
+                                  },
+                                  (v3/*: any*/)
                                 ]
                               },
                               {
@@ -583,18 +581,18 @@ return {
                                     "args": null,
                                     "concreteType": "Fair",
                                     "plural": false,
-                                    "selections": (v9/*: any*/)
+                                    "selections": (v7/*: any*/)
                                   },
-                                  (v8/*: any*/),
+                                  (v6/*: any*/),
                                   {
                                     "kind": "LinkedField",
-                                    "alias": "cover_image",
+                                    "alias": null,
                                     "name": "coverImage",
                                     "storageKey": null,
                                     "args": null,
                                     "concreteType": "Image",
                                     "plural": false,
-                                    "selections": (v3/*: any*/)
+                                    "selections": (v2/*: any*/)
                                   }
                                 ]
                               }
@@ -603,7 +601,7 @@ return {
                         ]
                       },
                       (v0/*: any*/),
-                      (v10/*: any*/)
+                      (v8/*: any*/)
                     ]
                   },
                   {
@@ -621,7 +619,7 @@ return {
             "kind": "LinkedHandle",
             "alias": "conversations",
             "name": "conversationsConnection",
-            "args": (v7/*: any*/),
+            "args": (v5/*: any*/),
             "handle": "connection",
             "key": "Conversations_conversations",
             "filters": null
@@ -634,7 +632,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "QueryRenderersInboxQuery",
-    "id": "6ac07550f58c7a8a2c827a60ebf10545",
+    "id": "6218c716f78e0e6159caac8e0906f62d",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/QueryRenderersShowQuery.graphql.ts b/src/__generated__/QueryRenderersShowQuery.graphql.ts
index fc3ae3809..aa89dcd5f 100644
--- a/src/__generated__/QueryRenderersShowQuery.graphql.ts
+++ b/src/__generated__/QueryRenderersShowQuery.graphql.ts
@@ -34,13 +34,7 @@ fragment Show_show on Show {
 fragment Detail_show on Show {
   internalID
   slug
-  name
   description
-  city
-  isStubShow
-  images {
-    internalID
-  }
   ...ShowHeader_show
   ...ShowArtworksPreview_show
   ...ShowArtistsPreview_show
@@ -61,7 +55,7 @@ fragment Detail_show on Show {
     }
     id
   }
-  artists_without_artworks: artistsWithoutArtworks {
+  artistsWithoutArtworks {
     slug
     id
   }
@@ -69,7 +63,6 @@ fragment Detail_show on Show {
     artworks
     artists
   }
-  status
   partner {
     __typename
     ... on Partner {
@@ -90,11 +83,9 @@ fragment ShowHeader_show on Show {
   internalID
   id
   name
-  press_release: pressRelease
   is_followed: isFollowed
   end_at: endAt
   exhibition_period: exhibitionPeriod
-  status
   isStubShow
   partner {
     __typename
@@ -220,7 +211,6 @@ fragment ShowItem_show on Show {
   end_at: endAt
   images {
     url
-    aspect_ratio: aspectRatio
   }
   partner {
     __typename
@@ -254,7 +244,6 @@ fragment ArtistListItem_artist on Artist {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -265,15 +254,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -333,101 +319,97 @@ v3 = {
 v4 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "name",
+  "name": "id",
   "args": null,
   "storageKey": null
 },
 v5 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "city",
+  "name": "name",
   "args": null,
   "storageKey": null
 },
 v6 = {
   "kind": "ScalarField",
-  "alias": null,
-  "name": "url",
+  "alias": "is_followed",
+  "name": "isFollowed",
   "args": null,
   "storageKey": null
 },
 v7 = {
   "kind": "ScalarField",
-  "alias": "aspect_ratio",
-  "name": "aspectRatio",
+  "alias": "end_at",
+  "name": "endAt",
   "args": null,
   "storageKey": null
 },
 v8 = {
   "kind": "ScalarField",
-  "alias": null,
-  "name": "id",
+  "alias": "exhibition_period",
+  "name": "exhibitionPeriod",
   "args": null,
   "storageKey": null
 },
 v9 = {
   "kind": "ScalarField",
-  "alias": "is_followed",
-  "name": "isFollowed",
+  "alias": null,
+  "name": "__typename",
   "args": null,
   "storageKey": null
 },
 v10 = {
   "kind": "ScalarField",
-  "alias": "end_at",
-  "name": "endAt",
+  "alias": null,
+  "name": "href",
   "args": null,
   "storageKey": null
 },
 v11 = {
   "kind": "ScalarField",
-  "alias": "exhibition_period",
-  "name": "exhibitionPeriod",
+  "alias": null,
+  "name": "url",
   "args": null,
   "storageKey": null
 },
 v12 = {
   "kind": "ScalarField",
-  "alias": null,
-  "name": "__typename",
+  "alias": "aspect_ratio",
+  "name": "aspectRatio",
   "args": null,
   "storageKey": null
 },
 v13 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "href",
-  "args": null,
-  "storageKey": null
-},
-v14 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "initials",
   "args": null,
   "storageKey": null
 },
-v15 = {
+v14 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "nationality",
   "args": null,
   "storageKey": null
 },
-v16 = {
+v15 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "birthday",
   "args": null,
   "storageKey": null
 },
-v17 = {
+v16 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "deathday",
   "args": null,
   "storageKey": null
 },
+v17 = [
+  (v11/*: any*/)
+],
 v18 = {
   "kind": "LinkedField",
   "alias": null,
@@ -436,13 +418,11 @@ v18 = {
   "args": null,
   "concreteType": "Image",
   "plural": false,
-  "selections": [
-    (v6/*: any*/)
-  ]
+  "selections": (v17/*: any*/)
 },
 v19 = [
-  (v4/*: any*/),
-  (v8/*: any*/)
+  (v5/*: any*/),
+  (v4/*: any*/)
 ];
 return {
   "kind": "Request",
@@ -487,7 +467,6 @@ return {
         "selections": [
           (v2/*: any*/),
           (v3/*: any*/),
-          (v4/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -495,43 +474,15 @@ return {
             "args": null,
             "storageKey": null
           },
+          (v4/*: any*/),
           (v5/*: any*/),
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "isStubShow",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "images",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "Image",
-            "plural": true,
-            "selections": [
-              (v2/*: any*/),
-              (v6/*: any*/),
-              (v7/*: any*/)
-            ]
-          },
+          (v6/*: any*/),
+          (v7/*: any*/),
           (v8/*: any*/),
-          {
-            "kind": "ScalarField",
-            "alias": "press_release",
-            "name": "pressRelease",
-            "args": null,
-            "storageKey": null
-          },
-          (v9/*: any*/),
-          (v10/*: any*/),
-          (v11/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
-            "name": "status",
+            "name": "isStubShow",
             "args": null,
             "storageKey": null
           },
@@ -544,15 +495,15 @@ return {
             "concreteType": null,
             "plural": false,
             "selections": [
-              (v12/*: any*/),
-              (v8/*: any*/),
+              (v9/*: any*/),
+              (v4/*: any*/),
               {
                 "kind": "InlineFragment",
                 "type": "Partner",
                 "selections": [
-                  (v4/*: any*/),
+                  (v5/*: any*/),
                   (v3/*: any*/),
-                  (v13/*: any*/),
+                  (v10/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": null,
@@ -564,6 +515,19 @@ return {
               }
             ]
           },
+          {
+            "kind": "LinkedField",
+            "alias": null,
+            "name": "images",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Image",
+            "plural": true,
+            "selections": [
+              (v11/*: any*/),
+              (v12/*: any*/)
+            ]
+          },
           {
             "kind": "LinkedField",
             "alias": "followedArtists",
@@ -606,11 +570,11 @@ return {
                         "concreteType": "Artist",
                         "plural": false,
                         "selections": [
-                          (v4/*: any*/),
-                          (v13/*: any*/),
+                          (v5/*: any*/),
+                          (v10/*: any*/),
                           (v3/*: any*/),
                           (v2/*: any*/),
-                          (v8/*: any*/)
+                          (v4/*: any*/)
                         ]
                       }
                     ]
@@ -628,16 +592,16 @@ return {
             "concreteType": "Artist",
             "plural": true,
             "selections": [
-              (v4/*: any*/),
-              (v13/*: any*/),
+              (v5/*: any*/),
+              (v10/*: any*/),
               (v3/*: any*/),
               (v2/*: any*/),
-              (v8/*: any*/),
+              (v4/*: any*/),
+              (v13/*: any*/),
+              (v6/*: any*/),
               (v14/*: any*/),
-              (v9/*: any*/),
               (v15/*: any*/),
               (v16/*: any*/),
-              (v17/*: any*/),
               (v18/*: any*/)
             ]
           },
@@ -699,8 +663,7 @@ return {
                     "concreteType": "Artwork",
                     "plural": false,
                     "selections": [
-                      (v8/*: any*/),
-                      (v3/*: any*/),
+                      (v4/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -710,7 +673,7 @@ return {
                         "concreteType": "Image",
                         "plural": false,
                         "selections": [
-                          (v7/*: any*/),
+                          (v12/*: any*/),
                           {
                             "kind": "ScalarField",
                             "alias": null,
@@ -747,13 +710,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -775,6 +731,7 @@ return {
                         "args": null,
                         "storageKey": null
                       },
+                      (v3/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -791,20 +748,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_live_open",
-                            "name": "isLiveOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_open",
-                            "name": "isOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -819,7 +762,7 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          (v8/*: any*/)
+                          (v4/*: any*/)
                         ]
                       },
                       {
@@ -849,7 +792,7 @@ return {
                               }
                             ]
                           },
-                          (v8/*: any*/)
+                          (v4/*: any*/)
                         ]
                       },
                       {
@@ -878,7 +821,7 @@ return {
                         "plural": false,
                         "selections": (v19/*: any*/)
                       },
-                      (v13/*: any*/)
+                      (v10/*: any*/)
                     ]
                   }
                 ]
@@ -894,16 +837,16 @@ return {
             "concreteType": "Artist",
             "plural": true,
             "selections": [
-              (v8/*: any*/),
+              (v4/*: any*/),
               (v2/*: any*/),
               (v3/*: any*/),
+              (v10/*: any*/),
+              (v5/*: any*/),
               (v13/*: any*/),
-              (v4/*: any*/),
+              (v6/*: any*/),
               (v14/*: any*/),
-              (v9/*: any*/),
               (v15/*: any*/),
               (v16/*: any*/),
-              (v17/*: any*/),
               (v18/*: any*/)
             ]
           },
@@ -940,12 +883,12 @@ return {
                     "concreteType": "Show",
                     "plural": false,
                     "selections": [
-                      (v8/*: any*/),
+                      (v4/*: any*/),
                       (v2/*: any*/),
                       (v3/*: any*/),
-                      (v4/*: any*/),
-                      (v11/*: any*/),
-                      (v10/*: any*/),
+                      (v5/*: any*/),
+                      (v8/*: any*/),
+                      (v7/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -954,10 +897,7 @@ return {
                         "args": null,
                         "concreteType": "Image",
                         "plural": true,
-                        "selections": [
-                          (v6/*: any*/),
-                          (v7/*: any*/)
-                        ]
+                        "selections": (v17/*: any*/)
                       },
                       {
                         "kind": "LinkedField",
@@ -968,13 +908,13 @@ return {
                         "concreteType": null,
                         "plural": false,
                         "selections": [
-                          (v12/*: any*/),
-                          (v8/*: any*/),
+                          (v9/*: any*/),
+                          (v4/*: any*/),
                           {
                             "kind": "InlineFragment",
                             "type": "Partner",
                             "selections": [
-                              (v4/*: any*/)
+                              (v5/*: any*/)
                             ]
                           }
                         ]
@@ -994,9 +934,15 @@ return {
             "concreteType": "Location",
             "plural": false,
             "selections": [
-              (v8/*: any*/),
+              (v4/*: any*/),
               (v2/*: any*/),
-              (v5/*: any*/),
+              {
+                "kind": "ScalarField",
+                "alias": null,
+                "name": "city",
+                "args": null,
+                "storageKey": null
+              },
               {
                 "kind": "ScalarField",
                 "alias": null,
@@ -1091,7 +1037,7 @@ return {
                 "concreteType": null,
                 "plural": false,
                 "selections": [
-                  (v12/*: any*/),
+                  (v9/*: any*/),
                   {
                     "kind": "InlineFragment",
                     "type": "OpeningHoursArray",
@@ -1139,6 +1085,19 @@ return {
                 ]
               }
             ]
+          },
+          {
+            "kind": "LinkedField",
+            "alias": null,
+            "name": "artistsWithoutArtworks",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Artist",
+            "plural": true,
+            "selections": [
+              (v3/*: any*/),
+              (v4/*: any*/)
+            ]
           }
         ]
       }
@@ -1147,7 +1106,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "QueryRenderersShowQuery",
-    "id": "fa9dd716401affd874bb8bec3f186ffb",
+    "id": "ea21177513a76534df734d1651dae71b",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/QueryRenderersWorksForYouQuery.graphql.ts b/src/__generated__/QueryRenderersWorksForYouQuery.graphql.ts
index c475de3c6..46eff1f63 100644
--- a/src/__generated__/QueryRenderersWorksForYouQuery.graphql.ts
+++ b/src/__generated__/QueryRenderersWorksForYouQuery.graphql.ts
@@ -87,7 +87,6 @@ fragment Notification_notification on FollowedArtistsArtworksGroup {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -98,15 +97,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -185,13 +181,6 @@ v7 = {
   "storageKey": null
 },
 v8 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "slug",
-  "args": null,
-  "storageKey": null
-},
-v9 = {
   "kind": "LinkedField",
   "alias": null,
   "name": "image",
@@ -222,56 +211,56 @@ v9 = {
     }
   ]
 },
-v10 = {
+v9 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "title",
   "args": null,
   "storageKey": null
 },
-v11 = {
+v10 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "date",
   "args": null,
   "storageKey": null
 },
-v12 = {
+v11 = {
   "kind": "ScalarField",
   "alias": "sale_message",
   "name": "saleMessage",
   "args": null,
   "storageKey": null
 },
-v13 = {
-  "kind": "ScalarField",
-  "alias": "is_in_auction",
-  "name": "isInAuction",
-  "args": null,
-  "storageKey": null
-},
-v14 = {
+v12 = {
   "kind": "ScalarField",
   "alias": "is_biddable",
   "name": "isBiddable",
   "args": null,
   "storageKey": null
 },
-v15 = {
+v13 = {
   "kind": "ScalarField",
   "alias": "is_acquireable",
   "name": "isAcquireable",
   "args": null,
   "storageKey": null
 },
-v16 = {
+v14 = {
   "kind": "ScalarField",
   "alias": "is_offerable",
   "name": "isOfferable",
   "args": null,
   "storageKey": null
 },
-v17 = {
+v15 = {
+  "kind": "ScalarField",
+  "alias": null,
+  "name": "slug",
+  "args": null,
+  "storageKey": null
+},
+v16 = {
   "kind": "LinkedField",
   "alias": null,
   "name": "sale",
@@ -287,20 +276,6 @@ v17 = {
       "args": null,
       "storageKey": null
     },
-    {
-      "kind": "ScalarField",
-      "alias": "is_live_open",
-      "name": "isLiveOpen",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "is_open",
-      "name": "isOpen",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "ScalarField",
       "alias": "is_closed",
@@ -318,7 +293,7 @@ v17 = {
     (v4/*: any*/)
   ]
 },
-v18 = {
+v17 = {
   "kind": "LinkedField",
   "alias": "sale_artwork",
   "name": "saleArtwork",
@@ -348,11 +323,11 @@ v18 = {
     (v4/*: any*/)
   ]
 },
-v19 = [
+v18 = [
   (v7/*: any*/),
   (v4/*: any*/)
 ],
-v20 = {
+v19 = {
   "kind": "LinkedField",
   "alias": null,
   "name": "partner",
@@ -360,9 +335,9 @@ v20 = {
   "args": null,
   "concreteType": "Partner",
   "plural": false,
-  "selections": (v19/*: any*/)
+  "selections": (v18/*: any*/)
 },
-v21 = {
+v20 = {
   "kind": "LinkedField",
   "alias": null,
   "name": "image",
@@ -568,8 +543,7 @@ return {
                                       (v15/*: any*/),
                                       (v16/*: any*/),
                                       (v17/*: any*/),
-                                      (v18/*: any*/),
-                                      (v20/*: any*/),
+                                      (v19/*: any*/),
                                       (v6/*: any*/)
                                     ]
                                   }
@@ -577,7 +551,7 @@ return {
                               }
                             ]
                           },
-                          (v21/*: any*/),
+                          (v20/*: any*/),
                           {
                             "kind": "ScalarField",
                             "alias": null,
@@ -629,10 +603,10 @@ return {
         "concreteType": "Artist",
         "plural": false,
         "selections": [
-          (v8/*: any*/),
+          (v15/*: any*/),
           (v6/*: any*/),
           (v7/*: any*/),
-          (v21/*: any*/),
+          (v20/*: any*/),
           {
             "kind": "LinkedField",
             "alias": "artworks",
@@ -678,7 +652,6 @@ return {
                       (v15/*: any*/),
                       (v16/*: any*/),
                       (v17/*: any*/),
-                      (v18/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -687,9 +660,9 @@ return {
                         "args": (v5/*: any*/),
                         "concreteType": "Artist",
                         "plural": true,
-                        "selections": (v19/*: any*/)
+                        "selections": (v18/*: any*/)
                       },
-                      (v20/*: any*/),
+                      (v19/*: any*/),
                       (v6/*: any*/)
                     ]
                   }
@@ -705,7 +678,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "QueryRenderersWorksForYouQuery",
-    "id": "0760d786a02e77be8a94f7090d526067",
+    "id": "53627c5acf2d8fe8e5b9f8887a9a7333",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/RelatedArtist_artist.graphql.ts b/src/__generated__/RelatedArtist_artist.graphql.ts
index 6ef0f0f74..6ee5afe6c 100644
--- a/src/__generated__/RelatedArtist_artist.graphql.ts
+++ b/src/__generated__/RelatedArtist_artist.graphql.ts
@@ -7,7 +7,7 @@ export type RelatedArtist_artist = {
     readonly href: string | null;
     readonly name: string | null;
     readonly counts: {
-        readonly for_sale_artworks: any | null;
+        readonly forSaleArtworks: any | null;
         readonly artworks: any | null;
     } | null;
     readonly image: {
@@ -50,7 +50,7 @@ const node: ReaderFragment = {
       "selections": [
         {
           "kind": "ScalarField",
-          "alias": "for_sale_artworks",
+          "alias": null,
           "name": "forSaleArtworks",
           "args": null,
           "storageKey": null
@@ -90,5 +90,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = 'd1df65fb9240d9d6b3d34e133d35ef0b';
+(node as any).hash = 'a01ba9e049116bbbbb2881a012289fa8';
 export default node;
diff --git a/src/__generated__/SaleListItem_sale.graphql.ts b/src/__generated__/SaleListItem_sale.graphql.ts
index 5a0d8f314..7120a71ce 100644
--- a/src/__generated__/SaleListItem_sale.graphql.ts
+++ b/src/__generated__/SaleListItem_sale.graphql.ts
@@ -4,20 +4,13 @@ import { ReaderFragment } from "relay-runtime";
 declare const _SaleListItem_sale$ref: unique symbol;
 export type SaleListItem_sale$ref = typeof _SaleListItem_sale$ref;
 export type SaleListItem_sale = {
-    readonly slug: string;
     readonly name: string | null;
     readonly href: string | null;
-    readonly is_open: boolean | null;
-    readonly is_live_open: boolean | null;
-    readonly live_url_if_open: string | null;
-    readonly start_at: string | null;
-    readonly end_at: string | null;
-    readonly registration_ends_at: string | null;
-    readonly live_start_at: string | null;
-    readonly display_timely_at: string | null;
-    readonly cover_image: {
+    readonly liveURLIfOpen: string | null;
+    readonly liveStartAt: string | null;
+    readonly displayTimelyAt: string | null;
+    readonly coverImage: {
         readonly url: string | null;
-        readonly aspect_ratio: number;
     } | null;
     readonly " $refType": SaleListItem_sale$ref;
 };
@@ -31,13 +24,6 @@ const node: ReaderFragment = {
   "metadata": null,
   "argumentDefinitions": [],
   "selections": [
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "slug",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "ScalarField",
       "alias": null,
@@ -54,63 +40,28 @@ const node: ReaderFragment = {
     },
     {
       "kind": "ScalarField",
-      "alias": "is_open",
-      "name": "isOpen",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "is_live_open",
-      "name": "isLiveOpen",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "live_url_if_open",
+      "alias": null,
       "name": "liveURLIfOpen",
       "args": null,
       "storageKey": null
     },
     {
       "kind": "ScalarField",
-      "alias": "start_at",
-      "name": "startAt",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "end_at",
-      "name": "endAt",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "registration_ends_at",
-      "name": "registrationEndsAt",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "live_start_at",
+      "alias": null,
       "name": "liveStartAt",
       "args": null,
       "storageKey": null
     },
     {
       "kind": "ScalarField",
-      "alias": "display_timely_at",
+      "alias": null,
       "name": "displayTimelyAt",
       "args": null,
       "storageKey": null
     },
     {
       "kind": "LinkedField",
-      "alias": "cover_image",
+      "alias": null,
       "name": "coverImage",
       "storageKey": null,
       "args": null,
@@ -129,17 +80,10 @@ const node: ReaderFragment = {
             }
           ],
           "storageKey": "url(version:\"large\")"
-        },
-        {
-          "kind": "ScalarField",
-          "alias": "aspect_ratio",
-          "name": "aspectRatio",
-          "args": null,
-          "storageKey": null
         }
       ]
     }
   ]
 };
-(node as any).hash = 'e069a0350693c90a17cbde4410b0c918';
+(node as any).hash = '05316e5bbded808509ab908b676ae8fe';
 export default node;
diff --git a/src/__generated__/SalesQuery.graphql.ts b/src/__generated__/SalesQuery.graphql.ts
index 44eaad092..a58aa930e 100644
--- a/src/__generated__/SalesQuery.graphql.ts
+++ b/src/__generated__/SalesQuery.graphql.ts
@@ -23,7 +23,6 @@ fragment Sales_query on Query {
     edges {
       node {
         ...SaleListItem_sale
-        href
         live_start_at: liveStartAt
         id
       }
@@ -33,20 +32,13 @@ fragment Sales_query on Query {
 }
 
 fragment SaleListItem_sale on Sale {
-  slug
   name
   href
-  is_open: isOpen
-  is_live_open: isLiveOpen
-  live_url_if_open: liveURLIfOpen
-  start_at: startAt
-  end_at: endAt
-  registration_ends_at: registrationEndsAt
-  live_start_at: liveStartAt
-  display_timely_at: displayTimelyAt
-  cover_image: coverImage {
+  liveURLIfOpen
+  liveStartAt
+  displayTimelyAt
+  coverImage {
     url(version: "large")
-    aspect_ratio: aspectRatio
   }
 }
 
@@ -97,15 +89,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -139,48 +128,20 @@ var v0 = {
   "value": true
 },
 v1 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "slug",
-  "args": null,
-  "storageKey": null
-},
-v2 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "name",
   "args": null,
   "storageKey": null
 },
-v3 = {
+v2 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "href",
   "args": null,
   "storageKey": null
 },
-v4 = {
-  "kind": "ScalarField",
-  "alias": "is_open",
-  "name": "isOpen",
-  "args": null,
-  "storageKey": null
-},
-v5 = {
-  "kind": "ScalarField",
-  "alias": "is_live_open",
-  "name": "isLiveOpen",
-  "args": null,
-  "storageKey": null
-},
-v6 = {
-  "kind": "ScalarField",
-  "alias": "display_timely_at",
-  "name": "displayTimelyAt",
-  "args": null,
-  "storageKey": null
-},
-v7 = {
+v3 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "url",
@@ -193,21 +154,14 @@ v7 = {
   ],
   "storageKey": "url(version:\"large\")"
 },
-v8 = {
-  "kind": "ScalarField",
-  "alias": "aspect_ratio",
-  "name": "aspectRatio",
-  "args": null,
-  "storageKey": null
-},
-v9 = {
+v4 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "id",
   "args": null,
   "storageKey": null
 },
-v10 = [
+v5 = [
   {
     "kind": "Literal",
     "name": "first",
@@ -220,9 +174,9 @@ v10 = [
     "value": true
   }
 ],
-v11 = [
-  (v2/*: any*/),
-  (v9/*: any*/)
+v6 = [
+  (v1/*: any*/),
+  (v4/*: any*/)
 ];
 return {
   "kind": "Request",
@@ -291,59 +245,47 @@ return {
                 "selections": [
                   (v1/*: any*/),
                   (v2/*: any*/),
-                  (v3/*: any*/),
-                  (v4/*: any*/),
-                  (v5/*: any*/),
                   {
                     "kind": "ScalarField",
-                    "alias": "live_url_if_open",
+                    "alias": null,
                     "name": "liveURLIfOpen",
                     "args": null,
                     "storageKey": null
                   },
                   {
                     "kind": "ScalarField",
-                    "alias": "start_at",
-                    "name": "startAt",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  {
-                    "kind": "ScalarField",
-                    "alias": "end_at",
-                    "name": "endAt",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  {
-                    "kind": "ScalarField",
-                    "alias": "registration_ends_at",
-                    "name": "registrationEndsAt",
+                    "alias": null,
+                    "name": "liveStartAt",
                     "args": null,
                     "storageKey": null
                   },
                   {
                     "kind": "ScalarField",
-                    "alias": "live_start_at",
-                    "name": "liveStartAt",
+                    "alias": null,
+                    "name": "displayTimelyAt",
                     "args": null,
                     "storageKey": null
                   },
-                  (v6/*: any*/),
                   {
                     "kind": "LinkedField",
-                    "alias": "cover_image",
+                    "alias": null,
                     "name": "coverImage",
                     "storageKey": null,
                     "args": null,
                     "concreteType": "Image",
                     "plural": false,
                     "selections": [
-                      (v7/*: any*/),
-                      (v8/*: any*/)
+                      (v3/*: any*/)
                     ]
                   },
-                  (v9/*: any*/)
+                  {
+                    "kind": "ScalarField",
+                    "alias": "live_start_at",
+                    "name": "liveStartAt",
+                    "args": null,
+                    "storageKey": null
+                  },
+                  (v4/*: any*/)
                 ]
               }
             ]
@@ -364,7 +306,7 @@ return {
             "alias": null,
             "name": "lotsByFollowedArtistsConnection",
             "storageKey": "lotsByFollowedArtistsConnection(first:10,isAuction:true,liveSale:true)",
-            "args": (v10/*: any*/),
+            "args": (v5/*: any*/),
             "concreteType": "SaleArtworksConnection",
             "plural": false,
             "selections": [
@@ -400,8 +342,14 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      (v9/*: any*/),
-                      (v1/*: any*/),
+                      (v4/*: any*/),
+                      {
+                        "kind": "ScalarField",
+                        "alias": null,
+                        "name": "slug",
+                        "args": null,
+                        "storageKey": null
+                      },
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -418,8 +366,14 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          (v7/*: any*/),
-                          (v8/*: any*/)
+                          (v3/*: any*/),
+                          {
+                            "kind": "ScalarField",
+                            "alias": "aspect_ratio",
+                            "name": "aspectRatio",
+                            "args": null,
+                            "storageKey": null
+                          }
                         ]
                       },
                       {
@@ -443,13 +397,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -487,8 +434,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          (v5/*: any*/),
-                          (v4/*: any*/),
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -496,8 +441,14 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          (v6/*: any*/),
-                          (v9/*: any*/)
+                          {
+                            "kind": "ScalarField",
+                            "alias": "display_timely_at",
+                            "name": "displayTimelyAt",
+                            "args": null,
+                            "storageKey": null
+                          },
+                          (v4/*: any*/)
                         ]
                       },
                       {
@@ -527,7 +478,7 @@ return {
                               }
                             ]
                           },
-                          (v9/*: any*/)
+                          (v4/*: any*/)
                         ]
                       },
                       {
@@ -544,7 +495,7 @@ return {
                         ],
                         "concreteType": "Artist",
                         "plural": true,
-                        "selections": (v11/*: any*/)
+                        "selections": (v6/*: any*/)
                       },
                       {
                         "kind": "LinkedField",
@@ -554,12 +505,12 @@ return {
                         "args": null,
                         "concreteType": "Partner",
                         "plural": false,
-                        "selections": (v11/*: any*/)
+                        "selections": (v6/*: any*/)
                       },
-                      (v3/*: any*/)
+                      (v2/*: any*/)
                     ]
                   },
-                  (v9/*: any*/)
+                  (v4/*: any*/)
                 ]
               },
               {
@@ -600,7 +551,7 @@ return {
             "kind": "LinkedHandle",
             "alias": null,
             "name": "lotsByFollowedArtistsConnection",
-            "args": (v10/*: any*/),
+            "args": (v5/*: any*/),
             "handle": "connection",
             "key": "LotsByFollowedArtists_lotsByFollowedArtistsConnection",
             "filters": [
@@ -608,7 +559,7 @@ return {
               "isAuction"
             ]
           },
-          (v9/*: any*/)
+          (v4/*: any*/)
         ]
       }
     ]
@@ -616,7 +567,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "SalesQuery",
-    "id": "7feb04a62bb6a47d8a8ad1e4becdcb27",
+    "id": "2567e9692a5e88c53a9cf039dab4d0b4",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/SalesRendererQuery.graphql.ts b/src/__generated__/SalesRendererQuery.graphql.ts
index 2fa0e1296..3fd437287 100644
--- a/src/__generated__/SalesRendererQuery.graphql.ts
+++ b/src/__generated__/SalesRendererQuery.graphql.ts
@@ -23,7 +23,6 @@ fragment Sales_query on Query {
     edges {
       node {
         ...SaleListItem_sale
-        href
         live_start_at: liveStartAt
         id
       }
@@ -33,20 +32,13 @@ fragment Sales_query on Query {
 }
 
 fragment SaleListItem_sale on Sale {
-  slug
   name
   href
-  is_open: isOpen
-  is_live_open: isLiveOpen
-  live_url_if_open: liveURLIfOpen
-  start_at: startAt
-  end_at: endAt
-  registration_ends_at: registrationEndsAt
-  live_start_at: liveStartAt
-  display_timely_at: displayTimelyAt
-  cover_image: coverImage {
+  liveURLIfOpen
+  liveStartAt
+  displayTimelyAt
+  coverImage {
     url(version: "large")
-    aspect_ratio: aspectRatio
   }
 }
 
@@ -97,15 +89,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -139,48 +128,20 @@ var v0 = {
   "value": true
 },
 v1 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "slug",
-  "args": null,
-  "storageKey": null
-},
-v2 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "name",
   "args": null,
   "storageKey": null
 },
-v3 = {
+v2 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "href",
   "args": null,
   "storageKey": null
 },
-v4 = {
-  "kind": "ScalarField",
-  "alias": "is_open",
-  "name": "isOpen",
-  "args": null,
-  "storageKey": null
-},
-v5 = {
-  "kind": "ScalarField",
-  "alias": "is_live_open",
-  "name": "isLiveOpen",
-  "args": null,
-  "storageKey": null
-},
-v6 = {
-  "kind": "ScalarField",
-  "alias": "display_timely_at",
-  "name": "displayTimelyAt",
-  "args": null,
-  "storageKey": null
-},
-v7 = {
+v3 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "url",
@@ -193,21 +154,14 @@ v7 = {
   ],
   "storageKey": "url(version:\"large\")"
 },
-v8 = {
-  "kind": "ScalarField",
-  "alias": "aspect_ratio",
-  "name": "aspectRatio",
-  "args": null,
-  "storageKey": null
-},
-v9 = {
+v4 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "id",
   "args": null,
   "storageKey": null
 },
-v10 = [
+v5 = [
   {
     "kind": "Literal",
     "name": "first",
@@ -220,9 +174,9 @@ v10 = [
     "value": true
   }
 ],
-v11 = [
-  (v2/*: any*/),
-  (v9/*: any*/)
+v6 = [
+  (v1/*: any*/),
+  (v4/*: any*/)
 ];
 return {
   "kind": "Request",
@@ -291,59 +245,47 @@ return {
                 "selections": [
                   (v1/*: any*/),
                   (v2/*: any*/),
-                  (v3/*: any*/),
-                  (v4/*: any*/),
-                  (v5/*: any*/),
                   {
                     "kind": "ScalarField",
-                    "alias": "live_url_if_open",
+                    "alias": null,
                     "name": "liveURLIfOpen",
                     "args": null,
                     "storageKey": null
                   },
                   {
                     "kind": "ScalarField",
-                    "alias": "start_at",
-                    "name": "startAt",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  {
-                    "kind": "ScalarField",
-                    "alias": "end_at",
-                    "name": "endAt",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  {
-                    "kind": "ScalarField",
-                    "alias": "registration_ends_at",
-                    "name": "registrationEndsAt",
+                    "alias": null,
+                    "name": "liveStartAt",
                     "args": null,
                     "storageKey": null
                   },
                   {
                     "kind": "ScalarField",
-                    "alias": "live_start_at",
-                    "name": "liveStartAt",
+                    "alias": null,
+                    "name": "displayTimelyAt",
                     "args": null,
                     "storageKey": null
                   },
-                  (v6/*: any*/),
                   {
                     "kind": "LinkedField",
-                    "alias": "cover_image",
+                    "alias": null,
                     "name": "coverImage",
                     "storageKey": null,
                     "args": null,
                     "concreteType": "Image",
                     "plural": false,
                     "selections": [
-                      (v7/*: any*/),
-                      (v8/*: any*/)
+                      (v3/*: any*/)
                     ]
                   },
-                  (v9/*: any*/)
+                  {
+                    "kind": "ScalarField",
+                    "alias": "live_start_at",
+                    "name": "liveStartAt",
+                    "args": null,
+                    "storageKey": null
+                  },
+                  (v4/*: any*/)
                 ]
               }
             ]
@@ -364,7 +306,7 @@ return {
             "alias": null,
             "name": "lotsByFollowedArtistsConnection",
             "storageKey": "lotsByFollowedArtistsConnection(first:10,isAuction:true,liveSale:true)",
-            "args": (v10/*: any*/),
+            "args": (v5/*: any*/),
             "concreteType": "SaleArtworksConnection",
             "plural": false,
             "selections": [
@@ -400,8 +342,14 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      (v9/*: any*/),
-                      (v1/*: any*/),
+                      (v4/*: any*/),
+                      {
+                        "kind": "ScalarField",
+                        "alias": null,
+                        "name": "slug",
+                        "args": null,
+                        "storageKey": null
+                      },
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -418,8 +366,14 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          (v7/*: any*/),
-                          (v8/*: any*/)
+                          (v3/*: any*/),
+                          {
+                            "kind": "ScalarField",
+                            "alias": "aspect_ratio",
+                            "name": "aspectRatio",
+                            "args": null,
+                            "storageKey": null
+                          }
                         ]
                       },
                       {
@@ -443,13 +397,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -487,8 +434,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          (v5/*: any*/),
-                          (v4/*: any*/),
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -496,8 +441,14 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          (v6/*: any*/),
-                          (v9/*: any*/)
+                          {
+                            "kind": "ScalarField",
+                            "alias": "display_timely_at",
+                            "name": "displayTimelyAt",
+                            "args": null,
+                            "storageKey": null
+                          },
+                          (v4/*: any*/)
                         ]
                       },
                       {
@@ -527,7 +478,7 @@ return {
                               }
                             ]
                           },
-                          (v9/*: any*/)
+                          (v4/*: any*/)
                         ]
                       },
                       {
@@ -544,7 +495,7 @@ return {
                         ],
                         "concreteType": "Artist",
                         "plural": true,
-                        "selections": (v11/*: any*/)
+                        "selections": (v6/*: any*/)
                       },
                       {
                         "kind": "LinkedField",
@@ -554,12 +505,12 @@ return {
                         "args": null,
                         "concreteType": "Partner",
                         "plural": false,
-                        "selections": (v11/*: any*/)
+                        "selections": (v6/*: any*/)
                       },
-                      (v3/*: any*/)
+                      (v2/*: any*/)
                     ]
                   },
-                  (v9/*: any*/)
+                  (v4/*: any*/)
                 ]
               },
               {
@@ -600,7 +551,7 @@ return {
             "kind": "LinkedHandle",
             "alias": null,
             "name": "lotsByFollowedArtistsConnection",
-            "args": (v10/*: any*/),
+            "args": (v5/*: any*/),
             "handle": "connection",
             "key": "LotsByFollowedArtists_lotsByFollowedArtistsConnection",
             "filters": [
@@ -608,7 +559,7 @@ return {
               "isAuction"
             ]
           },
-          (v9/*: any*/)
+          (v4/*: any*/)
         ]
       }
     ]
@@ -616,7 +567,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "SalesRendererQuery",
-    "id": "3e552ef30cf75bce92cc14182ab003ab",
+    "id": "ab88257156b8275d75cf08e24c1d6bb7",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/Sales_query.graphql.ts b/src/__generated__/Sales_query.graphql.ts
index ee3b9bcaa..c1cfcba80 100644
--- a/src/__generated__/Sales_query.graphql.ts
+++ b/src/__generated__/Sales_query.graphql.ts
@@ -9,7 +9,6 @@ export type Sales_query = {
     readonly salesConnection: {
         readonly edges: ReadonlyArray<{
             readonly node: {
-                readonly href: string | null;
                 readonly live_start_at: string | null;
                 readonly " $fragmentRefs": SaleListItem_sale$ref;
             } | null;
@@ -76,13 +75,6 @@ const node: ReaderFragment = {
               "concreteType": "Sale",
               "plural": false,
               "selections": [
-                {
-                  "kind": "ScalarField",
-                  "alias": null,
-                  "name": "href",
-                  "args": null,
-                  "storageKey": null
-                },
                 {
                   "kind": "ScalarField",
                   "alias": "live_start_at",
@@ -108,5 +100,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = 'e94deed573d0d7b1e83d4dcb905cc75b';
+(node as any).hash = 'c69fdf7f4fd289f56a4bff2f9bd5f82d';
 export default node;
diff --git a/src/__generated__/SelectMaxBidRefetchQuery.graphql.ts b/src/__generated__/SelectMaxBidRefetchQuery.graphql.ts
index dc6ba77e0..fe9e31b04 100644
--- a/src/__generated__/SelectMaxBidRefetchQuery.graphql.ts
+++ b/src/__generated__/SelectMaxBidRefetchQuery.graphql.ts
@@ -32,7 +32,6 @@ fragment SelectMaxBid_sale_artwork on SaleArtwork {
   id
   increments(useMyMaxBid: true) {
     display
-    cents
   }
   ...ConfirmBid_sale_artwork
 }
@@ -60,14 +59,9 @@ fragment ConfirmBid_sale_artwork on SaleArtwork {
 }
 
 fragment BidResult_sale_artwork on SaleArtwork {
-  minimum_next_bid: minimumNextBid {
-    amount
-    cents
-    display
-  }
   sale {
-    live_start_at: liveStartAt
-    end_at: endAt
+    liveStartAt
+    endAt
     slug
     id
   }
@@ -98,20 +92,6 @@ v2 = {
   "storageKey": null
 },
 v3 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "display",
-  "args": null,
-  "storageKey": null
-},
-v4 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "cents",
-  "args": null,
-  "storageKey": null
-},
-v5 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "slug",
@@ -186,8 +166,13 @@ return {
                 "concreteType": "BidIncrementsFormatted",
                 "plural": true,
                 "selections": [
-                  (v3/*: any*/),
-                  (v4/*: any*/)
+                  {
+                    "kind": "ScalarField",
+                    "alias": null,
+                    "name": "display",
+                    "args": null,
+                    "storageKey": null
+                  }
                 ]
               },
               {
@@ -206,7 +191,7 @@ return {
                 "concreteType": "Sale",
                 "plural": false,
                 "selections": [
-                  (v5/*: any*/),
+                  (v3/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": "live_start_at",
@@ -221,7 +206,21 @@ return {
                     "args": null,
                     "storageKey": null
                   },
-                  (v2/*: any*/)
+                  (v2/*: any*/),
+                  {
+                    "kind": "ScalarField",
+                    "alias": null,
+                    "name": "liveStartAt",
+                    "args": null,
+                    "storageKey": null
+                  },
+                  {
+                    "kind": "ScalarField",
+                    "alias": null,
+                    "name": "endAt",
+                    "args": null,
+                    "storageKey": null
+                  }
                 ]
               },
               {
@@ -233,7 +232,7 @@ return {
                 "concreteType": "Artwork",
                 "plural": false,
                 "selections": [
-                  (v5/*: any*/),
+                  (v3/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": null,
@@ -288,26 +287,6 @@ return {
                 "name": "lotLabel",
                 "args": null,
                 "storageKey": null
-              },
-              {
-                "kind": "LinkedField",
-                "alias": "minimum_next_bid",
-                "name": "minimumNextBid",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "SaleArtworkMinimumNextBid",
-                "plural": false,
-                "selections": [
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "amount",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  (v4/*: any*/),
-                  (v3/*: any*/)
-                ]
               }
             ]
           }
@@ -318,7 +297,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "SelectMaxBidRefetchQuery",
-    "id": "f0b91ec66bc0c2a61f9660292a98b39f",
+    "id": "fe2507ee54eaefdc6a529a461e322dfd",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/SelectMaxBid_sale_artwork.graphql.ts b/src/__generated__/SelectMaxBid_sale_artwork.graphql.ts
index 88a89ba4a..fc0913036 100644
--- a/src/__generated__/SelectMaxBid_sale_artwork.graphql.ts
+++ b/src/__generated__/SelectMaxBid_sale_artwork.graphql.ts
@@ -8,7 +8,6 @@ export type SelectMaxBid_sale_artwork = {
     readonly id: string;
     readonly increments: ReadonlyArray<{
         readonly display: string | null;
-        readonly cents: number | null;
     } | null> | null;
     readonly " $fragmentRefs": ConfirmBid_sale_artwork$ref;
     readonly " $refType": SelectMaxBid_sale_artwork$ref;
@@ -51,13 +50,6 @@ const node: ReaderFragment = {
           "name": "display",
           "args": null,
           "storageKey": null
-        },
-        {
-          "kind": "ScalarField",
-          "alias": null,
-          "name": "cents",
-          "args": null,
-          "storageKey": null
         }
       ]
     },
@@ -68,5 +60,5 @@ const node: ReaderFragment = {
     }
   ]
 };
-(node as any).hash = 'da3f4c5b318013c4b3203bcd274c23bb';
+(node as any).hash = 'a02cfab9770fae1ebabcd2357d637878';
 export default node;
diff --git a/src/__generated__/ShowArtworksPreviewTestsQuery.graphql.ts b/src/__generated__/ShowArtworksPreviewTestsQuery.graphql.ts
index 52f8c516d..64783f0ae 100644
--- a/src/__generated__/ShowArtworksPreviewTestsQuery.graphql.ts
+++ b/src/__generated__/ShowArtworksPreviewTestsQuery.graphql.ts
@@ -40,7 +40,6 @@ fragment ShowArtworksPreview_show on Show {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -51,15 +50,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -205,13 +201,6 @@ return {
                     "plural": false,
                     "selections": [
                       (v1/*: any*/),
-                      {
-                        "kind": "ScalarField",
-                        "alias": null,
-                        "name": "slug",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -264,13 +253,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -292,6 +274,13 @@ return {
                         "args": null,
                         "storageKey": null
                       },
+                      {
+                        "kind": "ScalarField",
+                        "alias": null,
+                        "name": "slug",
+                        "args": null,
+                        "storageKey": null
+                      },
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -308,20 +297,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_live_open",
-                            "name": "isLiveOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_open",
-                            "name": "isOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -415,7 +390,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ShowArtworksPreviewTestsQuery",
-    "id": "264f7bdab64c1a3472de8bf33b0fd698",
+    "id": "c9cdbe49285e576f732007a415eff478",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/ShowArtworksQuery.graphql.ts b/src/__generated__/ShowArtworksQuery.graphql.ts
index 81b750190..b10f923cd 100644
--- a/src/__generated__/ShowArtworksQuery.graphql.ts
+++ b/src/__generated__/ShowArtworksQuery.graphql.ts
@@ -40,7 +40,6 @@ fragment FilteredInfiniteScrollGrid_entity on EntityWithFilterArtworksConnection
     edges {
       node {
         id
-        slug
         __typename
       }
       cursor
@@ -91,15 +90,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -331,13 +327,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -375,20 +364,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_live_open",
-                            "name": "isLiveOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_open",
-                            "name": "isOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -580,7 +555,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ShowArtworksQuery",
-    "id": "d528a3c7d2ec4f5a6beccdf606b1d293",
+    "id": "e162f237279707d9d2f2e2cc7a6627b1",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/ShowArtworksTestsQuery.graphql.ts b/src/__generated__/ShowArtworksTestsQuery.graphql.ts
index f94119422..b28076369 100644
--- a/src/__generated__/ShowArtworksTestsQuery.graphql.ts
+++ b/src/__generated__/ShowArtworksTestsQuery.graphql.ts
@@ -36,7 +36,6 @@ fragment FilteredInfiniteScrollGrid_entity on EntityWithFilterArtworksConnection
     edges {
       node {
         id
-        slug
         __typename
       }
       cursor
@@ -87,15 +86,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -319,13 +315,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -363,20 +352,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_live_open",
-                            "name": "isLiveOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_open",
-                            "name": "isOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -568,7 +543,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ShowArtworksTestsQuery",
-    "id": "f560a3d187b79afb6c094db2fc31e1a8",
+    "id": "38671bd324b45e1cafe35ba0191d7279",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/ShowHeader_show.graphql.ts b/src/__generated__/ShowHeader_show.graphql.ts
index 6c9b0af48..06a82a7a8 100644
--- a/src/__generated__/ShowHeader_show.graphql.ts
+++ b/src/__generated__/ShowHeader_show.graphql.ts
@@ -8,11 +8,9 @@ export type ShowHeader_show = {
     readonly internalID: string;
     readonly id: string;
     readonly name: string | null;
-    readonly press_release: string | null;
     readonly is_followed: boolean | null;
     readonly end_at: string | null;
     readonly exhibition_period: string | null;
-    readonly status: string | null;
     readonly isStubShow: boolean | null;
     readonly partner: ({
         readonly name?: string | null;
@@ -106,13 +104,6 @@ return {
       "storageKey": null
     },
     (v2/*: any*/),
-    {
-      "kind": "ScalarField",
-      "alias": "press_release",
-      "name": "pressRelease",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "ScalarField",
       "alias": "is_followed",
@@ -134,13 +125,6 @@ return {
       "args": null,
       "storageKey": null
     },
-    {
-      "kind": "ScalarField",
-      "alias": null,
-      "name": "status",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "ScalarField",
       "alias": null,
@@ -255,5 +239,5 @@ return {
   ]
 };
 })();
-(node as any).hash = '3703c677d2e589b10c038150f87a0bb3';
+(node as any).hash = 'c995db340566939709d1e0bb4da85c1c';
 export default node;
diff --git a/src/__generated__/ShowItemRow_show.graphql.ts b/src/__generated__/ShowItemRow_show.graphql.ts
index 906fc08ba..b8154bbeb 100644
--- a/src/__generated__/ShowItemRow_show.graphql.ts
+++ b/src/__generated__/ShowItemRow_show.graphql.ts
@@ -34,10 +34,8 @@ export type ShowItemRow_show = {
     readonly status: string | null;
     readonly cover_image: {
         readonly url: string | null;
-        readonly aspect_ratio: number;
     } | null;
     readonly is_fair_booth: boolean | null;
-    readonly start_at: string | null;
     readonly end_at: string | null;
     readonly " $refType": ShowItemRow_show$ref;
 };
@@ -184,13 +182,6 @@ return {
           "name": "url",
           "args": null,
           "storageKey": null
-        },
-        {
-          "kind": "ScalarField",
-          "alias": "aspect_ratio",
-          "name": "aspectRatio",
-          "args": null,
-          "storageKey": null
         }
       ]
     },
@@ -201,13 +192,6 @@ return {
       "args": null,
       "storageKey": null
     },
-    {
-      "kind": "ScalarField",
-      "alias": "start_at",
-      "name": "startAt",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "ScalarField",
       "alias": "end_at",
@@ -218,5 +202,5 @@ return {
   ]
 };
 })();
-(node as any).hash = 'f3460269adffd20b7426b11ac9a20101';
+(node as any).hash = '0bff9a002bbda9d71d8c4230f7c7b710';
 export default node;
diff --git a/src/__generated__/ShowItem_show.graphql.ts b/src/__generated__/ShowItem_show.graphql.ts
index f54ce5052..55c314d9e 100644
--- a/src/__generated__/ShowItem_show.graphql.ts
+++ b/src/__generated__/ShowItem_show.graphql.ts
@@ -11,7 +11,6 @@ export type ShowItem_show = {
     readonly end_at: string | null;
     readonly images: ReadonlyArray<{
         readonly url: string | null;
-        readonly aspect_ratio: number;
     } | null> | null;
     readonly partner: ({
         readonly name?: string | null;
@@ -86,13 +85,6 @@ return {
           "name": "url",
           "args": null,
           "storageKey": null
-        },
-        {
-          "kind": "ScalarField",
-          "alias": "aspect_ratio",
-          "name": "aspectRatio",
-          "args": null,
-          "storageKey": null
         }
       ]
     },
@@ -117,5 +109,5 @@ return {
   ]
 };
 })();
-(node as any).hash = '61249cbfc1dc3fc184951041d3c358c1';
+(node as any).hash = '0e5b8437d01a545b7dafb191fe889a4a';
 export default node;
diff --git a/src/__generated__/ShowQuery.graphql.ts b/src/__generated__/ShowQuery.graphql.ts
index e80697b37..d309ee13c 100644
--- a/src/__generated__/ShowQuery.graphql.ts
+++ b/src/__generated__/ShowQuery.graphql.ts
@@ -34,13 +34,7 @@ fragment Show_show on Show {
 fragment Detail_show on Show {
   internalID
   slug
-  name
   description
-  city
-  isStubShow
-  images {
-    internalID
-  }
   ...ShowHeader_show
   ...ShowArtworksPreview_show
   ...ShowArtistsPreview_show
@@ -61,7 +55,7 @@ fragment Detail_show on Show {
     }
     id
   }
-  artists_without_artworks: artistsWithoutArtworks {
+  artistsWithoutArtworks {
     slug
     id
   }
@@ -69,7 +63,6 @@ fragment Detail_show on Show {
     artworks
     artists
   }
-  status
   partner {
     __typename
     ... on Partner {
@@ -90,11 +83,9 @@ fragment ShowHeader_show on Show {
   internalID
   id
   name
-  press_release: pressRelease
   is_followed: isFollowed
   end_at: endAt
   exhibition_period: exhibitionPeriod
-  status
   isStubShow
   partner {
     __typename
@@ -220,7 +211,6 @@ fragment ShowItem_show on Show {
   end_at: endAt
   images {
     url
-    aspect_ratio: aspectRatio
   }
   partner {
     __typename
@@ -254,7 +244,6 @@ fragment ArtistListItem_artist on Artist {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -265,15 +254,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -333,101 +319,97 @@ v3 = {
 v4 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "name",
+  "name": "id",
   "args": null,
   "storageKey": null
 },
 v5 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "city",
+  "name": "name",
   "args": null,
   "storageKey": null
 },
 v6 = {
   "kind": "ScalarField",
-  "alias": null,
-  "name": "url",
+  "alias": "is_followed",
+  "name": "isFollowed",
   "args": null,
   "storageKey": null
 },
 v7 = {
   "kind": "ScalarField",
-  "alias": "aspect_ratio",
-  "name": "aspectRatio",
+  "alias": "end_at",
+  "name": "endAt",
   "args": null,
   "storageKey": null
 },
 v8 = {
   "kind": "ScalarField",
-  "alias": null,
-  "name": "id",
+  "alias": "exhibition_period",
+  "name": "exhibitionPeriod",
   "args": null,
   "storageKey": null
 },
 v9 = {
   "kind": "ScalarField",
-  "alias": "is_followed",
-  "name": "isFollowed",
+  "alias": null,
+  "name": "__typename",
   "args": null,
   "storageKey": null
 },
 v10 = {
   "kind": "ScalarField",
-  "alias": "end_at",
-  "name": "endAt",
+  "alias": null,
+  "name": "href",
   "args": null,
   "storageKey": null
 },
 v11 = {
   "kind": "ScalarField",
-  "alias": "exhibition_period",
-  "name": "exhibitionPeriod",
+  "alias": null,
+  "name": "url",
   "args": null,
   "storageKey": null
 },
 v12 = {
   "kind": "ScalarField",
-  "alias": null,
-  "name": "__typename",
+  "alias": "aspect_ratio",
+  "name": "aspectRatio",
   "args": null,
   "storageKey": null
 },
 v13 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "href",
-  "args": null,
-  "storageKey": null
-},
-v14 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "initials",
   "args": null,
   "storageKey": null
 },
-v15 = {
+v14 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "nationality",
   "args": null,
   "storageKey": null
 },
-v16 = {
+v15 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "birthday",
   "args": null,
   "storageKey": null
 },
-v17 = {
+v16 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "deathday",
   "args": null,
   "storageKey": null
 },
+v17 = [
+  (v11/*: any*/)
+],
 v18 = {
   "kind": "LinkedField",
   "alias": null,
@@ -436,13 +418,11 @@ v18 = {
   "args": null,
   "concreteType": "Image",
   "plural": false,
-  "selections": [
-    (v6/*: any*/)
-  ]
+  "selections": (v17/*: any*/)
 },
 v19 = [
-  (v4/*: any*/),
-  (v8/*: any*/)
+  (v5/*: any*/),
+  (v4/*: any*/)
 ];
 return {
   "kind": "Request",
@@ -487,7 +467,6 @@ return {
         "selections": [
           (v2/*: any*/),
           (v3/*: any*/),
-          (v4/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -495,43 +474,15 @@ return {
             "args": null,
             "storageKey": null
           },
+          (v4/*: any*/),
           (v5/*: any*/),
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "isStubShow",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "images",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "Image",
-            "plural": true,
-            "selections": [
-              (v2/*: any*/),
-              (v6/*: any*/),
-              (v7/*: any*/)
-            ]
-          },
+          (v6/*: any*/),
+          (v7/*: any*/),
           (v8/*: any*/),
-          {
-            "kind": "ScalarField",
-            "alias": "press_release",
-            "name": "pressRelease",
-            "args": null,
-            "storageKey": null
-          },
-          (v9/*: any*/),
-          (v10/*: any*/),
-          (v11/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
-            "name": "status",
+            "name": "isStubShow",
             "args": null,
             "storageKey": null
           },
@@ -544,15 +495,15 @@ return {
             "concreteType": null,
             "plural": false,
             "selections": [
-              (v12/*: any*/),
-              (v8/*: any*/),
+              (v9/*: any*/),
+              (v4/*: any*/),
               {
                 "kind": "InlineFragment",
                 "type": "Partner",
                 "selections": [
-                  (v4/*: any*/),
+                  (v5/*: any*/),
                   (v3/*: any*/),
-                  (v13/*: any*/),
+                  (v10/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": null,
@@ -564,6 +515,19 @@ return {
               }
             ]
           },
+          {
+            "kind": "LinkedField",
+            "alias": null,
+            "name": "images",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Image",
+            "plural": true,
+            "selections": [
+              (v11/*: any*/),
+              (v12/*: any*/)
+            ]
+          },
           {
             "kind": "LinkedField",
             "alias": "followedArtists",
@@ -606,11 +570,11 @@ return {
                         "concreteType": "Artist",
                         "plural": false,
                         "selections": [
-                          (v4/*: any*/),
-                          (v13/*: any*/),
+                          (v5/*: any*/),
+                          (v10/*: any*/),
                           (v3/*: any*/),
                           (v2/*: any*/),
-                          (v8/*: any*/)
+                          (v4/*: any*/)
                         ]
                       }
                     ]
@@ -628,16 +592,16 @@ return {
             "concreteType": "Artist",
             "plural": true,
             "selections": [
-              (v4/*: any*/),
-              (v13/*: any*/),
+              (v5/*: any*/),
+              (v10/*: any*/),
               (v3/*: any*/),
               (v2/*: any*/),
-              (v8/*: any*/),
+              (v4/*: any*/),
+              (v13/*: any*/),
+              (v6/*: any*/),
               (v14/*: any*/),
-              (v9/*: any*/),
               (v15/*: any*/),
               (v16/*: any*/),
-              (v17/*: any*/),
               (v18/*: any*/)
             ]
           },
@@ -699,8 +663,7 @@ return {
                     "concreteType": "Artwork",
                     "plural": false,
                     "selections": [
-                      (v8/*: any*/),
-                      (v3/*: any*/),
+                      (v4/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -710,7 +673,7 @@ return {
                         "concreteType": "Image",
                         "plural": false,
                         "selections": [
-                          (v7/*: any*/),
+                          (v12/*: any*/),
                           {
                             "kind": "ScalarField",
                             "alias": null,
@@ -747,13 +710,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -775,6 +731,7 @@ return {
                         "args": null,
                         "storageKey": null
                       },
+                      (v3/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -791,20 +748,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_live_open",
-                            "name": "isLiveOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_open",
-                            "name": "isOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -819,7 +762,7 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          (v8/*: any*/)
+                          (v4/*: any*/)
                         ]
                       },
                       {
@@ -849,7 +792,7 @@ return {
                               }
                             ]
                           },
-                          (v8/*: any*/)
+                          (v4/*: any*/)
                         ]
                       },
                       {
@@ -878,7 +821,7 @@ return {
                         "plural": false,
                         "selections": (v19/*: any*/)
                       },
-                      (v13/*: any*/)
+                      (v10/*: any*/)
                     ]
                   }
                 ]
@@ -894,16 +837,16 @@ return {
             "concreteType": "Artist",
             "plural": true,
             "selections": [
-              (v8/*: any*/),
+              (v4/*: any*/),
               (v2/*: any*/),
               (v3/*: any*/),
+              (v10/*: any*/),
+              (v5/*: any*/),
               (v13/*: any*/),
-              (v4/*: any*/),
+              (v6/*: any*/),
               (v14/*: any*/),
-              (v9/*: any*/),
               (v15/*: any*/),
               (v16/*: any*/),
-              (v17/*: any*/),
               (v18/*: any*/)
             ]
           },
@@ -940,12 +883,12 @@ return {
                     "concreteType": "Show",
                     "plural": false,
                     "selections": [
-                      (v8/*: any*/),
+                      (v4/*: any*/),
                       (v2/*: any*/),
                       (v3/*: any*/),
-                      (v4/*: any*/),
-                      (v11/*: any*/),
-                      (v10/*: any*/),
+                      (v5/*: any*/),
+                      (v8/*: any*/),
+                      (v7/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -954,10 +897,7 @@ return {
                         "args": null,
                         "concreteType": "Image",
                         "plural": true,
-                        "selections": [
-                          (v6/*: any*/),
-                          (v7/*: any*/)
-                        ]
+                        "selections": (v17/*: any*/)
                       },
                       {
                         "kind": "LinkedField",
@@ -968,13 +908,13 @@ return {
                         "concreteType": null,
                         "plural": false,
                         "selections": [
-                          (v12/*: any*/),
-                          (v8/*: any*/),
+                          (v9/*: any*/),
+                          (v4/*: any*/),
                           {
                             "kind": "InlineFragment",
                             "type": "Partner",
                             "selections": [
-                              (v4/*: any*/)
+                              (v5/*: any*/)
                             ]
                           }
                         ]
@@ -994,9 +934,15 @@ return {
             "concreteType": "Location",
             "plural": false,
             "selections": [
-              (v8/*: any*/),
+              (v4/*: any*/),
               (v2/*: any*/),
-              (v5/*: any*/),
+              {
+                "kind": "ScalarField",
+                "alias": null,
+                "name": "city",
+                "args": null,
+                "storageKey": null
+              },
               {
                 "kind": "ScalarField",
                 "alias": null,
@@ -1091,7 +1037,7 @@ return {
                 "concreteType": null,
                 "plural": false,
                 "selections": [
-                  (v12/*: any*/),
+                  (v9/*: any*/),
                   {
                     "kind": "InlineFragment",
                     "type": "OpeningHoursArray",
@@ -1139,6 +1085,19 @@ return {
                 ]
               }
             ]
+          },
+          {
+            "kind": "LinkedField",
+            "alias": null,
+            "name": "artistsWithoutArtworks",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Artist",
+            "plural": true,
+            "selections": [
+              (v3/*: any*/),
+              (v4/*: any*/)
+            ]
           }
         ]
       }
@@ -1147,7 +1106,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ShowQuery",
-    "id": "1d3a0f2206eb2af68823de0031311e4c",
+    "id": "83820a65a9db744622aa7205caea5f76",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/ShowTestsQuery.graphql.ts b/src/__generated__/ShowTestsQuery.graphql.ts
index b5e1cc0d3..6be26660b 100644
--- a/src/__generated__/ShowTestsQuery.graphql.ts
+++ b/src/__generated__/ShowTestsQuery.graphql.ts
@@ -30,13 +30,7 @@ fragment Show_show on Show {
 fragment Detail_show on Show {
   internalID
   slug
-  name
   description
-  city
-  isStubShow
-  images {
-    internalID
-  }
   ...ShowHeader_show
   ...ShowArtworksPreview_show
   ...ShowArtistsPreview_show
@@ -57,7 +51,7 @@ fragment Detail_show on Show {
     }
     id
   }
-  artists_without_artworks: artistsWithoutArtworks {
+  artistsWithoutArtworks {
     slug
     id
   }
@@ -65,7 +59,6 @@ fragment Detail_show on Show {
     artworks
     artists
   }
-  status
   partner {
     __typename
     ... on Partner {
@@ -86,11 +79,9 @@ fragment ShowHeader_show on Show {
   internalID
   id
   name
-  press_release: pressRelease
   is_followed: isFollowed
   end_at: endAt
   exhibition_period: exhibitionPeriod
-  status
   isStubShow
   partner {
     __typename
@@ -216,7 +207,6 @@ fragment ShowItem_show on Show {
   end_at: endAt
   images {
     url
-    aspect_ratio: aspectRatio
   }
   partner {
     __typename
@@ -250,7 +240,6 @@ fragment ArtistListItem_artist on Artist {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -261,15 +250,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -321,101 +307,97 @@ v2 = {
 v3 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "name",
+  "name": "id",
   "args": null,
   "storageKey": null
 },
 v4 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "city",
+  "name": "name",
   "args": null,
   "storageKey": null
 },
 v5 = {
   "kind": "ScalarField",
-  "alias": null,
-  "name": "url",
+  "alias": "is_followed",
+  "name": "isFollowed",
   "args": null,
   "storageKey": null
 },
 v6 = {
   "kind": "ScalarField",
-  "alias": "aspect_ratio",
-  "name": "aspectRatio",
+  "alias": "end_at",
+  "name": "endAt",
   "args": null,
   "storageKey": null
 },
 v7 = {
   "kind": "ScalarField",
-  "alias": null,
-  "name": "id",
+  "alias": "exhibition_period",
+  "name": "exhibitionPeriod",
   "args": null,
   "storageKey": null
 },
 v8 = {
   "kind": "ScalarField",
-  "alias": "is_followed",
-  "name": "isFollowed",
+  "alias": null,
+  "name": "__typename",
   "args": null,
   "storageKey": null
 },
 v9 = {
   "kind": "ScalarField",
-  "alias": "end_at",
-  "name": "endAt",
+  "alias": null,
+  "name": "href",
   "args": null,
   "storageKey": null
 },
 v10 = {
   "kind": "ScalarField",
-  "alias": "exhibition_period",
-  "name": "exhibitionPeriod",
+  "alias": null,
+  "name": "url",
   "args": null,
   "storageKey": null
 },
 v11 = {
   "kind": "ScalarField",
-  "alias": null,
-  "name": "__typename",
+  "alias": "aspect_ratio",
+  "name": "aspectRatio",
   "args": null,
   "storageKey": null
 },
 v12 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "href",
-  "args": null,
-  "storageKey": null
-},
-v13 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "initials",
   "args": null,
   "storageKey": null
 },
-v14 = {
+v13 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "nationality",
   "args": null,
   "storageKey": null
 },
-v15 = {
+v14 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "birthday",
   "args": null,
   "storageKey": null
 },
-v16 = {
+v15 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "deathday",
   "args": null,
   "storageKey": null
 },
+v16 = [
+  (v10/*: any*/)
+],
 v17 = {
   "kind": "LinkedField",
   "alias": null,
@@ -424,13 +406,11 @@ v17 = {
   "args": null,
   "concreteType": "Image",
   "plural": false,
-  "selections": [
-    (v5/*: any*/)
-  ]
+  "selections": (v16/*: any*/)
 },
 v18 = [
-  (v3/*: any*/),
-  (v7/*: any*/)
+  (v4/*: any*/),
+  (v3/*: any*/)
 ];
 return {
   "kind": "Request",
@@ -475,7 +455,6 @@ return {
         "selections": [
           (v1/*: any*/),
           (v2/*: any*/),
-          (v3/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -483,43 +462,15 @@ return {
             "args": null,
             "storageKey": null
           },
+          (v3/*: any*/),
           (v4/*: any*/),
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "isStubShow",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "images",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "Image",
-            "plural": true,
-            "selections": [
-              (v1/*: any*/),
-              (v5/*: any*/),
-              (v6/*: any*/)
-            ]
-          },
+          (v5/*: any*/),
+          (v6/*: any*/),
           (v7/*: any*/),
-          {
-            "kind": "ScalarField",
-            "alias": "press_release",
-            "name": "pressRelease",
-            "args": null,
-            "storageKey": null
-          },
-          (v8/*: any*/),
-          (v9/*: any*/),
-          (v10/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
-            "name": "status",
+            "name": "isStubShow",
             "args": null,
             "storageKey": null
           },
@@ -532,15 +483,15 @@ return {
             "concreteType": null,
             "plural": false,
             "selections": [
-              (v11/*: any*/),
-              (v7/*: any*/),
+              (v8/*: any*/),
+              (v3/*: any*/),
               {
                 "kind": "InlineFragment",
                 "type": "Partner",
                 "selections": [
-                  (v3/*: any*/),
+                  (v4/*: any*/),
                   (v2/*: any*/),
-                  (v12/*: any*/),
+                  (v9/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": null,
@@ -552,6 +503,19 @@ return {
               }
             ]
           },
+          {
+            "kind": "LinkedField",
+            "alias": null,
+            "name": "images",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Image",
+            "plural": true,
+            "selections": [
+              (v10/*: any*/),
+              (v11/*: any*/)
+            ]
+          },
           {
             "kind": "LinkedField",
             "alias": "followedArtists",
@@ -594,11 +558,11 @@ return {
                         "concreteType": "Artist",
                         "plural": false,
                         "selections": [
-                          (v3/*: any*/),
-                          (v12/*: any*/),
+                          (v4/*: any*/),
+                          (v9/*: any*/),
                           (v2/*: any*/),
                           (v1/*: any*/),
-                          (v7/*: any*/)
+                          (v3/*: any*/)
                         ]
                       }
                     ]
@@ -616,16 +580,16 @@ return {
             "concreteType": "Artist",
             "plural": true,
             "selections": [
-              (v3/*: any*/),
-              (v12/*: any*/),
+              (v4/*: any*/),
+              (v9/*: any*/),
               (v2/*: any*/),
               (v1/*: any*/),
-              (v7/*: any*/),
+              (v3/*: any*/),
+              (v12/*: any*/),
+              (v5/*: any*/),
               (v13/*: any*/),
-              (v8/*: any*/),
               (v14/*: any*/),
               (v15/*: any*/),
-              (v16/*: any*/),
               (v17/*: any*/)
             ]
           },
@@ -687,8 +651,7 @@ return {
                     "concreteType": "Artwork",
                     "plural": false,
                     "selections": [
-                      (v7/*: any*/),
-                      (v2/*: any*/),
+                      (v3/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -698,7 +661,7 @@ return {
                         "concreteType": "Image",
                         "plural": false,
                         "selections": [
-                          (v6/*: any*/),
+                          (v11/*: any*/),
                           {
                             "kind": "ScalarField",
                             "alias": null,
@@ -735,13 +698,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -763,6 +719,7 @@ return {
                         "args": null,
                         "storageKey": null
                       },
+                      (v2/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -779,20 +736,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_live_open",
-                            "name": "isLiveOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_open",
-                            "name": "isOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -807,7 +750,7 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          (v7/*: any*/)
+                          (v3/*: any*/)
                         ]
                       },
                       {
@@ -837,7 +780,7 @@ return {
                               }
                             ]
                           },
-                          (v7/*: any*/)
+                          (v3/*: any*/)
                         ]
                       },
                       {
@@ -866,7 +809,7 @@ return {
                         "plural": false,
                         "selections": (v18/*: any*/)
                       },
-                      (v12/*: any*/)
+                      (v9/*: any*/)
                     ]
                   }
                 ]
@@ -882,16 +825,16 @@ return {
             "concreteType": "Artist",
             "plural": true,
             "selections": [
-              (v7/*: any*/),
+              (v3/*: any*/),
               (v1/*: any*/),
               (v2/*: any*/),
+              (v9/*: any*/),
+              (v4/*: any*/),
               (v12/*: any*/),
-              (v3/*: any*/),
+              (v5/*: any*/),
               (v13/*: any*/),
-              (v8/*: any*/),
               (v14/*: any*/),
               (v15/*: any*/),
-              (v16/*: any*/),
               (v17/*: any*/)
             ]
           },
@@ -928,12 +871,12 @@ return {
                     "concreteType": "Show",
                     "plural": false,
                     "selections": [
-                      (v7/*: any*/),
+                      (v3/*: any*/),
                       (v1/*: any*/),
                       (v2/*: any*/),
-                      (v3/*: any*/),
-                      (v10/*: any*/),
-                      (v9/*: any*/),
+                      (v4/*: any*/),
+                      (v7/*: any*/),
+                      (v6/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -942,10 +885,7 @@ return {
                         "args": null,
                         "concreteType": "Image",
                         "plural": true,
-                        "selections": [
-                          (v5/*: any*/),
-                          (v6/*: any*/)
-                        ]
+                        "selections": (v16/*: any*/)
                       },
                       {
                         "kind": "LinkedField",
@@ -956,13 +896,13 @@ return {
                         "concreteType": null,
                         "plural": false,
                         "selections": [
-                          (v11/*: any*/),
-                          (v7/*: any*/),
+                          (v8/*: any*/),
+                          (v3/*: any*/),
                           {
                             "kind": "InlineFragment",
                             "type": "Partner",
                             "selections": [
-                              (v3/*: any*/)
+                              (v4/*: any*/)
                             ]
                           }
                         ]
@@ -982,9 +922,15 @@ return {
             "concreteType": "Location",
             "plural": false,
             "selections": [
-              (v7/*: any*/),
+              (v3/*: any*/),
               (v1/*: any*/),
-              (v4/*: any*/),
+              {
+                "kind": "ScalarField",
+                "alias": null,
+                "name": "city",
+                "args": null,
+                "storageKey": null
+              },
               {
                 "kind": "ScalarField",
                 "alias": null,
@@ -1079,7 +1025,7 @@ return {
                 "concreteType": null,
                 "plural": false,
                 "selections": [
-                  (v11/*: any*/),
+                  (v8/*: any*/),
                   {
                     "kind": "InlineFragment",
                     "type": "OpeningHoursArray",
@@ -1127,6 +1073,19 @@ return {
                 ]
               }
             ]
+          },
+          {
+            "kind": "LinkedField",
+            "alias": null,
+            "name": "artistsWithoutArtworks",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Artist",
+            "plural": true,
+            "selections": [
+              (v2/*: any*/),
+              (v3/*: any*/)
+            ]
           }
         ]
       }
@@ -1135,7 +1094,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ShowTestsQuery",
-    "id": "a53f4aae0b0be77d7be03e2a04353567",
+    "id": "7a320775c865ac2e6c2eea5f54b81ebc",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/ShowsQuery.graphql.ts b/src/__generated__/ShowsQuery.graphql.ts
index f9b4e5441..9d24368d5 100644
--- a/src/__generated__/ShowsQuery.graphql.ts
+++ b/src/__generated__/ShowsQuery.graphql.ts
@@ -80,10 +80,8 @@ fragment ShowItemRow_show on Show {
   status
   cover_image: coverImage {
     url
-    aspect_ratio: aspectRatio
   }
   is_fair_booth: isFairBooth
-  start_at: startAt
   end_at: endAt
 }
 */
@@ -385,13 +383,6 @@ return {
                                 "name": "url",
                                 "args": null,
                                 "storageKey": null
-                              },
-                              {
-                                "kind": "ScalarField",
-                                "alias": "aspect_ratio",
-                                "name": "aspectRatio",
-                                "args": null,
-                                "storageKey": null
                               }
                             ]
                           },
@@ -402,13 +393,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "start_at",
-                            "name": "startAt",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "end_at",
@@ -449,7 +433,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "ShowsQuery",
-    "id": "d13130a7081378f93f0668ff3fa60453",
+    "id": "fde33fc8fb6abe35c2e600dfe236c792",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/WorksForYouQuery.graphql.ts b/src/__generated__/WorksForYouQuery.graphql.ts
index 461c2d961..1a6c1902f 100644
--- a/src/__generated__/WorksForYouQuery.graphql.ts
+++ b/src/__generated__/WorksForYouQuery.graphql.ts
@@ -89,7 +89,6 @@ fragment Notification_notification on FollowedArtistsArtworksGroup {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -100,15 +99,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -197,13 +193,6 @@ v6 = {
   "storageKey": null
 },
 v7 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "slug",
-  "args": null,
-  "storageKey": null
-},
-v8 = {
   "kind": "LinkedField",
   "alias": null,
   "name": "image",
@@ -234,56 +223,56 @@ v8 = {
     }
   ]
 },
-v9 = {
+v8 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "title",
   "args": null,
   "storageKey": null
 },
-v10 = {
+v9 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "date",
   "args": null,
   "storageKey": null
 },
-v11 = {
+v10 = {
   "kind": "ScalarField",
   "alias": "sale_message",
   "name": "saleMessage",
   "args": null,
   "storageKey": null
 },
-v12 = {
-  "kind": "ScalarField",
-  "alias": "is_in_auction",
-  "name": "isInAuction",
-  "args": null,
-  "storageKey": null
-},
-v13 = {
+v11 = {
   "kind": "ScalarField",
   "alias": "is_biddable",
   "name": "isBiddable",
   "args": null,
   "storageKey": null
 },
-v14 = {
+v12 = {
   "kind": "ScalarField",
   "alias": "is_acquireable",
   "name": "isAcquireable",
   "args": null,
   "storageKey": null
 },
-v15 = {
+v13 = {
   "kind": "ScalarField",
   "alias": "is_offerable",
   "name": "isOfferable",
   "args": null,
   "storageKey": null
 },
-v16 = {
+v14 = {
+  "kind": "ScalarField",
+  "alias": null,
+  "name": "slug",
+  "args": null,
+  "storageKey": null
+},
+v15 = {
   "kind": "LinkedField",
   "alias": null,
   "name": "sale",
@@ -299,20 +288,6 @@ v16 = {
       "args": null,
       "storageKey": null
     },
-    {
-      "kind": "ScalarField",
-      "alias": "is_live_open",
-      "name": "isLiveOpen",
-      "args": null,
-      "storageKey": null
-    },
-    {
-      "kind": "ScalarField",
-      "alias": "is_open",
-      "name": "isOpen",
-      "args": null,
-      "storageKey": null
-    },
     {
       "kind": "ScalarField",
       "alias": "is_closed",
@@ -330,7 +305,7 @@ v16 = {
     (v3/*: any*/)
   ]
 },
-v17 = {
+v16 = {
   "kind": "LinkedField",
   "alias": "sale_artwork",
   "name": "saleArtwork",
@@ -360,11 +335,11 @@ v17 = {
     (v3/*: any*/)
   ]
 },
-v18 = [
+v17 = [
   (v6/*: any*/),
   (v3/*: any*/)
 ],
-v19 = {
+v18 = {
   "kind": "LinkedField",
   "alias": null,
   "name": "partner",
@@ -372,9 +347,9 @@ v19 = {
   "args": null,
   "concreteType": "Partner",
   "plural": false,
-  "selections": (v18/*: any*/)
+  "selections": (v17/*: any*/)
 },
-v20 = {
+v19 = {
   "kind": "LinkedField",
   "alias": null,
   "name": "image",
@@ -589,8 +564,7 @@ return {
                                       (v14/*: any*/),
                                       (v15/*: any*/),
                                       (v16/*: any*/),
-                                      (v17/*: any*/),
-                                      (v19/*: any*/),
+                                      (v18/*: any*/),
                                       (v5/*: any*/)
                                     ]
                                   }
@@ -598,7 +572,7 @@ return {
                               }
                             ]
                           },
-                          (v20/*: any*/),
+                          (v19/*: any*/),
                           {
                             "kind": "ScalarField",
                             "alias": null,
@@ -650,10 +624,10 @@ return {
         "concreteType": "Artist",
         "plural": false,
         "selections": [
-          (v7/*: any*/),
+          (v14/*: any*/),
           (v5/*: any*/),
           (v6/*: any*/),
-          (v20/*: any*/),
+          (v19/*: any*/),
           {
             "kind": "LinkedField",
             "alias": "artworks",
@@ -699,7 +673,6 @@ return {
                       (v14/*: any*/),
                       (v15/*: any*/),
                       (v16/*: any*/),
-                      (v17/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -708,9 +681,9 @@ return {
                         "args": (v4/*: any*/),
                         "concreteType": "Artist",
                         "plural": true,
-                        "selections": (v18/*: any*/)
+                        "selections": (v17/*: any*/)
                       },
-                      (v19/*: any*/),
+                      (v18/*: any*/),
                       (v5/*: any*/)
                     ]
                   }
@@ -726,7 +699,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "WorksForYouQuery",
-    "id": "43d5289a4d6e1373641b40c8d284d094",
+    "id": "cc26a9f5919786a4fa9cdc103f814269",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/indexTestsFairBothPreviewQuery.graphql.ts b/src/__generated__/indexTestsFairBothPreviewQuery.graphql.ts
index f407779b2..8b170abaa 100644
--- a/src/__generated__/indexTestsFairBothPreviewQuery.graphql.ts
+++ b/src/__generated__/indexTestsFairBothPreviewQuery.graphql.ts
@@ -26,8 +26,6 @@ query indexTestsFairBothPreviewQuery {
 fragment FairBoothPreview_show on Show {
   slug
   internalID
-  name
-  is_fair_booth: isFairBooth
   counts {
     artworks
   }
@@ -40,9 +38,10 @@ fragment FairBoothPreview_show on Show {
       internalID
       id
       profile {
-        internalID
-        is_followed: isFollowed
         id
+        slug
+        internalID
+        isFollowed
       }
     }
     ... on Node {
@@ -52,11 +51,7 @@ fragment FairBoothPreview_show on Show {
       id
     }
   }
-  fair {
-    name
-    id
-  }
-  cover_image: coverImage {
+  coverImage {
     url
   }
   location {
@@ -75,7 +70,6 @@ fragment FairBoothPreview_show on Show {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -86,15 +80,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -146,14 +137,14 @@ v2 = {
 v3 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "name",
+  "name": "id",
   "args": null,
   "storageKey": null
 },
 v4 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "id",
+  "name": "name",
   "args": null,
   "storageKey": null
 },
@@ -164,17 +155,17 @@ v5 = {
   "args": null,
   "storageKey": null
 },
-v6 = [
-  (v3/*: any*/),
-  (v4/*: any*/)
-],
-v7 = {
+v6 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "display",
   "args": null,
   "storageKey": null
-};
+},
+v7 = [
+  (v4/*: any*/),
+  (v3/*: any*/)
+];
 return {
   "kind": "Request",
   "fragment": {
@@ -218,14 +209,6 @@ return {
         "selections": [
           (v1/*: any*/),
           (v2/*: any*/),
-          (v3/*: any*/),
-          {
-            "kind": "ScalarField",
-            "alias": "is_fair_booth",
-            "name": "isFairBooth",
-            "args": null,
-            "storageKey": null
-          },
           {
             "kind": "LinkedField",
             "alias": null,
@@ -260,12 +243,12 @@ return {
                 "args": null,
                 "storageKey": null
               },
-              (v4/*: any*/),
+              (v3/*: any*/),
               {
                 "kind": "InlineFragment",
                 "type": "Partner",
                 "selections": [
-                  (v3/*: any*/),
+                  (v4/*: any*/),
                   (v5/*: any*/),
                   (v1/*: any*/),
                   (v2/*: any*/),
@@ -278,15 +261,16 @@ return {
                     "concreteType": "Profile",
                     "plural": false,
                     "selections": [
+                      (v3/*: any*/),
+                      (v1/*: any*/),
                       (v2/*: any*/),
                       {
                         "kind": "ScalarField",
-                        "alias": "is_followed",
+                        "alias": null,
                         "name": "isFollowed",
                         "args": null,
                         "storageKey": null
-                      },
-                      (v4/*: any*/)
+                      }
                     ]
                   }
                 ]
@@ -296,16 +280,6 @@ return {
           {
             "kind": "LinkedField",
             "alias": null,
-            "name": "fair",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "Fair",
-            "plural": false,
-            "selections": (v6/*: any*/)
-          },
-          {
-            "kind": "LinkedField",
-            "alias": "cover_image",
             "name": "coverImage",
             "storageKey": null,
             "args": null,
@@ -330,8 +304,8 @@ return {
             "concreteType": "Location",
             "plural": false,
             "selections": [
-              (v7/*: any*/),
-              (v4/*: any*/)
+              (v6/*: any*/),
+              (v3/*: any*/)
             ]
           },
           {
@@ -367,8 +341,7 @@ return {
                     "concreteType": "Artwork",
                     "plural": false,
                     "selections": [
-                      (v4/*: any*/),
-                      (v1/*: any*/),
+                      (v3/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -421,13 +394,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -449,6 +415,7 @@ return {
                         "args": null,
                         "storageKey": null
                       },
+                      (v1/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -465,20 +432,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_live_open",
-                            "name": "isLiveOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_open",
-                            "name": "isOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -493,7 +446,7 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          (v4/*: any*/)
+                          (v3/*: any*/)
                         ]
                       },
                       {
@@ -514,10 +467,10 @@ return {
                             "concreteType": "SaleArtworkCurrentBid",
                             "plural": false,
                             "selections": [
-                              (v7/*: any*/)
+                              (v6/*: any*/)
                             ]
                           },
-                          (v4/*: any*/)
+                          (v3/*: any*/)
                         ]
                       },
                       {
@@ -534,7 +487,7 @@ return {
                         ],
                         "concreteType": "Artist",
                         "plural": true,
-                        "selections": (v6/*: any*/)
+                        "selections": (v7/*: any*/)
                       },
                       {
                         "kind": "LinkedField",
@@ -544,7 +497,7 @@ return {
                         "args": null,
                         "concreteType": "Partner",
                         "plural": false,
-                        "selections": (v6/*: any*/)
+                        "selections": (v7/*: any*/)
                       },
                       (v5/*: any*/)
                     ]
@@ -553,7 +506,7 @@ return {
               }
             ]
           },
-          (v4/*: any*/)
+          (v3/*: any*/)
         ]
       }
     ]
@@ -561,7 +514,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "indexTestsFairBothPreviewQuery",
-    "id": "75597785eb99da82db66f8e66b560832",
+    "id": "199205a09cc26a053f7a5351773e6c3d",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/indexTestsFairHeaderQuery.graphql.ts b/src/__generated__/indexTestsFairHeaderQuery.graphql.ts
index 43f930879..79a3b9aa3 100644
--- a/src/__generated__/indexTestsFairHeaderQuery.graphql.ts
+++ b/src/__generated__/indexTestsFairHeaderQuery.graphql.ts
@@ -25,14 +25,18 @@ query indexTestsFairHeaderQuery {
 
 fragment FairHeader_fair on Fair {
   slug
-  internalID
   name
   formattedOpeningHours
+  startAt
+  endAt
+  exhibitionPeriod
   counts {
     artists
-    partners
   }
-  followed_content: followedContent {
+  image {
+    url
+  }
+  followedContent {
     artists {
       name
       href
@@ -40,38 +44,8 @@ fragment FairHeader_fair on Fair {
       internalID
       id
     }
-    galleries {
-      internalID
-      name
-      id
-    }
-  }
-  partner_names: showsConnection(first: 2) {
-    edges {
-      node {
-        slug
-        partner {
-          __typename
-          ... on Partner {
-            profile {
-              name
-              slug
-              internalID
-              id
-            }
-          }
-          ... on Node {
-            id
-          }
-          ... on ExternalPartner {
-            id
-          }
-        }
-        id
-      }
-    }
   }
-  artists_names: artistsConnection(first: 3) {
+  artistsConnection(first: 3) {
     edges {
       node {
         name
@@ -82,27 +56,12 @@ fragment FairHeader_fair on Fair {
       }
     }
   }
-  image {
-    image_url: imageURL
-    aspect_ratio: aspectRatio
-    url
-  }
   profile {
+    id
     icon {
-      internalID
-      href
-      height
-      width
       url(version: "square140")
     }
-    id
-    slug
-    name
-    is_followed: isFollowed
   }
-  start_at: startAt
-  end_at: endAt
-  exhibition_period: exhibitionPeriod
 }
 */
 
@@ -122,39 +81,37 @@ v1 = {
   "storageKey": null
 },
 v2 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "internalID",
-  "args": null,
-  "storageKey": null
-},
-v3 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "name",
   "args": null,
   "storageKey": null
 },
-v4 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "href",
-  "args": null,
-  "storageKey": null
-},
-v5 = {
+v3 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "id",
   "args": null,
   "storageKey": null
 },
-v6 = [
-  (v3/*: any*/),
-  (v4/*: any*/),
-  (v1/*: any*/),
+v4 = [
   (v2/*: any*/),
-  (v5/*: any*/)
+  {
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "href",
+    "args": null,
+    "storageKey": null
+  },
+  (v1/*: any*/),
+  {
+    "kind": "ScalarField",
+    "alias": null,
+    "name": "internalID",
+    "args": null,
+    "storageKey": null
+  },
+  (v3/*: any*/)
 ];
 return {
   "kind": "Request",
@@ -199,7 +156,6 @@ return {
         "selections": [
           (v1/*: any*/),
           (v2/*: any*/),
-          (v3/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -207,6 +163,27 @@ return {
             "args": null,
             "storageKey": null
           },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "startAt",
+            "args": null,
+            "storageKey": null
+          },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "endAt",
+            "args": null,
+            "storageKey": null
+          },
+          {
+            "kind": "ScalarField",
+            "alias": null,
+            "name": "exhibitionPeriod",
+            "args": null,
+            "storageKey": null
+          },
           {
             "kind": "LinkedField",
             "alias": null,
@@ -222,135 +199,51 @@ return {
                 "name": "artists",
                 "args": null,
                 "storageKey": null
-              },
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "partners",
-                "args": null,
-                "storageKey": null
               }
             ]
           },
           {
             "kind": "LinkedField",
-            "alias": "followed_content",
-            "name": "followedContent",
+            "alias": null,
+            "name": "image",
             "storageKey": null,
             "args": null,
-            "concreteType": "FollowedContent",
+            "concreteType": "Image",
             "plural": false,
             "selections": [
               {
-                "kind": "LinkedField",
-                "alias": null,
-                "name": "artists",
-                "storageKey": null,
-                "args": null,
-                "concreteType": "Artist",
-                "plural": true,
-                "selections": (v6/*: any*/)
-              },
-              {
-                "kind": "LinkedField",
+                "kind": "ScalarField",
                 "alias": null,
-                "name": "galleries",
-                "storageKey": null,
+                "name": "url",
                 "args": null,
-                "concreteType": "Partner",
-                "plural": true,
-                "selections": [
-                  (v2/*: any*/),
-                  (v3/*: any*/),
-                  (v5/*: any*/)
-                ]
+                "storageKey": null
               }
             ]
           },
           {
             "kind": "LinkedField",
-            "alias": "partner_names",
-            "name": "showsConnection",
-            "storageKey": "showsConnection(first:2)",
-            "args": [
-              {
-                "kind": "Literal",
-                "name": "first",
-                "value": 2
-              }
-            ],
-            "concreteType": "ShowConnection",
+            "alias": null,
+            "name": "followedContent",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "FollowedContent",
             "plural": false,
             "selections": [
               {
                 "kind": "LinkedField",
                 "alias": null,
-                "name": "edges",
+                "name": "artists",
                 "storageKey": null,
                 "args": null,
-                "concreteType": "ShowEdge",
+                "concreteType": "Artist",
                 "plural": true,
-                "selections": [
-                  {
-                    "kind": "LinkedField",
-                    "alias": null,
-                    "name": "node",
-                    "storageKey": null,
-                    "args": null,
-                    "concreteType": "Show",
-                    "plural": false,
-                    "selections": [
-                      (v1/*: any*/),
-                      {
-                        "kind": "LinkedField",
-                        "alias": null,
-                        "name": "partner",
-                        "storageKey": null,
-                        "args": null,
-                        "concreteType": null,
-                        "plural": false,
-                        "selections": [
-                          {
-                            "kind": "ScalarField",
-                            "alias": null,
-                            "name": "__typename",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          (v5/*: any*/),
-                          {
-                            "kind": "InlineFragment",
-                            "type": "Partner",
-                            "selections": [
-                              {
-                                "kind": "LinkedField",
-                                "alias": null,
-                                "name": "profile",
-                                "storageKey": null,
-                                "args": null,
-                                "concreteType": "Profile",
-                                "plural": false,
-                                "selections": [
-                                  (v3/*: any*/),
-                                  (v1/*: any*/),
-                                  (v2/*: any*/),
-                                  (v5/*: any*/)
-                                ]
-                              }
-                            ]
-                          }
-                        ]
-                      },
-                      (v5/*: any*/)
-                    ]
-                  }
-                ]
+                "selections": (v4/*: any*/)
               }
             ]
           },
           {
             "kind": "LinkedField",
-            "alias": "artists_names",
+            "alias": null,
             "name": "artistsConnection",
             "storageKey": "artistsConnection(first:3)",
             "args": [
@@ -380,44 +273,12 @@ return {
                     "args": null,
                     "concreteType": "Artist",
                     "plural": false,
-                    "selections": (v6/*: any*/)
+                    "selections": (v4/*: any*/)
                   }
                 ]
               }
             ]
           },
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "image",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "Image",
-            "plural": false,
-            "selections": [
-              {
-                "kind": "ScalarField",
-                "alias": "image_url",
-                "name": "imageURL",
-                "args": null,
-                "storageKey": null
-              },
-              {
-                "kind": "ScalarField",
-                "alias": "aspect_ratio",
-                "name": "aspectRatio",
-                "args": null,
-                "storageKey": null
-              },
-              {
-                "kind": "ScalarField",
-                "alias": null,
-                "name": "url",
-                "args": null,
-                "storageKey": null
-              }
-            ]
-          },
           {
             "kind": "LinkedField",
             "alias": null,
@@ -427,6 +288,7 @@ return {
             "concreteType": "Profile",
             "plural": false,
             "selections": [
+              (v3/*: any*/),
               {
                 "kind": "LinkedField",
                 "alias": null,
@@ -436,22 +298,6 @@ return {
                 "concreteType": "Image",
                 "plural": false,
                 "selections": [
-                  (v2/*: any*/),
-                  (v4/*: any*/),
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "height",
-                    "args": null,
-                    "storageKey": null
-                  },
-                  {
-                    "kind": "ScalarField",
-                    "alias": null,
-                    "name": "width",
-                    "args": null,
-                    "storageKey": null
-                  },
                   {
                     "kind": "ScalarField",
                     "alias": null,
@@ -466,41 +312,10 @@ return {
                     "storageKey": "url(version:\"square140\")"
                   }
                 ]
-              },
-              (v5/*: any*/),
-              (v1/*: any*/),
-              (v3/*: any*/),
-              {
-                "kind": "ScalarField",
-                "alias": "is_followed",
-                "name": "isFollowed",
-                "args": null,
-                "storageKey": null
               }
             ]
           },
-          {
-            "kind": "ScalarField",
-            "alias": "start_at",
-            "name": "startAt",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": "end_at",
-            "name": "endAt",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "ScalarField",
-            "alias": "exhibition_period",
-            "name": "exhibitionPeriod",
-            "args": null,
-            "storageKey": null
-          },
-          (v5/*: any*/)
+          (v3/*: any*/)
         ]
       }
     ]
@@ -508,7 +323,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "indexTestsFairHeaderQuery",
-    "id": "7a93170ffd8d9e8140b4aa5e4512ba56",
+    "id": "04f68f567ed2e3613298376a114382fa",
     "text": null,
     "metadata": {}
   }
diff --git a/src/__generated__/indexTestsQuery.graphql.ts b/src/__generated__/indexTestsQuery.graphql.ts
index 31503d9b3..e07d7b672 100644
--- a/src/__generated__/indexTestsQuery.graphql.ts
+++ b/src/__generated__/indexTestsQuery.graphql.ts
@@ -30,13 +30,7 @@ fragment Show_show on Show {
 fragment Detail_show on Show {
   internalID
   slug
-  name
   description
-  city
-  isStubShow
-  images {
-    internalID
-  }
   ...ShowHeader_show
   ...ShowArtworksPreview_show
   ...ShowArtistsPreview_show
@@ -57,7 +51,7 @@ fragment Detail_show on Show {
     }
     id
   }
-  artists_without_artworks: artistsWithoutArtworks {
+  artistsWithoutArtworks {
     slug
     id
   }
@@ -65,7 +59,6 @@ fragment Detail_show on Show {
     artworks
     artists
   }
-  status
   partner {
     __typename
     ... on Partner {
@@ -86,11 +79,9 @@ fragment ShowHeader_show on Show {
   internalID
   id
   name
-  press_release: pressRelease
   is_followed: isFollowed
   end_at: endAt
   exhibition_period: exhibitionPeriod
-  status
   isStubShow
   partner {
     __typename
@@ -216,7 +207,6 @@ fragment ShowItem_show on Show {
   end_at: endAt
   images {
     url
-    aspect_ratio: aspectRatio
   }
   partner {
     __typename
@@ -250,7 +240,6 @@ fragment ArtistListItem_artist on Artist {
 
 fragment GenericGrid_artworks on Artwork {
   id
-  slug
   image {
     aspect_ratio: aspectRatio
   }
@@ -261,15 +250,12 @@ fragment ArtworkGridItem_artwork on Artwork {
   title
   date
   sale_message: saleMessage
-  is_in_auction: isInAuction
   is_biddable: isBiddable
   is_acquireable: isAcquireable
   is_offerable: isOfferable
   slug
   sale {
     is_auction: isAuction
-    is_live_open: isLiveOpen
-    is_open: isOpen
     is_closed: isClosed
     display_timely_at: displayTimelyAt
     id
@@ -321,101 +307,97 @@ v2 = {
 v3 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "name",
+  "name": "id",
   "args": null,
   "storageKey": null
 },
 v4 = {
   "kind": "ScalarField",
   "alias": null,
-  "name": "city",
+  "name": "name",
   "args": null,
   "storageKey": null
 },
 v5 = {
   "kind": "ScalarField",
-  "alias": null,
-  "name": "url",
+  "alias": "is_followed",
+  "name": "isFollowed",
   "args": null,
   "storageKey": null
 },
 v6 = {
   "kind": "ScalarField",
-  "alias": "aspect_ratio",
-  "name": "aspectRatio",
+  "alias": "end_at",
+  "name": "endAt",
   "args": null,
   "storageKey": null
 },
 v7 = {
   "kind": "ScalarField",
-  "alias": null,
-  "name": "id",
+  "alias": "exhibition_period",
+  "name": "exhibitionPeriod",
   "args": null,
   "storageKey": null
 },
 v8 = {
   "kind": "ScalarField",
-  "alias": "is_followed",
-  "name": "isFollowed",
+  "alias": null,
+  "name": "__typename",
   "args": null,
   "storageKey": null
 },
 v9 = {
   "kind": "ScalarField",
-  "alias": "end_at",
-  "name": "endAt",
+  "alias": null,
+  "name": "href",
   "args": null,
   "storageKey": null
 },
 v10 = {
   "kind": "ScalarField",
-  "alias": "exhibition_period",
-  "name": "exhibitionPeriod",
+  "alias": null,
+  "name": "url",
   "args": null,
   "storageKey": null
 },
 v11 = {
   "kind": "ScalarField",
-  "alias": null,
-  "name": "__typename",
+  "alias": "aspect_ratio",
+  "name": "aspectRatio",
   "args": null,
   "storageKey": null
 },
 v12 = {
-  "kind": "ScalarField",
-  "alias": null,
-  "name": "href",
-  "args": null,
-  "storageKey": null
-},
-v13 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "initials",
   "args": null,
   "storageKey": null
 },
-v14 = {
+v13 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "nationality",
   "args": null,
   "storageKey": null
 },
-v15 = {
+v14 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "birthday",
   "args": null,
   "storageKey": null
 },
-v16 = {
+v15 = {
   "kind": "ScalarField",
   "alias": null,
   "name": "deathday",
   "args": null,
   "storageKey": null
 },
+v16 = [
+  (v10/*: any*/)
+],
 v17 = {
   "kind": "LinkedField",
   "alias": null,
@@ -424,13 +406,11 @@ v17 = {
   "args": null,
   "concreteType": "Image",
   "plural": false,
-  "selections": [
-    (v5/*: any*/)
-  ]
+  "selections": (v16/*: any*/)
 },
 v18 = [
-  (v3/*: any*/),
-  (v7/*: any*/)
+  (v4/*: any*/),
+  (v3/*: any*/)
 ];
 return {
   "kind": "Request",
@@ -475,7 +455,6 @@ return {
         "selections": [
           (v1/*: any*/),
           (v2/*: any*/),
-          (v3/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
@@ -483,43 +462,15 @@ return {
             "args": null,
             "storageKey": null
           },
+          (v3/*: any*/),
           (v4/*: any*/),
-          {
-            "kind": "ScalarField",
-            "alias": null,
-            "name": "isStubShow",
-            "args": null,
-            "storageKey": null
-          },
-          {
-            "kind": "LinkedField",
-            "alias": null,
-            "name": "images",
-            "storageKey": null,
-            "args": null,
-            "concreteType": "Image",
-            "plural": true,
-            "selections": [
-              (v1/*: any*/),
-              (v5/*: any*/),
-              (v6/*: any*/)
-            ]
-          },
+          (v5/*: any*/),
+          (v6/*: any*/),
           (v7/*: any*/),
-          {
-            "kind": "ScalarField",
-            "alias": "press_release",
-            "name": "pressRelease",
-            "args": null,
-            "storageKey": null
-          },
-          (v8/*: any*/),
-          (v9/*: any*/),
-          (v10/*: any*/),
           {
             "kind": "ScalarField",
             "alias": null,
-            "name": "status",
+            "name": "isStubShow",
             "args": null,
             "storageKey": null
           },
@@ -532,15 +483,15 @@ return {
             "concreteType": null,
             "plural": false,
             "selections": [
-              (v11/*: any*/),
-              (v7/*: any*/),
+              (v8/*: any*/),
+              (v3/*: any*/),
               {
                 "kind": "InlineFragment",
                 "type": "Partner",
                 "selections": [
-                  (v3/*: any*/),
+                  (v4/*: any*/),
                   (v2/*: any*/),
-                  (v12/*: any*/),
+                  (v9/*: any*/),
                   {
                     "kind": "ScalarField",
                     "alias": null,
@@ -552,6 +503,19 @@ return {
               }
             ]
           },
+          {
+            "kind": "LinkedField",
+            "alias": null,
+            "name": "images",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Image",
+            "plural": true,
+            "selections": [
+              (v10/*: any*/),
+              (v11/*: any*/)
+            ]
+          },
           {
             "kind": "LinkedField",
             "alias": "followedArtists",
@@ -594,11 +558,11 @@ return {
                         "concreteType": "Artist",
                         "plural": false,
                         "selections": [
-                          (v3/*: any*/),
-                          (v12/*: any*/),
+                          (v4/*: any*/),
+                          (v9/*: any*/),
                           (v2/*: any*/),
                           (v1/*: any*/),
-                          (v7/*: any*/)
+                          (v3/*: any*/)
                         ]
                       }
                     ]
@@ -616,16 +580,16 @@ return {
             "concreteType": "Artist",
             "plural": true,
             "selections": [
-              (v3/*: any*/),
-              (v12/*: any*/),
+              (v4/*: any*/),
+              (v9/*: any*/),
               (v2/*: any*/),
               (v1/*: any*/),
-              (v7/*: any*/),
+              (v3/*: any*/),
+              (v12/*: any*/),
+              (v5/*: any*/),
               (v13/*: any*/),
-              (v8/*: any*/),
               (v14/*: any*/),
               (v15/*: any*/),
-              (v16/*: any*/),
               (v17/*: any*/)
             ]
           },
@@ -687,8 +651,7 @@ return {
                     "concreteType": "Artwork",
                     "plural": false,
                     "selections": [
-                      (v7/*: any*/),
-                      (v2/*: any*/),
+                      (v3/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -698,7 +661,7 @@ return {
                         "concreteType": "Image",
                         "plural": false,
                         "selections": [
-                          (v6/*: any*/),
+                          (v11/*: any*/),
                           {
                             "kind": "ScalarField",
                             "alias": null,
@@ -735,13 +698,6 @@ return {
                         "args": null,
                         "storageKey": null
                       },
-                      {
-                        "kind": "ScalarField",
-                        "alias": "is_in_auction",
-                        "name": "isInAuction",
-                        "args": null,
-                        "storageKey": null
-                      },
                       {
                         "kind": "ScalarField",
                         "alias": "is_biddable",
@@ -763,6 +719,7 @@ return {
                         "args": null,
                         "storageKey": null
                       },
+                      (v2/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -779,20 +736,6 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_live_open",
-                            "name": "isLiveOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
-                          {
-                            "kind": "ScalarField",
-                            "alias": "is_open",
-                            "name": "isOpen",
-                            "args": null,
-                            "storageKey": null
-                          },
                           {
                             "kind": "ScalarField",
                             "alias": "is_closed",
@@ -807,7 +750,7 @@ return {
                             "args": null,
                             "storageKey": null
                           },
-                          (v7/*: any*/)
+                          (v3/*: any*/)
                         ]
                       },
                       {
@@ -837,7 +780,7 @@ return {
                               }
                             ]
                           },
-                          (v7/*: any*/)
+                          (v3/*: any*/)
                         ]
                       },
                       {
@@ -866,7 +809,7 @@ return {
                         "plural": false,
                         "selections": (v18/*: any*/)
                       },
-                      (v12/*: any*/)
+                      (v9/*: any*/)
                     ]
                   }
                 ]
@@ -882,16 +825,16 @@ return {
             "concreteType": "Artist",
             "plural": true,
             "selections": [
-              (v7/*: any*/),
+              (v3/*: any*/),
               (v1/*: any*/),
               (v2/*: any*/),
+              (v9/*: any*/),
+              (v4/*: any*/),
               (v12/*: any*/),
-              (v3/*: any*/),
+              (v5/*: any*/),
               (v13/*: any*/),
-              (v8/*: any*/),
               (v14/*: any*/),
               (v15/*: any*/),
-              (v16/*: any*/),
               (v17/*: any*/)
             ]
           },
@@ -928,12 +871,12 @@ return {
                     "concreteType": "Show",
                     "plural": false,
                     "selections": [
-                      (v7/*: any*/),
+                      (v3/*: any*/),
                       (v1/*: any*/),
                       (v2/*: any*/),
-                      (v3/*: any*/),
-                      (v10/*: any*/),
-                      (v9/*: any*/),
+                      (v4/*: any*/),
+                      (v7/*: any*/),
+                      (v6/*: any*/),
                       {
                         "kind": "LinkedField",
                         "alias": null,
@@ -942,10 +885,7 @@ return {
                         "args": null,
                         "concreteType": "Image",
                         "plural": true,
-                        "selections": [
-                          (v5/*: any*/),
-                          (v6/*: any*/)
-                        ]
+                        "selections": (v16/*: any*/)
                       },
                       {
                         "kind": "LinkedField",
@@ -956,13 +896,13 @@ return {
                         "concreteType": null,
                         "plural": false,
                         "selections": [
-                          (v11/*: any*/),
-                          (v7/*: any*/),
+                          (v8/*: any*/),
+                          (v3/*: any*/),
                           {
                             "kind": "InlineFragment",
                             "type": "Partner",
                             "selections": [
-                              (v3/*: any*/)
+                              (v4/*: any*/)
                             ]
                           }
                         ]
@@ -982,9 +922,15 @@ return {
             "concreteType": "Location",
             "plural": false,
             "selections": [
-              (v7/*: any*/),
+              (v3/*: any*/),
               (v1/*: any*/),
-              (v4/*: any*/),
+              {
+                "kind": "ScalarField",
+                "alias": null,
+                "name": "city",
+                "args": null,
+                "storageKey": null
+              },
               {
                 "kind": "ScalarField",
                 "alias": null,
@@ -1079,7 +1025,7 @@ return {
                 "concreteType": null,
                 "plural": false,
                 "selections": [
-                  (v11/*: any*/),
+                  (v8/*: any*/),
                   {
                     "kind": "InlineFragment",
                     "type": "OpeningHoursArray",
@@ -1127,6 +1073,19 @@ return {
                 ]
               }
             ]
+          },
+          {
+            "kind": "LinkedField",
+            "alias": null,
+            "name": "artistsWithoutArtworks",
+            "storageKey": null,
+            "args": null,
+            "concreteType": "Artist",
+            "plural": true,
+            "selections": [
+              (v2/*: any*/),
+              (v3/*: any*/)
+            ]
           }
         ]
       }
@@ -1135,7 +1094,7 @@ return {
   "params": {
     "operationKind": "query",
     "name": "indexTestsQuery",
-    "id": "0c286e283330f263cab335134d1dd88e",
+    "id": "ccef6a3bd2cbfeb5850e8283cf3ec83b",
     "text": null,
     "metadata": {}
   }
diff --git a/src/lib/Components/Artist/Shows/ArtistShow.tsx b/src/lib/Components/Artist/Shows/ArtistShow.tsx
index 40720aa0f..f8b7d6b79 100644
--- a/src/lib/Components/Artist/Shows/ArtistShow.tsx
+++ b/src/lib/Components/Artist/Shows/ArtistShow.tsx
@@ -20,7 +20,8 @@ interface Props {
 
 class Show extends React.Component<Props> {
   handleTap() {
-    const href = hrefForPartialShow(this.props.show)
+    const { slug, is_fair_booth, href: showHref } = this.props.show
+    const href = hrefForPartialShow({ slug, href: showHref, is_fair_booth })
     SwitchBoard.presentNavigationViewController(this, href)
   }
 
diff --git a/src/lib/Components/ArtworkGrids/ArtworkGridItem.tsx b/src/lib/Components/ArtworkGrids/ArtworkGridItem.tsx
index 0ce429f73..c355083d3 100644
--- a/src/lib/Components/ArtworkGrids/ArtworkGridItem.tsx
+++ b/src/lib/Components/ArtworkGrids/ArtworkGridItem.tsx
@@ -207,15 +207,12 @@ export default createFragmentContainer(Artwork, {
       title
       date
       sale_message: saleMessage
-      is_in_auction: isInAuction
       is_biddable: isBiddable
       is_acquireable: isAcquireable
       is_offerable: isOfferable
       slug
       sale {
         is_auction: isAuction
-        is_live_open: isLiveOpen
-        is_open: isOpen
         is_closed: isClosed
         display_timely_at: displayTimelyAt
       }
diff --git a/src/lib/Components/ArtworkGrids/GenericGrid.tsx b/src/lib/Components/ArtworkGrids/GenericGrid.tsx
index d7e464be1..2574dc83a 100644
--- a/src/lib/Components/ArtworkGrids/GenericGrid.tsx
+++ b/src/lib/Components/ArtworkGrids/GenericGrid.tsx
@@ -175,7 +175,6 @@ const GenericGrid = createFragmentContainer(GenericArtworksGrid, {
   artworks: graphql`
     fragment GenericGrid_artworks on Artwork @relay(plural: true) {
       id
-      slug
       image {
         aspect_ratio: aspectRatio
       }
diff --git a/src/lib/Components/ArtworkGrids/__tests__/ArtworkGridItem-tests.tsx b/src/lib/Components/ArtworkGrids/__tests__/ArtworkGridItem-tests.tsx
index 46ecda2b1..0941937bb 100644
--- a/src/lib/Components/ArtworkGrids/__tests__/ArtworkGridItem-tests.tsx
+++ b/src/lib/Components/ArtworkGrids/__tests__/ArtworkGridItem-tests.tsx
@@ -117,12 +117,9 @@ const artworkProps = (saleArtwork = null) => {
   return {
     title: "Some Kind of Dinosaur",
     date: "2015",
-    is_in_auction: saleArtwork !== null,
     sale_message: "Contact For Price",
     sale: {
       is_auction: true,
-      is_live_open: false,
-      is_open: true,
       is_closed: saleArtwork == null,
       display_timely_at: "ends in 6d",
     },
diff --git a/src/lib/Components/Bidding/Components/MaxBidPicker.tsx b/src/lib/Components/Bidding/Components/MaxBidPicker.tsx
index bd00d422c..2e9b443c3 100644
--- a/src/lib/Components/Bidding/Components/MaxBidPicker.tsx
+++ b/src/lib/Components/Bidding/Components/MaxBidPicker.tsx
@@ -2,10 +2,8 @@ import React from "react"
 import { Picker, PickerProperties } from "react-native"
 import styled from "styled-components/native"
 
-import { Bid } from "../types"
-
 export interface MaxBidPickerProps extends PickerProperties {
-  bids: ReadonlyArray<Bid>
+  bids: ReadonlyArray<{ display: string }>
 }
 
 export class MaxBidPicker extends React.Component<MaxBidPickerProps> {
diff --git a/src/lib/Components/Bidding/Screens/BidResult.tsx b/src/lib/Components/Bidding/Screens/BidResult.tsx
index 1361b4379..8728f30a9 100644
--- a/src/lib/Components/Bidding/Screens/BidResult.tsx
+++ b/src/lib/Components/Bidding/Screens/BidResult.tsx
@@ -72,7 +72,7 @@ export class BidResult extends React.Component<BidResultProps> {
 
   render() {
     const { sale_artwork, bidderPositionResult } = this.props
-    const { live_start_at, end_at } = sale_artwork.sale
+    const { liveStartAt, endAt } = sale_artwork.sale
     const { status, message_header, message_description_md } = bidderPositionResult
 
     return (
@@ -92,7 +92,7 @@ export class BidResult extends React.Component<BidResultProps> {
                 </Markdown>
               )}
 
-              {this.shouldDisplayTimer(status) && <Timer liveStartsAt={live_start_at} endsAt={end_at} />}
+              {this.shouldDisplayTimer(status) && <Timer liveStartsAt={liveStartAt} endsAt={endAt} />}
             </Flex>
           </View>
           {this.canBidAgain(status) ? (
@@ -121,14 +121,9 @@ export class BidResult extends React.Component<BidResultProps> {
 export const BidResultScreen = createFragmentContainer(BidResult, {
   sale_artwork: graphql`
     fragment BidResult_sale_artwork on SaleArtwork {
-      minimum_next_bid: minimumNextBid {
-        amount
-        cents
-        display
-      }
       sale {
-        live_start_at: liveStartAt
-        end_at: endAt
+        liveStartAt
+        endAt
         slug
       }
     }
diff --git a/src/lib/Components/Bidding/Screens/ConfirmBid/index.tsx b/src/lib/Components/Bidding/Screens/ConfirmBid/index.tsx
index 985577c75..9660744e8 100644
--- a/src/lib/Components/Bidding/Screens/ConfirmBid/index.tsx
+++ b/src/lib/Components/Bidding/Screens/ConfirmBid/index.tsx
@@ -555,7 +555,7 @@ export const ConfirmBidScreen = createRefetchContainer(
       fragment ConfirmBid_me on Me {
         has_qualified_credit_cards: hasQualifiedCreditCards
         bidders(saleID: $saleID) {
-          qualified_for_bidding: qualifiedForBidding
+          id
         }
       }
     `,
@@ -565,7 +565,7 @@ export const ConfirmBidScreen = createRefetchContainer(
       me {
         has_qualified_credit_cards: hasQualifiedCreditCards
         bidders(saleID: $saleID) {
-          qualified_for_bidding: qualifiedForBidding
+          id
         }
       }
     }
diff --git a/src/lib/Components/Bidding/Screens/SelectMaxBid.tsx b/src/lib/Components/Bidding/Screens/SelectMaxBid.tsx
index d8327d39c..fc7e50155 100644
--- a/src/lib/Components/Bidding/Screens/SelectMaxBid.tsx
+++ b/src/lib/Components/Bidding/Screens/SelectMaxBid.tsx
@@ -101,7 +101,6 @@ export const MaxBidScreen = createRefetchContainer(
         id
         increments(useMyMaxBid: true) {
           display
-          cents
         }
         ...ConfirmBid_sale_artwork
       }
diff --git a/src/lib/Components/FilteredInfiniteScrollGrid/FilteredInfiniteScrollGrid.tsx b/src/lib/Components/FilteredInfiniteScrollGrid/FilteredInfiniteScrollGrid.tsx
index dd5444749..c33d2e511 100644
--- a/src/lib/Components/FilteredInfiniteScrollGrid/FilteredInfiniteScrollGrid.tsx
+++ b/src/lib/Components/FilteredInfiniteScrollGrid/FilteredInfiniteScrollGrid.tsx
@@ -130,7 +130,6 @@ export const FilteredInfiniteScrollGridContainer = createPaginationContainer(
           edges {
             node {
               id
-              slug
             }
           }
           ...Filters_filteredArtworks
diff --git a/src/lib/Components/Gene/__tests__/__snapshots__/About-tests.tsx.snap b/src/lib/Components/Gene/__tests__/__snapshots__/About-tests.tsx.snap
index 740898bcc..bf2558e3f 100644
--- a/src/lib/Components/Gene/__tests__/__snapshots__/About-tests.tsx.snap
+++ b/src/lib/Components/Gene/__tests__/__snapshots__/About-tests.tsx.snap
@@ -139,7 +139,7 @@ exports[`shows trending artists correctly 1`] = `
             }
           }
         >
-          36 works, 30 for sale
+          36 works
         </Text>
       </View>
       <View
@@ -189,7 +189,7 @@ exports[`shows trending artists correctly 1`] = `
             }
           }
         >
-          31 works, 24 for sale
+          31 works
         </Text>
       </View>
     </View>
diff --git a/src/lib/Components/Home/ArtistRails/ArtistRail.tsx b/src/lib/Components/Home/ArtistRails/ArtistRail.tsx
index 5fe92cdc3..351db96f7 100644
--- a/src/lib/Components/Home/ArtistRails/ArtistRail.tsx
+++ b/src/lib/Components/Home/ArtistRails/ArtistRail.tsx
@@ -44,7 +44,9 @@ export class ArtistRail extends Component<Props, State> {
   constructor(props: Props) {
     super(props)
     if (props.rail.results) {
-      const artists = props.rail.results.map(artist => setupSuggestedArtist(artist, 1, 0)) as any
+      const artists = props.rail.results.map(({ id, internalID }) =>
+        setupSuggestedArtist({ id, internalID }, 1, 0)
+      ) as any
       this.state = { artists }
     }
   }
diff --git a/src/lib/Components/Home/HeroUnits.tsx b/src/lib/Components/Home/HeroUnits.tsx
index 3fe064569..97e46497b 100644
--- a/src/lib/Components/Home/HeroUnits.tsx
+++ b/src/lib/Components/Home/HeroUnits.tsx
@@ -40,11 +40,11 @@ class HeroUnits extends React.Component<Props, State> {
     this.setState({ width, height, margin, fontSize })
   }
 
-  handlePress = heroUnit => {
+  handlePress = (heroUnit: HeroUnits_hero_units[number]) => {
     SwitchBoard.presentNavigationViewController(this, heroUnit.href)
   }
 
-  renderHeroUnit(heroUnit, margin, width, height) {
+  renderHeroUnit(heroUnit: HeroUnits_hero_units[number], margin, width, height) {
     return (
       <TouchableHighlight
         key={heroUnit.id}
@@ -93,8 +93,8 @@ export default createFragmentContainer(HeroUnits, {
   hero_units: graphql`
     fragment HeroUnits_hero_units on HomePageHeroUnit @relay(plural: true) {
       id
-      href
       title
+      href
       heading
       narrow_image_url: backgroundImageURL(version: NARROW)
       wide_image_url: backgroundImageURL(version: WIDE)
diff --git a/src/lib/Components/Inbox/ActiveBids/ActiveBid.tsx b/src/lib/Components/Inbox/ActiveBids/ActiveBid.tsx
index ef6076687..1f9c6a413 100644
--- a/src/lib/Components/Inbox/ActiveBids/ActiveBid.tsx
+++ b/src/lib/Components/Inbox/ActiveBids/ActiveBid.tsx
@@ -160,9 +160,6 @@ export default createFragmentContainer(ActiveBid, {
       }
       most_recent_bid: mostRecentBid {
         id
-        max_bid: maxBid {
-          display
-        }
         sale_artwork: saleArtwork {
           artwork {
             href
diff --git a/src/lib/Components/Inbox/Conversations/ConversationSnippet.tsx b/src/lib/Components/Inbox/Conversations/ConversationSnippet.tsx
index 5d8da7c01..d22c67d54 100644
--- a/src/lib/Components/Inbox/Conversations/ConversationSnippet.tsx
+++ b/src/lib/Components/Inbox/Conversations/ConversationSnippet.tsx
@@ -94,7 +94,7 @@ export class ConversationSnippet extends React.Component<Props> {
     if (item.__typename === "Artwork") {
       const artworkTitle = `${item.title.trim()}, `
       const artworkDate = `${item.date}`
-      const artworkArtist = `${item.artist_names} · `
+      const artworkArtist = `${item.artistNames} · `
 
       return (
         <HorizontalLayout>
@@ -145,13 +145,13 @@ export class ConversationSnippet extends React.Component<Props> {
     if (item.__typename === "Artwork") {
       imageURL = item.image.url
     } else if (item.__typename === "Show") {
-      imageURL = item.cover_image.url
+      imageURL = item.coverImage.url
     }
 
     const partnerName = conversation.to.name
 
-    const conversationText = conversation.last_message && conversation.last_message.replace(/\n/g, " ")
-    const date = moment(conversation.last_message_at).fromNow(true) + " ago"
+    const conversationText = conversation.lastMessage && conversation.lastMessage.replace(/\n/g, " ")
+    const date = moment(conversation.lastMessageAt).fromNow(true) + " ago"
     return (
       <TouchableWithoutFeedback onPress={() => this.conversationSelected()}>
         <Card>
@@ -181,8 +181,8 @@ export default createFragmentContainer(ConversationSnippet, {
       to {
         name
       }
-      last_message: lastMessage
-      last_message_at: lastMessageAt
+      lastMessage
+      lastMessageAt
       unread
       items {
         item {
@@ -190,7 +190,7 @@ export default createFragmentContainer(ConversationSnippet, {
           ... on Artwork {
             date
             title
-            artist_names: artistNames
+            artistNames
             image {
               url
             }
@@ -200,7 +200,7 @@ export default createFragmentContainer(ConversationSnippet, {
               name
             }
             name
-            cover_image: coverImage {
+            coverImage {
               url
             }
           }
diff --git a/src/lib/Components/Inbox/Conversations/SendConversationMessage.ts b/src/lib/Components/Inbox/Conversations/SendConversationMessage.ts
index d6d7efcc7..488b7eb1e 100644
--- a/src/lib/Components/Inbox/Conversations/SendConversationMessage.ts
+++ b/src/lib/Components/Inbox/Conversations/SendConversationMessage.ts
@@ -3,7 +3,7 @@ import { commitMutation, graphql } from "react-relay"
 import { ConnectionHandler, Environment, MutationConfig, RecordSourceSelectorProxy } from "relay-runtime"
 
 interface Conversation {
-  last_message_id: string
+  lastMessageID: string
   internalID: string
   id: string
   from: {
@@ -55,7 +55,7 @@ export function sendConversationMessage(
         from: conversation.from.email,
         bodyText: text,
         // Reply to the last message
-        replyToMessageID: conversation.last_message_id,
+        replyToMessageID: conversation.lastMessageID,
       },
     },
 
diff --git a/src/lib/Components/Inbox/Conversations/__tests__/ConversationSnippet-tests.tsx b/src/lib/Components/Inbox/Conversations/__tests__/ConversationSnippet-tests.tsx
index 4ecdf7952..537415c8f 100644
--- a/src/lib/Components/Inbox/Conversations/__tests__/ConversationSnippet-tests.tsx
+++ b/src/lib/Components/Inbox/Conversations/__tests__/ConversationSnippet-tests.tsx
@@ -41,7 +41,7 @@ const show = {
     name: "Catty Fair",
   },
   name: "Catty Show",
-  cover_image: {
+  coverImage: {
     url: "https://d32dm0rphc51dk.cloudfront.net/bJ9I_vJX9ksaKFJAkOAIKg/normalized.jpg",
   },
 }
diff --git a/src/lib/Components/Inbox/Conversations/__tests__/__snapshots__/ConversationSnippet-tests.tsx.snap b/src/lib/Components/Inbox/Conversations/__tests__/__snapshots__/ConversationSnippet-tests.tsx.snap
index 9f8c077f4..f98833ad0 100644
--- a/src/lib/Components/Inbox/Conversations/__tests__/__snapshots__/ConversationSnippet-tests.tsx.snap
+++ b/src/lib/Components/Inbox/Conversations/__tests__/__snapshots__/ConversationSnippet-tests.tsx.snap
@@ -164,25 +164,6 @@ exports[`renders correctly with a show 1`] = `
           </Text>
         </Text>
       </View>
-      <Text
-        ellipsizeMode="tail"
-        numberOfLines={1}
-        style={
-          Array [
-            Object {
-              "color": "black",
-              "fontSize": 16,
-              "textAlign": "left",
-            },
-            Object {},
-            Object {
-              "fontFamily": "ReactNativeAGaramondPro-Regular",
-            },
-          ]
-        }
-      >
-        Karl and Anna... Fab!
-      </Text>
       <Text
         style={
           Array [
@@ -198,7 +179,7 @@ exports[`renders correctly with a show 1`] = `
           ]
         }
       >
-        A YEAR AGO
+        A FEW SECONDS AGO
       </Text>
     </View>
   </View>
@@ -377,7 +358,7 @@ exports[`renders correctly with an artwork 1`] = `
               ]
             }
           >
-            Bradley Theodore · 
+            undefined · 
           </Text>
           <Text
             style={
@@ -407,25 +388,6 @@ exports[`renders correctly with an artwork 1`] = `
           </Text>
         </Text>
       </View>
-      <Text
-        ellipsizeMode="tail"
-        numberOfLines={1}
-        style={
-          Array [
-            Object {
-              "color": "black",
-              "fontSize": 16,
-              "textAlign": "left",
-            },
-            Object {},
-            Object {
-              "fontFamily": "ReactNativeAGaramondPro-Regular",
-            },
-          ]
-        }
-      >
-        Karl and Anna... Fab!
-      </Text>
       <Text
         style={
           Array [
@@ -441,7 +403,7 @@ exports[`renders correctly with an artwork 1`] = `
           ]
         }
       >
-        A YEAR AGO
+        A FEW SECONDS AGO
       </Text>
     </View>
   </View>
diff --git a/src/lib/Components/Inbox/Conversations/__tests__/__snapshots__/Conversations-tests.tsx.snap b/src/lib/Components/Inbox/Conversations/__tests__/__snapshots__/Conversations-tests.tsx.snap
index c502e99a5..5b55d69ee 100644
--- a/src/lib/Components/Inbox/Conversations/__tests__/__snapshots__/Conversations-tests.tsx.snap
+++ b/src/lib/Components/Inbox/Conversations/__tests__/__snapshots__/Conversations-tests.tsx.snap
@@ -264,7 +264,7 @@ exports[`messaging inbox looks correct when rendered 1`] = `
                       ]
                     }
                   >
-                    Bradley Theodore · 
+                    undefined · 
                   </Text>
                   <Text
                     style={
@@ -294,25 +294,6 @@ exports[`messaging inbox looks correct when rendered 1`] = `
                   </Text>
                 </Text>
               </View>
-              <Text
-                ellipsizeMode="tail"
-                numberOfLines={1}
-                style={
-                  Array [
-                    Object {
-                      "color": "black",
-                      "fontSize": 16,
-                      "textAlign": "left",
-                    },
-                    Object {},
-                    Object {
-                      "fontFamily": "ReactNativeAGaramondPro-Regular",
-                    },
-                  ]
-                }
-              >
-                Karl and Anna... Fab!
-              </Text>
               <Text
                 style={
                   Array [
@@ -493,7 +474,7 @@ exports[`messaging inbox looks correct when rendered 1`] = `
                       ]
                     }
                   >
-                    Aida Muluneh · 
+                    undefined · 
                   </Text>
                   <Text
                     style={
@@ -523,25 +504,6 @@ exports[`messaging inbox looks correct when rendered 1`] = `
                   </Text>
                 </Text>
               </View>
-              <Text
-                ellipsizeMode="tail"
-                numberOfLines={1}
-                style={
-                  Array [
-                    Object {
-                      "color": "black",
-                      "fontSize": 16,
-                      "textAlign": "left",
-                    },
-                    Object {},
-                    Object {
-                      "fontFamily": "ReactNativeAGaramondPro-Regular",
-                    },
-                  ]
-                }
-              >
-                Hi, I’m interested in purchasing this work.                     Could you please provide more information about the piece?
-              </Text>
               <Text
                 style={
                   Array [
diff --git a/src/lib/Components/Lists/SavedItemRow.tsx b/src/lib/Components/Lists/SavedItemRow.tsx
index 0691a90ad..200dc4c72 100644
--- a/src/lib/Components/Lists/SavedItemRow.tsx
+++ b/src/lib/Components/Lists/SavedItemRow.tsx
@@ -47,7 +47,7 @@ const Separator = styled.View`
   margin-top: 9px;
 `
 
-interface Props {
+interface SavedItemRowProps {
   href: string
   name: string
   image: {
@@ -56,7 +56,7 @@ interface Props {
   square_image?: boolean | undefined
 }
 
-export default class SavedArtistRow extends React.Component<Props, null> {
+export default class SavedArtistRow extends React.Component<SavedItemRowProps, null> {
   handleTap() {
     Switchboard.presentNavigationViewController(this, this.props.href)
   }
diff --git a/src/lib/Components/Lists/ShowItemRow.tsx b/src/lib/Components/Lists/ShowItemRow.tsx
index 7b799617f..3c385c188 100644
--- a/src/lib/Components/Lists/ShowItemRow.tsx
+++ b/src/lib/Components/Lists/ShowItemRow.tsx
@@ -6,9 +6,9 @@ import colors from "lib/data/colors"
 import { Pin } from "lib/Icons/Pin"
 import SwitchBoard from "lib/NativeModules/SwitchBoard"
 import { ExhibitionDates } from "lib/Scenes/Map/exhibitionPeriodParser"
+import { get } from "lib/utils/get"
 import { hrefForPartialShow } from "lib/utils/router"
 import { Schema, Track, track as _track } from "lib/utils/track"
-import { get } from "lodash"
 import React from "react"
 import { TouchableWithoutFeedback } from "react-native"
 import { commitMutation, createFragmentContainer, graphql, RelayProp } from "react-relay"
@@ -121,7 +121,7 @@ export class ShowItemRow extends React.Component<Props, State> {
   render() {
     const { show, shouldHideSaveButton } = this.props
     const mainCoverImageURL = show.cover_image && show.cover_image.url
-    const galleryProfileIcon = show.isStubShow && get(show, "partner.profile.image.url")
+    const galleryProfileIcon = show.isStubShow && get(show, s => s.partner.profile.image.url)
 
     const imageURL = mainCoverImageURL || galleryProfileIcon
 
@@ -196,10 +196,8 @@ export const ShowItemRowContainer = createFragmentContainer(ShowItemRow, {
       status
       cover_image: coverImage {
         url
-        aspect_ratio: aspectRatio
       }
       is_fair_booth: isFairBooth
-      start_at: startAt
       end_at: endAt
     }
   `,
diff --git a/src/lib/Components/RelatedArtists/RelatedArtist.tsx b/src/lib/Components/RelatedArtists/RelatedArtist.tsx
index bc97652f6..033bd41d8 100644
--- a/src/lib/Components/RelatedArtists/RelatedArtist.tsx
+++ b/src/lib/Components/RelatedArtists/RelatedArtist.tsx
@@ -37,17 +37,13 @@ class RelatedArtist extends Component<Props> {
     )
   }
 
-  artworksString(counts) {
-    if (counts.totalWorks <= 0) {
-      return ""
-    }
-
+  artworksString(counts: RelatedArtist_artist["counts"]) {
     const totalWorks = counts.artworks ? counts.artworks + (counts.artworks > 1 ? " works" : " work") : null
-    if (totalWorks && counts.for_sale_artworks === counts.artworks) {
+    if (totalWorks && counts.forSaleArtworks === counts.artworks) {
       return totalWorks + " for sale"
     }
 
-    const forSale = counts.for_sale_artworks ? counts.for_sale_artworks + " for sale" : null
+    const forSale = counts.forSaleArtworks ? counts.forSaleArtworks + " for sale" : null
     if (forSale && totalWorks) {
       return totalWorks + ", " + forSale
     }
@@ -81,7 +77,7 @@ export default createFragmentContainer(RelatedArtist, {
       href
       name
       counts {
-        for_sale_artworks: forSaleArtworks
+        forSaleArtworks
         artworks
       }
       image {
diff --git a/src/lib/Components/RelatedArtists/__tests__/__snapshots__/Layout-tests.tsx.snap b/src/lib/Components/RelatedArtists/__tests__/__snapshots__/Layout-tests.tsx.snap
index 0d9f79918..2e7befc24 100644
--- a/src/lib/Components/RelatedArtists/__tests__/__snapshots__/Layout-tests.tsx.snap
+++ b/src/lib/Components/RelatedArtists/__tests__/__snapshots__/Layout-tests.tsx.snap
@@ -86,7 +86,7 @@ exports[`lays out correctly 1`] = `
           }
         }
       >
-        4 works, 2 for sale
+        4 works
       </Text>
     </View>
     <View
diff --git a/src/lib/Components/Sale/Header.tsx b/src/lib/Components/Sale/Header.tsx
index 645c53f7a..89c07b600 100644
--- a/src/lib/Components/Sale/Header.tsx
+++ b/src/lib/Components/Sale/Header.tsx
@@ -38,9 +38,10 @@ export default createFragmentContainer(Header, {
   sale: graphql`
     fragment Header_sale on Sale {
       name
-      cover_image: coverImage {
-        href
-      }
+      # See above TODO
+      # cover_image: coverImage {
+      #   href
+      # }
     }
   `,
 })
diff --git a/src/lib/Components/Show/ShowArtistsPreview.tsx b/src/lib/Components/Show/ShowArtistsPreview.tsx
index d81a92e7b..2e0601bdb 100644
--- a/src/lib/Components/Show/ShowArtistsPreview.tsx
+++ b/src/lib/Components/Show/ShowArtistsPreview.tsx
@@ -3,15 +3,16 @@ import { ShowArtistsPreview_show } from "__generated__/ShowArtistsPreview_show.g
 import { ArtistListItemContainer as ArtistListItem } from "lib/Components/ArtistListItem"
 import { CaretButton } from "lib/Components/Buttons/CaretButton"
 import Switchboard from "lib/NativeModules/SwitchBoard"
+import { get } from "lib/utils/get"
 import { Schema, Track, track as _track } from "lib/utils/track"
-import { get, take } from "lodash"
+import { take } from "lodash"
 import React from "react"
 import { createFragmentContainer, graphql } from "react-relay"
 
 interface Props {
   show: ShowArtistsPreview_show
   onViewAllArtistsPressed: () => void
-  Component: any
+  Component?: any
 }
 
 const track: Track<Props> = _track
@@ -35,8 +36,8 @@ export class ShowArtistsPreview extends React.Component<Props> {
   render() {
     const { show, onViewAllArtistsPressed, Component } = this.props
     const artistsShown = 5
-    const artists = get(show, "artists", []).concat(get(show, "artists_without_artworks", []))
-    const items: ShowArtistsPreview_show["artists"] = take(artists, artistsShown)
+    const artists = get(show, s => s.artists, []).concat(get(show, s => s.artists_without_artworks, []))
+    const items = take(artists, artistsShown)
 
     return (
       <>
diff --git a/src/lib/Components/Show/ShowArtworksPreview.tsx b/src/lib/Components/Show/ShowArtworksPreview.tsx
index a382b512e..a7317bb83 100644
--- a/src/lib/Components/Show/ShowArtworksPreview.tsx
+++ b/src/lib/Components/Show/ShowArtworksPreview.tsx
@@ -8,7 +8,7 @@ import { createFragmentContainer, graphql, RelayProp } from "react-relay"
 interface Props {
   onViewAllArtworksPressed: () => void
   show: ShowArtworksPreview_show
-  title: string
+  title?: string
   relay: RelayProp
 }
 
diff --git a/src/lib/Containers/Conversation.tsx b/src/lib/Containers/Conversation.tsx
index 52e861053..4544fe219 100644
--- a/src/lib/Containers/Conversation.tsx
+++ b/src/lib/Containers/Conversation.tsx
@@ -89,7 +89,7 @@ export class Conversation extends React.Component<Props, State> {
       updateConversation(
         this.props.relay.environment,
         conversation,
-        conversation.last_message_id,
+        conversation.lastMessageID,
         _response => {
           this.setState({ markedMessageAsRead: true })
         },
@@ -178,17 +178,15 @@ export default createFragmentContainer(Conversation, {
       conversation(id: $conversationID) {
         internalID
         id
+        lastMessageID
+        unread
         to {
           name
-          initials
         }
         from {
           email
         }
-        last_message_id: lastMessageID
         ...Messages_conversation
-        initial_message: initialMessage
-        unread
       }
     }
   `,
diff --git a/src/lib/Scenes/Artwork/Artwork.tsx b/src/lib/Scenes/Artwork/Artwork.tsx
index 4ff7c8bed..c11effbb0 100644
--- a/src/lib/Scenes/Artwork/Artwork.tsx
+++ b/src/lib/Scenes/Artwork/Artwork.tsx
@@ -218,7 +218,6 @@ export const ArtworkContainer = createRefetchContainer(
           id
         }
         artist {
-          name
           biography_blurb: biographyBlurb {
             text
           }
diff --git a/src/lib/Scenes/Artwork/Components/AuctionCountDownTimer.tsx b/src/lib/Scenes/Artwork/Components/AuctionCountDownTimer.tsx
index b7d149925..f7d11dadc 100644
--- a/src/lib/Scenes/Artwork/Components/AuctionCountDownTimer.tsx
+++ b/src/lib/Scenes/Artwork/Components/AuctionCountDownTimer.tsx
@@ -73,7 +73,6 @@ export const AuctionCountDownTimerFragmentContainer = createFragmentContainer(Au
       sale {
         startAt
         endAt
-        liveStartAt
         formattedStartDateTime
       }
     }
diff --git a/src/lib/Scenes/Artwork/Components/AuctionPrice.tsx b/src/lib/Scenes/Artwork/Components/AuctionPrice.tsx
index 88995652b..a46acdc8b 100644
--- a/src/lib/Scenes/Artwork/Components/AuctionPrice.tsx
+++ b/src/lib/Scenes/Artwork/Components/AuctionPrice.tsx
@@ -110,7 +110,6 @@ export class AuctionPrice extends React.Component<AuctionPriceProps> {
 export const AuctionPriceFragmentContainer = createFragmentContainer(AuctionPrice, {
   artwork: graphql`
     fragment AuctionPrice_artwork on Artwork {
-      slug
       sale {
         internalID
         isWithBuyersPremium
@@ -118,9 +117,7 @@ export const AuctionPriceFragmentContainer = createFragmentContainer(AuctionPric
         isLiveOpen
       }
       saleArtwork {
-        isWithReserve
         reserveMessage
-        reserveStatus
         currentBid {
           display
         }
diff --git a/src/lib/Scenes/Artwork/Components/CommercialButtons/BidButton.tsx b/src/lib/Scenes/Artwork/Components/CommercialButtons/BidButton.tsx
index 9170aaa7d..3fa38fdff 100644
--- a/src/lib/Scenes/Artwork/Components/CommercialButtons/BidButton.tsx
+++ b/src/lib/Scenes/Artwork/Components/CommercialButtons/BidButton.tsx
@@ -126,12 +126,10 @@ export const BidButtonFragmentContainer = createFragmentContainer(BidButton, {
       slug
       sale {
         slug
-        internalID
         registrationStatus {
           qualifiedForBidding
         }
         isPreview
-        isOpen
         isLiveOpen
         isClosed
         isRegistrationClosed
@@ -146,7 +144,6 @@ export const BidButtonFragmentContainer = createFragmentContainer(BidButton, {
       saleArtwork {
         increments {
           cents
-          display
         }
       }
     }
diff --git a/src/lib/Scenes/Artwork/Components/CommercialButtons/CommercialButtons.tsx b/src/lib/Scenes/Artwork/Components/CommercialButtons/CommercialButtons.tsx
index 5dab1d0ca..981cfca1d 100644
--- a/src/lib/Scenes/Artwork/Components/CommercialButtons/CommercialButtons.tsx
+++ b/src/lib/Scenes/Artwork/Components/CommercialButtons/CommercialButtons.tsx
@@ -75,11 +75,9 @@ export const CommercialButtonsFragmentContainer = createFragmentContainer(Commer
   artwork: graphql`
     fragment CommercialButtons_artwork on Artwork {
       slug
-      internalID
       isAcquireable
       isOfferable
       isInquireable
-      isBiddable
       isInAuction
       isBuyNowable
 
diff --git a/src/lib/Scenes/Artwork/Components/CommercialEditionSetInformation.tsx b/src/lib/Scenes/Artwork/Components/CommercialEditionSetInformation.tsx
index 7cc3abaed..28f3cfddc 100644
--- a/src/lib/Scenes/Artwork/Components/CommercialEditionSetInformation.tsx
+++ b/src/lib/Scenes/Artwork/Components/CommercialEditionSetInformation.tsx
@@ -1,11 +1,13 @@
 import { Box, color, Flex, Sans, Spacer } from "@artsy/palette"
 import { CommercialEditionSetInformation_artwork } from "__generated__/CommercialEditionSetInformation_artwork.graphql"
 import React from "react"
-import { TouchableWithoutFeedback } from "react-native"
+import { NativeModules, TouchableWithoutFeedback } from "react-native"
 import { createFragmentContainer, graphql } from "react-relay"
 import styled from "styled-components/native"
 import { CommercialPartnerInformationFragmentContainer as CommercialPartnerInformation } from "./CommercialPartnerInformation"
 
+const Constants = NativeModules.ARCocoaConstantsModule
+
 type EditionSet = CommercialEditionSetInformation_artwork["editionSets"][0]
 
 interface Props {
@@ -66,7 +68,7 @@ export class CommercialEditionSetInformation extends React.Component<Props, Stat
               <TouchableWithoutFeedback key={id} onPress={() => this.selectEdition(internalID)}>
                 <EditionSelector px={2} height={26} mt={1} mr={1} selected={selected}>
                   <Sans size="2" weight="medium" color="black100">
-                    {dimensions.in}
+                    {Constants.CurrentLocale === "en_US" ? dimensions.in : dimensions.cm}
                   </Sans>
                 </EditionSelector>
               </TouchableWithoutFeedback>
@@ -104,8 +106,6 @@ export const CommercialEditionSetInformationFragmentContainer = createFragmentCo
         editionSets {
           id
           internalID
-          isAcquireable
-          isOfferable
           saleMessage
           editionOf
 
diff --git a/src/lib/Scenes/Artwork/Components/CommercialInformation.tsx b/src/lib/Scenes/Artwork/Components/CommercialInformation.tsx
index a37d14414..f4875538f 100644
--- a/src/lib/Scenes/Artwork/Components/CommercialInformation.tsx
+++ b/src/lib/Scenes/Artwork/Components/CommercialInformation.tsx
@@ -102,31 +102,25 @@ export class CommercialInformation extends React.Component<CommercialInformation
 export const CommercialInformationFragmentContainer = createFragmentContainer(CommercialInformation, {
   artwork: graphql`
     fragment CommercialInformation_artwork on Artwork {
+      isAcquireable
+      isOfferable
+      isInquireable
+      isInAuction
       availability
+      saleMessage
 
       artists {
         isConsignable
       }
 
       editionSets {
-        isAcquireable
-        isOfferable
-        saleMessage
+        id
       }
 
       sale {
         isClosed
       }
 
-      saleMessage
-      shippingInfo
-      shippingOrigin
-
-      isAcquireable
-      isOfferable
-      isInquireable
-      isInAuction
-
       ...CommercialButtons_artwork
       ...CommercialPartnerInformation_artwork
       ...CommercialEditionSetInformation_artwork
diff --git a/src/lib/Scenes/Artwork/Components/ContextCard.tsx b/src/lib/Scenes/Artwork/Components/ContextCard.tsx
index a6ff5db07..c85e89460 100644
--- a/src/lib/Scenes/Artwork/Components/ContextCard.tsx
+++ b/src/lib/Scenes/Artwork/Components/ContextCard.tsx
@@ -26,7 +26,7 @@ export class ContextCard extends React.Component<ContextCardProps, ContextCardSt
 
   handleFollowShow = show => {
     const { relay } = this.props
-    const { slug, id, internalID, is_followed } = show
+    const { slug, id, internalID, isFollowed } = show
     this.setState(
       {
         isSaving: true,
@@ -40,7 +40,7 @@ export class ContextCard extends React.Component<ContextCardProps, ContextCardSt
                 show {
                   slug
                   internalID
-                  is_followed: isFollowed
+                  isFollowed
                   id
                 }
               }
@@ -49,21 +49,21 @@ export class ContextCard extends React.Component<ContextCardProps, ContextCardSt
           variables: {
             input: {
               partnerShowID: internalID,
-              unfollow: is_followed,
+              unfollow: isFollowed,
             },
           },
           optimisticResponse: {
             followShow: {
               show: {
                 internalID,
-                is_followed: !is_followed,
+                isFollowed: !isFollowed,
                 slug,
                 id,
               },
             },
           },
           updater: store => {
-            store.get(id).setValue(!is_followed, "is_followed")
+            store.get(id).setValue(!isFollowed, "isFollowed")
           },
         })
       }
@@ -73,7 +73,7 @@ export class ContextCard extends React.Component<ContextCardProps, ContextCardSt
   @track((_props, _state, args) => {
     const show = args[0]
     return {
-      action_name: show.is_followed ? Schema.ActionNames.UnsaveShow : Schema.ActionNames.SaveShow,
+      action_name: show.isFollowed ? Schema.ActionNames.UnsaveShow : Schema.ActionNames.SaveShow,
       action_type: Schema.ActionTypes.Success,
       owner_id: show.internalID,
       owner_slug: show.gravityID,
@@ -103,90 +103,73 @@ export class ContextCard extends React.Component<ContextCardProps, ContextCardSt
   }
 
   followButton = show => {
-    const { is_followed } = show
+    const { isFollowed } = show
     const { isSaving } = this.state
 
     return (
       <Button
-        variant={is_followed ? "secondaryOutline" : "primaryBlack"}
+        variant={isFollowed ? "secondaryOutline" : "primaryBlack"}
         onPress={() => this.handleFollowShow(show)}
         size="small"
         longestText="Following"
         loading={isSaving}
       >
-        {is_followed ? "Following" : "Follow"}
+        {isFollowed ? "Following" : "Follow"}
       </Button>
     )
   }
 
   render() {
-    let name = ""
-    let href = ""
     let meta = null
     let header = ""
     let imageUrl = ""
     let followButton = null
-    let renderContextCard = false
 
     const { artwork } = this.props
     const { context } = artwork
     if (context) {
       const { __typename } = context
-
       switch (__typename as any) {
         case "Sale":
           header = context.isAuction ? "In auction" : "In sale"
-          name = context.name
-          href = context.href
           meta = context.isLiveOpen ? "In progress" : context.formattedStartDateTime
-          imageUrl = context.cover_image && context.cover_image.url ? context.cover_image.url : ""
-          renderContextCard = true
+          imageUrl = context.coverImage && context.coverImage.url ? context.coverImage.url : ""
           break
         case "Fair":
           header = "In fair"
-          name = context.name
-          href = context.href
-          meta = context.exhibition_period
+          meta = context.exhibitionPeriod
           imageUrl = context.image && context.image.url ? context.image.url : ""
-          renderContextCard = true
           break
         case "Show":
-          const { shows } = artwork
-          const show = shows[0]
           header = "In show"
-          name = show.name
-          href = show.href
-          meta = show.exhibition_period
-          imageUrl = show.cover_image && show.cover_image.url ? show.cover_image.url : ""
-          followButton = this.followButton(show)
-          renderContextCard = true
+          meta = context.exhibitionPeriod
+          imageUrl = context.coverImage && context.coverImage.url ? context.coverImage.url : ""
+          followButton = this.followButton(context)
           break
       }
+    } else {
+      return null
     }
 
     return (
       <>
-        {renderContextCard && (
-          <Box mb={2}>
-            <Sans size="3t" weight="medium" color="black100">
-              {header}
-            </Sans>
-          </Box>
-        )}
-        {renderContextCard && (
-          <Flex>
-            <TouchableWithoutFeedback onPress={() => this.handleTap(this, href)}>
-              <EntityHeader
-                name={name}
-                href={href}
-                meta={meta}
-                imageUrl={imageUrl}
-                initials={null}
-                FollowButton={followButton}
-              />
-            </TouchableWithoutFeedback>
-          </Flex>
-        )}
+        <Box mb={2}>
+          <Sans size="3t" weight="medium" color="black100">
+            {header}
+          </Sans>
+        </Box>
+        <Flex>
+          <TouchableWithoutFeedback onPress={() => this.handleTap(this, context.href)}>
+            <EntityHeader
+              name={context.name}
+              href={context.href}
+              meta={meta}
+              imageUrl={imageUrl}
+              initials={null}
+              FollowButton={followButton}
+            />
+          </TouchableWithoutFeedback>
+        </Flex>
       </>
     )
   }
@@ -196,8 +179,6 @@ export const ContextCardFragmentContainer = createFragmentContainer(ContextCard,
   artwork: graphql`
     fragment ContextCard_artwork on Artwork {
       id
-      slug
-      internalID
       context {
         __typename
         ... on Sale {
@@ -207,7 +188,7 @@ export const ContextCardFragmentContainer = createFragmentContainer(ContextCard,
           href
           formattedStartDateTime
           isAuction
-          cover_image: coverImage {
+          coverImage {
             url
           }
         }
@@ -215,33 +196,24 @@ export const ContextCardFragmentContainer = createFragmentContainer(ContextCard,
           id
           name
           href
-          exhibition_period: exhibitionPeriod
+          exhibitionPeriod
           image {
             url
           }
         }
         ... on Show {
           id
+          internalID
+          slug
           name
           href
-          exhibition_period: exhibitionPeriod
+          exhibitionPeriod
+          isFollowed
           coverImage {
             url
           }
         }
       }
-      shows(size: 1) {
-        id
-        name
-        href
-        slug
-        internalID
-        exhibition_period: exhibitionPeriod
-        is_followed: isFollowed
-        cover_image: coverImage {
-          url
-        }
-      }
     }
   `,
 })
diff --git a/src/lib/Scenes/Artwork/Components/ImageCarousel/ImageCarousel.tsx b/src/lib/Scenes/Artwork/Components/ImageCarousel/ImageCarousel.tsx
index 1c3bd0185..1af305ba3 100644
--- a/src/lib/Scenes/Artwork/Components/ImageCarousel/ImageCarousel.tsx
+++ b/src/lib/Scenes/Artwork/Components/ImageCarousel/ImageCarousel.tsx
@@ -4,7 +4,7 @@ import { createGeminiUrl } from "lib/Components/OpaqueImageView/createGeminiUrl"
 import { useScreenDimensions } from "lib/utils/useScreenDimensions"
 import { observer } from "mobx-react"
 import React, { useContext, useMemo } from "react"
-import { Animated } from "react-native"
+import { Animated, PixelRatio } from "react-native"
 import { createFragmentContainer, graphql } from "react-relay"
 import { isPad } from "../../hardware"
 import { ImageCarouselFullScreen } from "./FullScreen/ImageCarouselFullScreen"
@@ -34,7 +34,7 @@ export const ImageCarousel = observer((props: ImageCarouselProps) => {
     () =>
       props.images
         .map(image => {
-          if (!image.height || !image.width || !image.image_url) {
+          if (!image.height || !image.width || !image.url) {
             // something is very wrong
             return null
           }
@@ -43,9 +43,10 @@ export const ImageCarousel = observer((props: ImageCarouselProps) => {
             width,
             height,
             url: createGeminiUrl({
-              imageURL: image.image_url.replace(":version", "normalized"),
-              width,
-              height,
+              imageURL: image.url.replace(":version", "normalized"),
+              // upscale to match screen resolution
+              width: width * PixelRatio.get(),
+              height: height * PixelRatio.get(),
             }),
             deepZoom: image.deepZoom,
           }
@@ -106,7 +107,7 @@ export const PaginationDot = observer(({ diameter, index }: { diameter: number;
 export const ImageCarouselFragmentContainer = createFragmentContainer(ImageCarousel, {
   images: graphql`
     fragment ImageCarousel_images on Image @relay(plural: true) {
-      image_url: imageURL
+      url: imageURL
       width
       height
       deepZoom {
diff --git a/src/lib/Scenes/Artwork/Components/ImageCarousel/ImageCarouselContext.tsx b/src/lib/Scenes/Artwork/Components/ImageCarousel/ImageCarouselContext.tsx
index 234291598..b1c76d9f5 100644
--- a/src/lib/Scenes/Artwork/Components/ImageCarousel/ImageCarouselContext.tsx
+++ b/src/lib/Scenes/Artwork/Components/ImageCarousel/ImageCarouselContext.tsx
@@ -1,25 +1,11 @@
+import { ImageCarousel_images } from "__generated__/ImageCarousel_images.graphql"
 import { Schema } from "lib/utils/track"
 import { observable } from "mobx"
 import React, { useMemo, useRef } from "react"
 import { FlatList, View } from "react-native"
 import { useTracking } from "react-tracking"
 
-export interface ImageDescriptor {
-  url: string
-  width: number
-  height: number
-  deepZoom: {
-    image: {
-      tileSize: number
-      url: string
-      format: string
-      size: {
-        width: number
-        height: number
-      }
-    }
-  }
-}
+export type ImageDescriptor = Pick<ImageCarousel_images[number], "deepZoom" | "height" | "width" | "url">
 
 export type ImageCarouselAction =
   | {
diff --git a/src/lib/Scenes/Artwork/Components/PartnerCard.tsx b/src/lib/Scenes/Artwork/Components/PartnerCard.tsx
index 853e49a8e..a4abc349c 100644
--- a/src/lib/Scenes/Artwork/Components/PartnerCard.tsx
+++ b/src/lib/Scenes/Artwork/Components/PartnerCard.tsx
@@ -150,14 +150,12 @@ export const PartnerCardFragmentContainer = createFragmentContainer(PartnerCard,
         type
         name
         slug
-        internalID
         id
         href
         initials
         profile {
           id
           internalID
-          slug
           is_followed: isFollowed
           icon {
             url(version: "square140")
diff --git a/src/lib/Scenes/Artwork/Components/__tests__/ContextCard-tests.tsx b/src/lib/Scenes/Artwork/Components/__tests__/ContextCard-tests.tsx
index 19d7cf719..c72f35b9c 100644
--- a/src/lib/Scenes/Artwork/Components/__tests__/ContextCard-tests.tsx
+++ b/src/lib/Scenes/Artwork/Components/__tests__/ContextCard-tests.tsx
@@ -211,20 +211,6 @@ const fairContextArtwork = {
       url: "https://d32dm0rphc51dk.cloudfront.net/R5z4lkyH6DyGhEwAg44NSA/wide.jpg",
     },
   },
-  shows: [
-    {
-      id: "U2hvdzphcmR0LWdhbGxlcnktYXJkdC1nYWxsZXJ5LWF0LW1hcmtldC1hcnQtcGx1cy1kZXNpZ24tMjAxOQ==",
-      name: "ARDT Gallery at Market Art + Design 2019",
-      href: "/show/ardt-gallery-ardt-gallery-at-market-art-plus-design-2019",
-      gravityID: "ardt-gallery-ardt-gallery-at-market-art-plus-design-2019",
-      internalID: "5cf574b16378630006d32d96",
-      exhibition_period: "Jul 5 – 7",
-      is_followed: null,
-      cover_image: {
-        url: "https://d32dm0rphc51dk.cloudfront.net/Xe5AEfsGGvtlRILk8PFR_g/tall.jpg",
-      },
-    },
-  ],
   " $refType": null,
   " $fragmentRefs": null,
 }
@@ -241,7 +227,7 @@ const auctionContextArtwork = {
     href: "/auction/christies-prints-and-multiples-6",
     isAuction: true,
     formattedStartDateTime: "Ended Oct 25, 2018",
-    cover_image: {
+    coverImage: {
       url: "https://d32dm0rphc51dk.cloudfront.net/bMu0vqXOVlpABBsWVxVIJA/large_rectangle.jpg",
     },
   },
@@ -257,21 +243,17 @@ const showContextArtwork = {
   internalID: "5b2b745e9c18db204fc32e11",
   context: {
     __typename: "Show",
-  },
-  shows: [
-    {
-      id: "U2hvdzpjYW1hLWdhbGxlcnktMS10aW1lLWxhcHNl",
-      name: "Time Lapse",
-      href: "/show/cama-gallery-1-time-lapse",
-      gravityID: "cama-gallery-1-time-lapse",
-      internalID: "5b335e329c18db4a5a5015cc",
-      exhibition_period: "Jun 22 – Jul 3, 2018",
-      is_followed: null,
-      cover_image: {
-        url: "https://d32dm0rphc51dk.cloudfront.net/MYRUdCdCDdpU9dLTcmDX0A/medium.jpg",
-      },
+    id: "U2hvdzpjYW1hLWdhbGxlcnktMS10aW1lLWxhcHNl",
+    name: "Time Lapse",
+    href: "/show/cama-gallery-1-time-lapse",
+    gravityID: "cama-gallery-1-time-lapse",
+    internalID: "5b335e329c18db4a5a5015cc",
+    exhibition_period: "Jun 22 – Jul 3, 2018",
+    is_followed: null,
+    coverImage: {
+      url: "https://d32dm0rphc51dk.cloudfront.net/MYRUdCdCDdpU9dLTcmDX0A/medium.jpg",
     },
-  ],
+  },
   fair: null,
   " $refType": null,
   " $fragmentRefs": null,
diff --git a/src/lib/Scenes/Collection/Collection.tsx b/src/lib/Scenes/Collection/Collection.tsx
index a01cc6bc9..da5bd7aff 100644
--- a/src/lib/Scenes/Collection/Collection.tsx
+++ b/src/lib/Scenes/Collection/Collection.tsx
@@ -69,13 +69,6 @@ export class Collection extends Component<CollectionProps, CollectionState> {
 export const CollectionContainer = createFragmentContainer(Collection, {
   collection: graphql`
     fragment Collection_collection on MarketingCollection {
-      slug
-      title
-      description
-      headerImage
-      category
-      credit
-
       ...CollectionHeader_collection
     }
   `,
diff --git a/src/lib/Scenes/Collection/Components/CollectionHeader.tsx b/src/lib/Scenes/Collection/Components/CollectionHeader.tsx
index 0cdc6fb50..9b82cd1a2 100644
--- a/src/lib/Scenes/Collection/Components/CollectionHeader.tsx
+++ b/src/lib/Scenes/Collection/Components/CollectionHeader.tsx
@@ -19,12 +19,8 @@ export const CollectionHeader = props => {
 export const CollectionHeaderContainer = createFragmentContainer(CollectionHeader, {
   collection: graphql`
     fragment CollectionHeader_collection on MarketingCollection {
-      slug
       title
       description
-      headerImage
-      category
-      credit
     }
   `,
 })
diff --git a/src/lib/Scenes/Fair/Components/FairBoothPreview/index.tsx b/src/lib/Scenes/Fair/Components/FairBoothPreview/index.tsx
index 47a3c78a3..10521caf2 100644
--- a/src/lib/Scenes/Fair/Components/FairBoothPreview/index.tsx
+++ b/src/lib/Scenes/Fair/Components/FairBoothPreview/index.tsx
@@ -27,14 +27,14 @@ export class FairBoothPreview extends React.Component<Props, State> {
   }
 
   @track((props, _, args) => {
-    const partnerSlug = args[0]
-    const partnerID = args[1]
+    const slug = args[0]
+    const internalID = args[1]
     const {
       show: {
         partner: { profile },
       },
     } = props
-    const isFollowed = profile ? profile.is_followed : null
+    const isFollowed = profile ? profile.isFollowed : null
     if (isFollowed === null) {
       return
     }
@@ -42,23 +42,25 @@ export class FairBoothPreview extends React.Component<Props, State> {
     return {
       action_name: actionName,
       action_type: Schema.ActionTypes.Success,
-      owner_id: partnerID,
-      owner_slug: partnerSlug,
+      owner_id: internalID,
+      owner_slug: slug,
       owner_type: Schema.OwnerEntityTypes.Gallery,
     } as any
   })
-  trackFollowPartner(_partnerSlug, _partnerID) {
+  trackFollowPartner(_slug, _internalID) {
     return null
   }
 
   handleFollowPartner = () => {
     const { show, relay } = this.props
     const {
-      partner: { slug: partnerSlug, internalID: partnerID, id: partnerRelayID, profile },
+      partner: { slug: partnerSlug, internalID: partnerInternalID, id: partnerID, profile },
     } = show
-    const isFollowed = !!profile ? profile.is_followed : null
-    const internalID = !!profile ? profile.internalID : null
-    if (isFollowed === null || !internalID) {
+    if (!profile) {
+      return
+    }
+    const isFollowed = profile.isFollowed
+    if (isFollowed === null) {
       return
     }
     this.setState(
@@ -71,36 +73,38 @@ export class FairBoothPreview extends React.Component<Props, State> {
             this.setState({
               isFollowedChanging: false,
             })
-            this.trackFollowPartner(partnerSlug, partnerID)
+            this.trackFollowPartner(partnerSlug, partnerInternalID)
           },
           mutation: graphql`
             mutation FairBoothPreviewMutation($input: FollowProfileInput!) {
               followProfile(input: $input) {
                 profile {
+                  id
                   slug
                   internalID
-                  is_followed: isFollowed
+                  isFollowed
                 }
               }
             }
           `,
           variables: {
             input: {
-              profileID: internalID,
+              profileID: profile.internalID,
               unfollow: isFollowed,
             },
           },
           optimisticResponse: {
             followProfile: {
               profile: {
-                internalID,
-                slug: partnerSlug,
-                is_followed: !isFollowed,
+                id: profile.id,
+                internalID: profile.internalID,
+                slug: profile.slug,
+                isFollowed: !isFollowed,
               },
             },
           },
           updater: store => {
-            store.get(partnerRelayID).setValue(!isFollowed, "is_followed")
+            store.get(partnerID).setValue(!isFollowed, "isFollowed")
           },
         })
       }
@@ -139,7 +143,7 @@ export class FairBoothPreview extends React.Component<Props, State> {
     const {
       show: {
         artworks,
-        cover_image,
+        coverImage,
         location,
         partner: { name: partnerName, profile },
         counts: { artworks: artworkCount },
@@ -153,9 +157,9 @@ export class FairBoothPreview extends React.Component<Props, State> {
           onFollowPartner={this.handleFollowPartner}
           name={partnerName}
           location={display}
-          isFollowed={profile ? profile.is_followed : null}
+          isFollowed={profile ? profile.isFollowed : null}
           isFollowedChanging={this.state.isFollowedChanging}
-          url={cover_image && cover_image.url}
+          url={coverImage && coverImage.url}
           onViewFairBoothPressed={this.viewFairBoothPressed.bind(this)}
         />
         <Box mt={1}>{<GenericGrid artworks={artworks.edges.map(a => a.node) as any} />}</Box>
@@ -175,8 +179,6 @@ export const FairBoothPreviewContainer = createFragmentContainer(FairBoothPrevie
     fragment FairBoothPreview_show on Show {
       slug
       internalID
-      name
-      is_fair_booth: isFairBooth
       counts {
         artworks
       }
@@ -188,15 +190,14 @@ export const FairBoothPreviewContainer = createFragmentContainer(FairBoothPrevie
           internalID
           id
           profile {
+            id
+            slug
             internalID
-            is_followed: isFollowed
+            isFollowed
           }
         }
       }
-      fair {
-        name
-      }
-      cover_image: coverImage {
+      coverImage {
         url
       }
       location {
diff --git a/src/lib/Scenes/Fair/Components/FairHeader/index.tsx b/src/lib/Scenes/Fair/Components/FairHeader/index.tsx
index bf5cd73a3..b0599edec 100644
--- a/src/lib/Scenes/Fair/Components/FairHeader/index.tsx
+++ b/src/lib/Scenes/Fair/Components/FairHeader/index.tsx
@@ -68,9 +68,9 @@ export class FairHeader extends React.Component<Props, State> {
   }
 
   getContextualDetails() {
-    const { followed_content, artists_names, counts } = this.props.fair
-    const fairfollowedArtistList = (followed_content && followed_content.artists) || []
-    const artistList = artists_names.edges.map(i => i.node).filter(Boolean)
+    const { followedContent, artistsConnection, counts } = this.props.fair
+    const fairfollowedArtistList = (followedContent && followedContent.artists) || []
+    const artistList = artistsConnection.edges.map(i => i.node).filter(Boolean)
     const uniqArtistList = uniq(fairfollowedArtistList.concat(artistList))
 
     return (
@@ -119,7 +119,7 @@ export class FairHeader extends React.Component<Props, State> {
 
   render() {
     const {
-      fair: { image, name, profile, start_at, end_at, exhibition_period, formattedOpeningHours },
+      fair: { image, name, profile, startAt, endAt, exhibitionPeriod, formattedOpeningHours },
     } = this.props
     const { width: screenWidth } = Dimensions.get("window")
     const imageHeight = 567
@@ -135,17 +135,17 @@ export class FairHeader extends React.Component<Props, State> {
               <Sans size="3t" weight="medium" textAlign="center" color="white100">
                 {name}
               </Sans>
-              {!!exhibition_period && (
+              {!!exhibitionPeriod && (
                 <Sans size="3" textAlign="center" color="white100">
-                  {exhibition_period}
+                  {exhibitionPeriod}
                 </Sans>
               )}
             </Flex>
           </Flex>
-          {!!start_at &&
-            !!end_at && (
+          {!!startAt &&
+            !!endAt && (
               <CountdownContainer>
-                <CountdownTimer startAt={start_at} endAt={end_at} formattedOpeningHours={formattedOpeningHours} />
+                <CountdownTimer startAt={startAt} endAt={endAt} formattedOpeningHours={formattedOpeningHours} />
               </CountdownContainer>
             )}
         </Box>
@@ -162,42 +162,30 @@ export const FairHeaderContainer = createFragmentContainer(FairHeader, {
   fair: graphql`
     fragment FairHeader_fair on Fair {
       slug
-      internalID
       name
       formattedOpeningHours
+      startAt
+      endAt
+      exhibitionPeriod
+
       counts {
         artists
-        partners
       }
-      followed_content: followedContent {
+
+      image {
+        url
+      }
+
+      followedContent {
         artists {
           name
           href
           slug
           internalID
         }
-        galleries {
-          internalID
-          name
-        }
-      }
-      partner_names: showsConnection(first: 2) {
-        edges {
-          node {
-            slug
-            partner {
-              ... on Partner {
-                profile {
-                  name
-                  slug
-                  internalID
-                }
-              }
-            }
-          }
-        }
       }
-      artists_names: artistsConnection(first: 3) {
+
+      artistsConnection(first: 3) {
         edges {
           node {
             name
@@ -207,27 +195,13 @@ export const FairHeaderContainer = createFragmentContainer(FairHeader, {
           }
         }
       }
-      image {
-        image_url: imageURL
-        aspect_ratio: aspectRatio
-        url
-      }
+
       profile {
+        id
         icon {
-          internalID
-          href
-          height
-          width
           url(version: "square140")
         }
-        id
-        slug
-        name
-        is_followed: isFollowed
       }
-      start_at: startAt
-      end_at: endAt
-      exhibition_period: exhibitionPeriod
     }
   `,
 })
diff --git a/src/lib/Scenes/Fair/Fair.tsx b/src/lib/Scenes/Fair/Fair.tsx
index 1cf83b4f8..21252fe1d 100644
--- a/src/lib/Scenes/Fair/Fair.tsx
+++ b/src/lib/Scenes/Fair/Fair.tsx
@@ -24,13 +24,7 @@ export const FairContainer = createFragmentContainer(Fair, {
   fair: graphql`
     fragment Fair_fair on Fair {
       id
-      slug
       ...FairDetail_fair
-      organizer {
-        website
-      }
-      about
-      ticketsLink
     }
   `,
 })
diff --git a/src/lib/Scenes/Fair/Screens/FairArtists.tsx b/src/lib/Scenes/Fair/Screens/FairArtists.tsx
index ea67cf7ce..0fdea353a 100644
--- a/src/lib/Scenes/Fair/Screens/FairArtists.tsx
+++ b/src/lib/Scenes/Fair/Screens/FairArtists.tsx
@@ -55,7 +55,7 @@ export class FairArtists extends React.Component<Props, State> {
   }
 
   groupArtists = artists => {
-    const artistsNamePairs = toPairs(groupBy(artists, ({ sortable_id }) => sortable_id.charAt(0)))
+    const artistsNamePairs = toPairs(groupBy(artists, ({ sortableID }) => sortableID.charAt(0)))
     // artists should be sorted, but re-sort to make sure we display in A-Z
     const groupedArtists: any = sortBy(
       map(artistsNamePairs, ([letter, artistsForLetter], index) => ({
@@ -103,13 +103,9 @@ export const FairArtistsContainer = createPaginationContainer(
             endCursor
           }
           edges {
-            cursor
             node {
               ...ArtistListItem_artist
-              sortable_id: sortableID
-              href
-              internalID
-              slug
+              sortableID
             }
           }
         }
diff --git a/src/lib/Scenes/Fair/Screens/FairBooth.tsx b/src/lib/Scenes/Fair/Screens/FairBooth.tsx
index 0229ecd86..dab1f7425 100644
--- a/src/lib/Scenes/Fair/Screens/FairBooth.tsx
+++ b/src/lib/Scenes/Fair/Screens/FairBooth.tsx
@@ -13,8 +13,18 @@ import { defaultEnvironment } from "lib/relay/createEnvironment"
 import renderWithLoadProgress from "lib/utils/renderWithLoadProgress"
 import { FairBoothHeaderContainer as FairBoothHeader } from "../Components/FairBoothHeader"
 
+type Item =
+  | {
+      type: "artworks"
+      data: { show: FairBooth_show; onViewAllArtworksPressed: () => void }
+    }
+  | {
+      type: "artists"
+      data: { show: FairBooth_show; onViewAllArtistsPressed: () => void }
+    }
+
 interface State {
-  sections: Array<{ type: "artworks" | "artists"; data: object }>
+  sections: Item[]
 }
 
 interface Props {
@@ -62,12 +72,12 @@ export class FairBooth extends React.Component<Props, State> {
     this.setState({ sections })
   }
 
-  renderItem = ({ item: { data, type } }) => {
-    switch (type) {
+  renderItem = ({ item }: { item: Item }) => {
+    switch (item.type) {
       case "artworks":
-        return <ShowArtworksPreview {...data} />
+        return <ShowArtworksPreview {...item.data} />
       case "artists":
-        return <ShowArtistsPreview {...data} />
+        return <ShowArtistsPreview {...item.data} />
       default:
         return null
     }
@@ -113,8 +123,6 @@ export const FairBoothContainer = createFragmentContainer(FairBooth, {
       ...FairBoothHeader_show
       ...ShowArtworksPreview_show
       ...ShowArtistsPreview_show
-      ...ShowArtists_show
-      ...ShowArtworks_show
     }
   `,
 })
diff --git a/src/lib/Scenes/Fair/Screens/FairDetail.tsx b/src/lib/Scenes/Fair/Screens/FairDetail.tsx
index 32cb59879..41d91aa6d 100644
--- a/src/lib/Scenes/Fair/Screens/FairDetail.tsx
+++ b/src/lib/Scenes/Fair/Screens/FairDetail.tsx
@@ -276,14 +276,12 @@ export const FairDetailContainer = createPaginationContainer(
         organizer {
           website
         }
-        about
-        ticketsLink
         profile {
           name
         }
         sponsoredContent {
-          activationText
           pressReleaseUrl
+          activationText
         }
         shows: showsConnection(first: $count, after: $cursor) @connection(key: "Fair_shows") {
           pageInfo {
@@ -294,8 +292,6 @@ export const FairDetailContainer = createPaginationContainer(
           edges {
             cursor
             node {
-              slug
-              internalID
               artworks: artworksConnection(first: 4) {
                 edges {
                   node {
diff --git a/src/lib/Scenes/Fair/Screens/FairExhibitors.tsx b/src/lib/Scenes/Fair/Screens/FairExhibitors.tsx
index 05f54b3e5..cebe7b8b7 100644
--- a/src/lib/Scenes/Fair/Screens/FairExhibitors.tsx
+++ b/src/lib/Scenes/Fair/Screens/FairExhibitors.tsx
@@ -40,7 +40,7 @@ export class FairExhibitors extends React.Component<Props, State> {
       return
     }
     const sections = [] as any
-    const exhibitorsGroupedByName = fair.exhibitors_grouped_by_name || []
+    const exhibitorsGroupedByName = fair.exhibitorsGroupedByName || []
     exhibitorsGroupedByName.forEach(group => {
       sections.push({
         title: group.letter,
@@ -71,13 +71,13 @@ export class FairExhibitors extends React.Component<Props, State> {
   renderExhibitor(data) {
     const { item, index, section } = data
     const { count } = section
-    const { name, profile_id, id, partner_id } = item
+    const { name, profileID, slug, partnerID } = item
     const generatedKey = count - index
     return (
       <Box mb={2} key={generatedKey}>
         <TouchableOpacity
           onPress={() => {
-            this.handleOnPressName(profile_id, id, partner_id)
+            this.handleOnPressName(profileID, slug, partnerID)
           }}
         >
           <Serif size="3">{name}</Serif>
@@ -130,13 +130,13 @@ const FairExhibitorsFragmentContainer = createFragmentContainer(FairExhibitors,
     fragment FairExhibitors_fair on Fair {
       slug
       internalID
-      exhibitors_grouped_by_name: exhibitorsGroupedByName {
+      exhibitorsGroupedByName {
         letter
         exhibitors {
           name
           slug
-          profile_id: profileID
-          partner_id: partnerID
+          profileID
+          partnerID
         }
       }
     }
diff --git a/src/lib/Scenes/Favorites/Components/Artists/index.tsx b/src/lib/Scenes/Favorites/Components/Artists/index.tsx
index bf1758490..1fd084e00 100644
--- a/src/lib/Scenes/Favorites/Components/Artists/index.tsx
+++ b/src/lib/Scenes/Favorites/Components/Artists/index.tsx
@@ -15,6 +15,8 @@ interface Props {
   relay: RelayPaginationProp
 }
 
+type ArtistDetails = Artists_me["followsAndSaves"]["artists"]["edges"][number]["node"]["artist"]
+
 interface State {
   fetchingMoreData: boolean
   refreshingFromPull: boolean
@@ -54,7 +56,7 @@ class Artists extends React.Component<Props, State> {
 
   // @TODO: Implement test on this component https://artsyproduct.atlassian.net/browse/LD-563
   render() {
-    const rows: any[] = this.props.me.followsAndSaves.artists.edges.map(e => e.node.artist)
+    const rows: ArtistDetails[] = this.props.me.followsAndSaves.artists.edges.map(e => e.node.artist)
 
     if (rows.length === 0) {
       return (
@@ -66,10 +68,16 @@ class Artists extends React.Component<Props, State> {
     }
 
     return (
-      <FlatList
+      <FlatList<ArtistDetails>
         data={rows}
         keyExtractor={({ id }) => id}
-        renderItem={item => <SavedItemRow {...item.item} />}
+        renderItem={({
+          item: {
+            href,
+            image: { url },
+            name,
+          },
+        }) => <SavedItemRow href={href} image={{ url }} name={name} />}
         onEndReached={this.loadMore}
         onEndReachedThreshold={0.2}
         refreshControl={<RefreshControl refreshing={this.state.refreshingFromPull} onRefresh={this.handleRefresh} />}
@@ -89,14 +97,9 @@ export default createPaginationContainer(
         @argumentDefinitions(count: { type: "Int", defaultValue: 10 }, cursor: { type: "String" }) {
         followsAndSaves {
           artists: artistsConnection(first: $count, after: $cursor) @connection(key: "Artists_artists") {
-            pageInfo {
-              endCursor
-              hasNextPage
-            }
             edges {
               node {
                 artist {
-                  slug
                   id
                   name
                   href
diff --git a/src/lib/Scenes/Favorites/Components/Categories/index.tsx b/src/lib/Scenes/Favorites/Components/Categories/index.tsx
index 97c3a1ce7..705ae4741 100644
--- a/src/lib/Scenes/Favorites/Components/Categories/index.tsx
+++ b/src/lib/Scenes/Favorites/Components/Categories/index.tsx
@@ -95,7 +95,6 @@ export default createPaginationContainer(
             edges {
               node {
                 gene {
-                  slug
                   id
                   name
                   href
diff --git a/src/lib/Scenes/Favorites/Components/Fairs/index.tsx b/src/lib/Scenes/Favorites/Components/Fairs/index.tsx
index 43fc2b83c..8603a03ae 100644
--- a/src/lib/Scenes/Favorites/Components/Fairs/index.tsx
+++ b/src/lib/Scenes/Favorites/Components/Fairs/index.tsx
@@ -105,8 +105,6 @@ export default createPaginationContainer(
                 image {
                   url
                 }
-                start_at: startAt
-                end_at: endAt
               }
             }
           }
diff --git a/src/lib/Scenes/Home/Components/ForYou/Components/FairsRail.tsx b/src/lib/Scenes/Home/Components/ForYou/Components/FairsRail.tsx
index 4b1250eb5..2c4d38763 100644
--- a/src/lib/Scenes/Home/Components/ForYou/Components/FairsRail.tsx
+++ b/src/lib/Scenes/Home/Components/ForYou/Components/FairsRail.tsx
@@ -10,27 +10,6 @@ import SectionTitle from "lib/Scenes/Home/Components/SectionTitle"
 
 import { FairsRail_fairs_module } from "__generated__/FairsRail_fairs_module.graphql"
 
-const Container = styled.View`
-  margin-bottom: 15;
-`
-
-const Title = styled(SectionTitle)`
-  margin-left: 20;
-`
-
-const IconCarousel = styled.ScrollView`
-  flex-direction: row;
-  overflow: visible;
-  margin-top: 10;
-  margin-left: 16;
-  margin-right: 16;
-`
-
-const TouchableWrapper = styled.View`
-  margin-left: 4;
-  margin-right: 4;
-`
-
 interface Props {
   fairs_module: FairsRail_fairs_module
 }
@@ -64,7 +43,7 @@ export class FairsRail extends Component<Props, null> {
       return (
         <TouchableHighlight style={circleIconStyle} onPress={selectionHandler} key={fair.id}>
           <TouchableWrapper>
-            <ImageView style={circleIconStyle} imageURL={fair.mobile_image.url} placeholderBackgroundColor="white" />
+            <ImageView style={circleIconStyle} imageURL={fair.mobileImage.url} placeholderBackgroundColor="white" />
           </TouchableWrapper>
         </TouchableHighlight>
       )
@@ -95,15 +74,34 @@ export default createFragmentContainer(FairsRail, {
       results {
         id
         slug
-        name
         profile {
           slug
         }
-        mobile_image: mobileImage {
-          internalID
+        mobileImage {
           url
         }
       }
     }
   `,
 })
+
+const Container = styled.View`
+  margin-bottom: 15;
+`
+
+const Title = styled(SectionTitle)`
+  margin-left: 20;
+`
+
+const IconCarousel = styled.ScrollView`
+  flex-direction: row;
+  overflow: visible;
+  margin-top: 10;
+  margin-left: 16;
+  margin-right: 16;
+`
+
+const TouchableWrapper = styled.View`
+  margin-left: 4;
+  margin-right: 4;
+`
diff --git a/src/lib/Scenes/Home/Components/ForYou/Components/__tests__/FairsRail-tests.tsx b/src/lib/Scenes/Home/Components/ForYou/Components/__tests__/FairsRail-tests.tsx
index 2af36acd7..437d9601b 100644
--- a/src/lib/Scenes/Home/Components/ForYou/Components/__tests__/FairsRail-tests.tsx
+++ b/src/lib/Scenes/Home/Components/ForYou/Components/__tests__/FairsRail-tests.tsx
@@ -11,13 +11,13 @@ const fairsModule = {
     {
       id: "the-fair",
       name: "The Fair",
-      mobile_image: { id: "image", url: "https://neopets.jpg" },
+      mobileImage: { id: "image", url: "https://neopets.jpg" },
       profile: { href: "https://neopets.com" },
     },
     {
       id: "the-profileless-fair",
       name: "The Profileless Fair: You Should Not See Me in Snapshots",
-      mobile_image: { id: "image", url: "https://neopets.jpg" },
+      mobileImage: { id: "image", url: "https://neopets.jpg" },
       profile: null,
     },
   ],
diff --git a/src/lib/Scenes/Home/Components/Sales/Components/SaleListItem.tsx b/src/lib/Scenes/Home/Components/Sales/Components/SaleListItem.tsx
index d27ed3b1a..18bdb890f 100644
--- a/src/lib/Scenes/Home/Components/Sales/Components/SaleListItem.tsx
+++ b/src/lib/Scenes/Home/Components/Sales/Components/SaleListItem.tsx
@@ -79,16 +79,16 @@ interface Props {
 export class SaleListItem extends React.Component<Props> {
   handleTap = () => {
     const {
-      sale: { live_url_if_open, href },
+      sale: { liveURLIfOpen, href },
     } = this.props
-    const url = (live_url_if_open || href) as string
+    const url = (liveURLIfOpen || href) as string
     Switchboard.presentNavigationViewController(this, url)
   }
 
   render() {
-    const item = this.props.sale
-    const image = item.cover_image
-    const timestamp = item.display_timely_at.toUpperCase()
+    const sale = this.props.sale
+    const image = sale.coverImage
+    const timestamp = sale.displayTimelyAt.toUpperCase()
     const containerWidth = this.props.containerWidth
 
     const Container = styled.View`
@@ -103,8 +103,8 @@ export class SaleListItem extends React.Component<Props> {
           <Image imageURL={image && image.url} />
           <Content>
             <Header>
-              <Title numberOfLines={2}>{item.name}</Title>
-              {item.live_start_at && (
+              <Title numberOfLines={2}>{sale.name}</Title>
+              {sale.liveStartAt && (
                 <Badge>
                   <BadgeText>LIVE</BadgeText>
                 </Badge>
@@ -123,20 +123,13 @@ export class SaleListItem extends React.Component<Props> {
 export default createFragmentContainer(SaleListItem, {
   sale: graphql`
     fragment SaleListItem_sale on Sale {
-      slug
       name
       href
-      is_open: isOpen
-      is_live_open: isLiveOpen
-      live_url_if_open: liveURLIfOpen
-      start_at: startAt
-      end_at: endAt
-      registration_ends_at: registrationEndsAt
-      live_start_at: liveStartAt
-      display_timely_at: displayTimelyAt
-      cover_image: coverImage {
+      liveURLIfOpen
+      liveStartAt
+      displayTimelyAt
+      coverImage {
         url(version: "large")
-        aspect_ratio: aspectRatio
       }
     }
   `,
diff --git a/src/lib/Scenes/Home/Components/Sales/Components/__tests__/SaleListItem-tests.tsx b/src/lib/Scenes/Home/Components/Sales/Components/__tests__/SaleListItem-tests.tsx
index fc5472aef..a106388e9 100644
--- a/src/lib/Scenes/Home/Components/Sales/Components/__tests__/SaleListItem-tests.tsx
+++ b/src/lib/Scenes/Home/Components/Sales/Components/__tests__/SaleListItem-tests.tsx
@@ -33,7 +33,7 @@ const props = {
     .add(5, "hour")
     .toISOString(),
   live_url_if_open: null,
-  display_timely_at: "Live in 2 hours",
+  displayTimelyAt: "Live in 2 hours",
   cover_image: {
     url: "https://d32dm0rphc51dk.cloudfront.net/eeqLfwMMAYA8XOmeYEb7Rg/source.jpg",
   },
diff --git a/src/lib/Scenes/Home/Components/Sales/Components/__tests__/__snapshots__/SaleListItem-tests.tsx.snap b/src/lib/Scenes/Home/Components/Sales/Components/__tests__/__snapshots__/SaleListItem-tests.tsx.snap
index f3710247c..bf26a4b1e 100644
--- a/src/lib/Scenes/Home/Components/Sales/Components/__tests__/__snapshots__/SaleListItem-tests.tsx.snap
+++ b/src/lib/Scenes/Home/Components/Sales/Components/__tests__/__snapshots__/SaleListItem-tests.tsx.snap
@@ -23,7 +23,6 @@ exports[`renders correctly 1`] = `
   }
 >
   <AROpaqueImageView
-    imageURL="https://d32dm0rphc51dk.cloudfront.net/eeqLfwMMAYA8XOmeYEb7Rg/source.jpg"
     style={
       Array [
         Object {
@@ -92,36 +91,6 @@ exports[`renders correctly 1`] = `
       >
         Freeman's: Modern & Contemporary Works of Art
       </Text>
-      <View
-        style={
-          Array [
-            Object {
-              "backgroundColor": "white",
-              "borderRadius": 2,
-              "marginLeft": 3,
-              "paddingBottom": 1,
-              "paddingLeft": 4,
-              "paddingRight": 4,
-              "paddingTop": 1,
-            },
-          ]
-        }
-      >
-        <Text
-          style={
-            Array [
-              Object {
-                "alignSelf": "center",
-                "fontFamily": "AvantGardeGothicITC",
-                "fontSize": 7,
-                "letterSpacing": 1.5,
-              },
-            ]
-          }
-        >
-          LIVE
-        </Text>
-      </View>
     </View>
     <View
       style={
diff --git a/src/lib/Scenes/Home/Components/Sales/__tests__/__snapshots__/index-tests.tsx.snap b/src/lib/Scenes/Home/Components/Sales/__tests__/__snapshots__/index-tests.tsx.snap
index 87ce540a9..d2a3163b2 100644
--- a/src/lib/Scenes/Home/Components/Sales/__tests__/__snapshots__/index-tests.tsx.snap
+++ b/src/lib/Scenes/Home/Components/Sales/__tests__/__snapshots__/index-tests.tsx.snap
@@ -20,7 +20,7 @@ exports[`looks correct when rendered 1`] = `
                 "cover_image": Object {
                   "url": "https://d32dm0rphc51dk.cloudfront.net/WV-7BYlETayN8MGkNjOGXw/source.jpg",
                 },
-                "display_timely_at": "In Progress",
+                "displayTimelyAt": "In Progress",
                 "end_at": null,
                 "href": "/auction/wright-noma",
                 "id": "wright-noma",
@@ -35,7 +35,7 @@ exports[`looks correct when rendered 1`] = `
                 "cover_image": Object {
                   "url": "https://d32dm0rphc51dk.cloudfront.net/eeqLfwMMAYA8XOmeYEb7Rg/source.jpg",
                 },
-                "display_timely_at": "In Progress",
+                "displayTimelyAt": "In Progress",
                 "end_at": null,
                 "href": "/auction/freemans-modern-and-contemporary-works-of-art",
                 "id": "freemans-modern-and-contemporary-works-of-art",
@@ -85,7 +85,7 @@ exports[`looks correct when rendered 1`] = `
                       "cover_image": Object {
                         "url": "https://d32dm0rphc51dk.cloudfront.net/WV-7BYlETayN8MGkNjOGXw/source.jpg",
                       },
-                      "display_timely_at": "In Progress",
+                      "displayTimelyAt": "In Progress",
                       "end_at": null,
                       "href": "/auction/wright-noma",
                       "id": "wright-noma",
@@ -102,7 +102,7 @@ exports[`looks correct when rendered 1`] = `
                       "cover_image": Object {
                         "url": "https://d32dm0rphc51dk.cloudfront.net/eeqLfwMMAYA8XOmeYEb7Rg/source.jpg",
                       },
-                      "display_timely_at": "In Progress",
+                      "displayTimelyAt": "In Progress",
                       "end_at": null,
                       "href": "/auction/freemans-modern-and-contemporary-works-of-art",
                       "id": "freemans-modern-and-contemporary-works-of-art",
@@ -156,7 +156,7 @@ exports[`looks correct when rendered 1`] = `
                 "cover_image": Object {
                   "url": "https://d32dm0rphc51dk.cloudfront.net/WV-7BYlETayN8MGkNjOGXw/source.jpg",
                 },
-                "display_timely_at": "In Progress",
+                "displayTimelyAt": "In Progress",
                 "end_at": null,
                 "href": "/auction/wright-noma",
                 "id": "wright-noma",
@@ -171,7 +171,7 @@ exports[`looks correct when rendered 1`] = `
                 "cover_image": Object {
                   "url": "https://d32dm0rphc51dk.cloudfront.net/eeqLfwMMAYA8XOmeYEb7Rg/source.jpg",
                 },
-                "display_timely_at": "In Progress",
+                "displayTimelyAt": "In Progress",
                 "end_at": null,
                 "href": "/auction/freemans-modern-and-contemporary-works-of-art",
                 "id": "freemans-modern-and-contemporary-works-of-art",
@@ -221,7 +221,7 @@ exports[`looks correct when rendered 1`] = `
                       "cover_image": Object {
                         "url": "https://d32dm0rphc51dk.cloudfront.net/WV-7BYlETayN8MGkNjOGXw/source.jpg",
                       },
-                      "display_timely_at": "In Progress",
+                      "displayTimelyAt": "In Progress",
                       "end_at": null,
                       "href": "/auction/wright-noma",
                       "id": "wright-noma",
@@ -238,7 +238,7 @@ exports[`looks correct when rendered 1`] = `
                       "cover_image": Object {
                         "url": "https://d32dm0rphc51dk.cloudfront.net/eeqLfwMMAYA8XOmeYEb7Rg/source.jpg",
                       },
-                      "display_timely_at": "In Progress",
+                      "displayTimelyAt": "In Progress",
                       "end_at": null,
                       "href": "/auction/freemans-modern-and-contemporary-works-of-art",
                       "id": "freemans-modern-and-contemporary-works-of-art",
@@ -325,7 +325,7 @@ exports[`looks correct when rendered 1`] = `
                 "cover_image": Object {
                   "url": "https://d32dm0rphc51dk.cloudfront.net/WV-7BYlETayN8MGkNjOGXw/source.jpg",
                 },
-                "display_timely_at": "In Progress",
+                "displayTimelyAt": "In Progress",
                 "end_at": null,
                 "href": "/auction/wright-noma",
                 "id": "wright-noma",
@@ -340,7 +340,7 @@ exports[`looks correct when rendered 1`] = `
                 "cover_image": Object {
                   "url": "https://d32dm0rphc51dk.cloudfront.net/eeqLfwMMAYA8XOmeYEb7Rg/source.jpg",
                 },
-                "display_timely_at": "In Progress",
+                "displayTimelyAt": "In Progress",
                 "end_at": null,
                 "href": "/auction/freemans-modern-and-contemporary-works-of-art",
                 "id": "freemans-modern-and-contemporary-works-of-art",
@@ -409,7 +409,6 @@ exports[`looks correct when rendered 1`] = `
                 }
               >
                 <AROpaqueImageView
-                  imageURL="https://d32dm0rphc51dk.cloudfront.net/WV-7BYlETayN8MGkNjOGXw/source.jpg"
                   style={
                     Array [
                       Object {
@@ -478,36 +477,6 @@ exports[`looks correct when rendered 1`] = `
                     >
                       Wright: noma
                     </Text>
-                    <View
-                      style={
-                        Array [
-                          Object {
-                            "backgroundColor": "white",
-                            "borderRadius": 2,
-                            "marginLeft": 3,
-                            "paddingBottom": 1,
-                            "paddingLeft": 4,
-                            "paddingRight": 4,
-                            "paddingTop": 1,
-                          },
-                        ]
-                      }
-                    >
-                      <Text
-                        style={
-                          Array [
-                            Object {
-                              "alignSelf": "center",
-                              "fontFamily": "AvantGardeGothicITC",
-                              "fontSize": 7,
-                              "letterSpacing": 1.5,
-                            },
-                          ]
-                        }
-                      >
-                        LIVE
-                      </Text>
-                    </View>
                   </View>
                   <View
                     style={
@@ -566,7 +535,6 @@ exports[`looks correct when rendered 1`] = `
                 }
               >
                 <AROpaqueImageView
-                  imageURL="https://d32dm0rphc51dk.cloudfront.net/eeqLfwMMAYA8XOmeYEb7Rg/source.jpg"
                   style={
                     Array [
                       Object {
@@ -635,36 +603,6 @@ exports[`looks correct when rendered 1`] = `
                     >
                       Freeman's: Modern & Contemporary Works of Art
                     </Text>
-                    <View
-                      style={
-                        Array [
-                          Object {
-                            "backgroundColor": "white",
-                            "borderRadius": 2,
-                            "marginLeft": 3,
-                            "paddingBottom": 1,
-                            "paddingLeft": 4,
-                            "paddingRight": 4,
-                            "paddingTop": 1,
-                          },
-                        ]
-                      }
-                    >
-                      <Text
-                        style={
-                          Array [
-                            Object {
-                              "alignSelf": "center",
-                              "fontFamily": "AvantGardeGothicITC",
-                              "fontSize": 7,
-                              "letterSpacing": 1.5,
-                            },
-                          ]
-                        }
-                      >
-                        LIVE
-                      </Text>
-                    </View>
                   </View>
                   <View
                     style={
@@ -752,7 +690,7 @@ exports[`looks correct when rendered 1`] = `
                     "cover_image": Object {
                       "url": "https://d32dm0rphc51dk.cloudfront.net/WV-7BYlETayN8MGkNjOGXw/source.jpg",
                     },
-                    "display_timely_at": "In Progress",
+                    "displayTimelyAt": "In Progress",
                     "end_at": null,
                     "href": "/auction/wright-noma",
                     "id": "wright-noma",
@@ -769,7 +707,7 @@ exports[`looks correct when rendered 1`] = `
                     "cover_image": Object {
                       "url": "https://d32dm0rphc51dk.cloudfront.net/eeqLfwMMAYA8XOmeYEb7Rg/source.jpg",
                     },
-                    "display_timely_at": "In Progress",
+                    "displayTimelyAt": "In Progress",
                     "end_at": null,
                     "href": "/auction/freemans-modern-and-contemporary-works-of-art",
                     "id": "freemans-modern-and-contemporary-works-of-art",
diff --git a/src/lib/Scenes/Home/Components/Sales/__tests__/index-tests.tsx b/src/lib/Scenes/Home/Components/Sales/__tests__/index-tests.tsx
index 529c5f2f9..f390949a7 100644
--- a/src/lib/Scenes/Home/Components/Sales/__tests__/index-tests.tsx
+++ b/src/lib/Scenes/Home/Components/Sales/__tests__/index-tests.tsx
@@ -42,7 +42,7 @@ const props = {
             end_at: null,
             registration_ends_at: "2017-11-01T13:00:00+00:00",
             live_start_at: "2017-11-02T13:00:00+00:00",
-            display_timely_at: "In Progress",
+            displayTimelyAt: "In Progress",
             cover_image: {
               url: "https://d32dm0rphc51dk.cloudfront.net/WV-7BYlETayN8MGkNjOGXw/source.jpg",
             },
@@ -59,7 +59,7 @@ const props = {
             end_at: null,
             registration_ends_at: "2017-11-01T17:00:00+00:00",
             live_start_at: "2017-11-02T17:00:00+00:00",
-            display_timely_at: "In Progress",
+            displayTimelyAt: "In Progress",
             cover_image: {
               url: "https://d32dm0rphc51dk.cloudfront.net/eeqLfwMMAYA8XOmeYEb7Rg/source.jpg",
             },
diff --git a/src/lib/Scenes/Home/Components/Sales/index.tsx b/src/lib/Scenes/Home/Components/Sales/index.tsx
index eceb43b47..e1307b03e 100644
--- a/src/lib/Scenes/Home/Components/Sales/index.tsx
+++ b/src/lib/Scenes/Home/Components/Sales/index.tsx
@@ -95,7 +95,6 @@ export default createRefetchContainer(
           edges {
             node {
               ...SaleListItem_sale
-              href
               live_start_at: liveStartAt
             }
           }
diff --git a/src/lib/Scenes/Map/GlobalMap.tsx b/src/lib/Scenes/Map/GlobalMap.tsx
index a4570ee86..c475ab527 100644
--- a/src/lib/Scenes/Map/GlobalMap.tsx
+++ b/src/lib/Scenes/Map/GlobalMap.tsx
@@ -786,7 +786,10 @@ const SelectedCluster = styled(Flex)`
   align-items: center;
 `
 
-// FIXME: This should not take the Query type but just City.
+// FIXME:
+// * This should not take the Query type but just City.
+// * Use fragments to reduce the size of this fragment.
+// * Test if there are unnused field selections.
 //
 // NOTE: Not renamed the prop from `viewer` becuase there's too much indirection in how the city data is used and it's
 //       too easy to miss a place that needs to be updated. This should be cleaned up when the above FIXME is addressed.
diff --git a/src/lib/Scenes/Show/Components/ShowHeader/ShowHeader.tsx b/src/lib/Scenes/Show/Components/ShowHeader/ShowHeader.tsx
index 629e811a0..81b2452b1 100644
--- a/src/lib/Scenes/Show/Components/ShowHeader/ShowHeader.tsx
+++ b/src/lib/Scenes/Show/Components/ShowHeader/ShowHeader.tsx
@@ -202,11 +202,9 @@ export const ShowHeaderContainer = createFragmentContainer(ShowHeader, {
       internalID
       id
       name
-      press_release: pressRelease
       is_followed: isFollowed
       end_at: endAt
       exhibition_period: exhibitionPeriod
-      status
       isStubShow
       partner {
         ... on Partner {
diff --git a/src/lib/Scenes/Show/Components/Shows/Components/ShowItem.tsx b/src/lib/Scenes/Show/Components/Shows/Components/ShowItem.tsx
index 6dc121d5b..bfa703c11 100644
--- a/src/lib/Scenes/Show/Components/Shows/Components/ShowItem.tsx
+++ b/src/lib/Scenes/Show/Components/Shows/Components/ShowItem.tsx
@@ -86,7 +86,6 @@ export const ShowItemContainer = createFragmentContainer(ShowItem, {
       end_at: endAt
       images {
         url
-        aspect_ratio: aspectRatio
       }
       partner {
         ... on Partner {
diff --git a/src/lib/Scenes/Show/Screens/Detail.tsx b/src/lib/Scenes/Show/Screens/Detail.tsx
index bb248b477..44e81de71 100644
--- a/src/lib/Scenes/Show/Screens/Detail.tsx
+++ b/src/lib/Scenes/Show/Screens/Detail.tsx
@@ -89,7 +89,7 @@ export class Detail extends React.Component<Props, State> {
     }
 
     const hasArtsyArtists = show.counts && show.counts.artists
-    const hasStubbedArtists = show.artists_without_artworks.length > 0
+    const hasStubbedArtists = show.artistsWithoutArtworks.length > 0
     if (hasStubbedArtists || hasArtsyArtists) {
       sections.push({
         type: "artists",
@@ -197,13 +197,7 @@ export const DetailContainer = createFragmentContainer(Detail, {
     fragment Detail_show on Show {
       internalID
       slug
-      name
       description
-      city
-      isStubShow
-      images {
-        internalID
-      }
       ...ShowHeader_show
       ...ShowArtworksPreview_show
       ...ShowArtistsPreview_show
@@ -225,14 +219,13 @@ export const DetailContainer = createFragmentContainer(Detail, {
       # These artists don't show up in artists count alas
       # and so we need to request them back here to verify if we
       # should show the artists section at all
-      artists_without_artworks: artistsWithoutArtworks {
+      artistsWithoutArtworks {
         slug
       }
       counts {
         artworks
         artists
       }
-      status
       partner {
         ... on Partner {
           name
diff --git a/src/lib/Scenes/Show/Screens/MoreInfo.tsx b/src/lib/Scenes/Show/Screens/MoreInfo.tsx
index 47599f850..1aa060dfb 100644
--- a/src/lib/Scenes/Show/Screens/MoreInfo.tsx
+++ b/src/lib/Scenes/Show/Screens/MoreInfo.tsx
@@ -21,11 +21,30 @@ interface Props extends ViewProperties {
   show: MoreInfo_show
 }
 
+type Section =
+  | {
+      type: "event"
+      data: { event: MoreInfo_show["events"][number] }
+    }
+  | {
+      type: "pressRelease"
+      data: MoreInfo_show
+    }
+  | {
+      type: "galleryWebsite"
+      data: MoreInfo_show
+    }
+  | {
+      type: "pressReleaseUrl"
+      data: MoreInfo_show
+    }
+  | {
+      type: "receptionText"
+      data: string
+    }
+
 interface State {
-  sections: Array<{
-    type: "event" | "pressRelease" | "galleryWebsite" | "pressReleaseUrl" | "receptionText"
-    data: any
-  }>
+  sections: Section[]
 }
 @screenTrack<Props>(props => ({
   context_screen: Schema.PageNames.AboutTheShowPage,
@@ -41,7 +60,7 @@ export class MoreInfo extends React.Component<Props, State> {
   componentDidMount() {
     const { show } = this.props
 
-    const sections = []
+    const sections: Section[] = []
 
     show.events.forEach(event => {
       sections.push({
@@ -102,13 +121,13 @@ export class MoreInfo extends React.Component<Props, State> {
     SwitchBoard.presentNavigationViewController(this, this.props.show.pressReleaseUrl)
   }
 
-  renderItem = ({ item: { data, type } }) => {
-    switch (type) {
+  renderItem = ({ item }: { item: Section }) => {
+    switch (item.type) {
       case "galleryWebsite":
         return (
           <CaretButton
-            onPress={() => this.renderGalleryWebsite(data.partner.website)}
-            text={data.partner.type === "Gallery" ? "Visit gallery site" : "Visit institution site"}
+            onPress={() => this.renderGalleryWebsite(item.data.partner.website)}
+            text={item.data.partner.type === "Gallery" ? "Visit gallery site" : "Visit institution site"}
           />
         )
       case "pressReleaseUrl":
@@ -121,13 +140,13 @@ export class MoreInfo extends React.Component<Props, State> {
                 Opening reception
               </Sans>
             </Box>
-            <Sans size="3t">{data}</Sans>
+            <Sans size="3t">{item.data}</Sans>
           </>
         )
       case "event":
-        return <ShowEventSection {...data} />
+        return <ShowEventSection {...item.data} />
       case "pressRelease":
-        return <TextSection title="Press Release" text={data.press_release} />
+        return <TextSection title="Press Release" text={item.data.press_release} />
     }
   }
 
@@ -159,7 +178,6 @@ export const MoreInfoContainer = createFragmentContainer(MoreInfo, {
     fragment MoreInfo_show on Show {
       internalID
       slug
-      exhibition_period: exhibitionPeriod
       pressReleaseUrl
       openingReceptionText
       partner {
diff --git a/tsconfig.json b/tsconfig.json
index 17fd086ca..37c543b8e 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -1,13 +1,13 @@
 {
   "compilerOptions": {
     "allowJs": true,
-    "allowSyntheticDefaultImports": true,
+    "esModuleInterop": true,
     "baseUrl": "src",
     "experimentalDecorators": true,
     "lib": ["es2015"],
     "jsx": "react",
     "keyofStringsOnly": true,
-    "module": "es2015",
+    "module": "commonjs",
     "moduleResolution": "node",
     "noUnusedLocals": true,
     "noUnusedParameters": true,
diff --git a/unused-fields.txt b/unused-fields.txt
new file mode 100644
index 000000000..7356495b7
--- /dev/null
+++ b/unused-fields.txt
@@ -0,0 +1,108 @@
+~/C/A/emission [cleanup-fair-over-fetching] » yarn find-unused-fields
+yarn run v1.16.0
+$ ts-node --compiler-options '{"types": ["node"]}' scripts/find-unused-fields
+
+================= City Guide =================
+
+⚠️  Categories_me → src/lib/Scenes/Favorites/Components/Categories/index.tsx:87:7
+  Possibly unused field followsAndSaves/genes/pageInfo
+  Possibly unused field followsAndSaves/genes/edges/node/gene/slug
+  Possibly unused field followsAndSaves/genes/edges/node/gene/name
+  Possibly unused field followsAndSaves/genes/edges/node/gene/href
+  Possibly unused field followsAndSaves/genes/edges/node/gene/image
+
+⚠️  CityBMWList_city → src/lib/Scenes/City/CityBMWList.tsx:78:7
+  Possibly unused field sponsoredContent/shows/edges/node/slug
+  Possibly unused field sponsoredContent/shows/edges/node/internalID
+  Possibly unused field sponsoredContent/shows/edges/node/name
+  Possibly unused field sponsoredContent/shows/edges/node/status
+  Possibly unused field sponsoredContent/shows/edges/node/href
+  Possibly unused field sponsoredContent/shows/edges/node/is_followed
+  Possibly unused field sponsoredContent/shows/edges/node/isStubShow
+  Possibly unused field sponsoredContent/shows/edges/node/exhibition_period
+  Possibly unused field sponsoredContent/shows/edges/node/cover_image
+  Possibly unused field sponsoredContent/shows/edges/node/location
+  Possibly unused field sponsoredContent/shows/edges/node/type
+  Possibly unused field sponsoredContent/shows/edges/node/start_at
+  Possibly unused field sponsoredContent/shows/edges/node/end_at
+  Possibly unused field sponsoredContent/shows/edges/node/partner
+
+⚠️  CityFairList_city → src/lib/Scenes/City/CityFairList.tsx:93:7
+  Possibly unused field fairs/edges/node/name
+  Possibly unused field fairs/edges/node/exhibition_period
+  Possibly unused field fairs/edges/node/counts
+  Possibly unused field fairs/edges/node/location
+  Possibly unused field fairs/edges/node/image
+  Possibly unused field fairs/edges/node/profile
+  Possibly unused field fairs/edges/node/start_at
+  Possibly unused field fairs/edges/node/end_at
+
+⚠️  CitySavedList_viewer → src/lib/Scenes/City/CitySavedList.tsx:81:7
+  Possibly unused field me/followsAndSaves/shows/edges/node/slug
+  Possibly unused field me/followsAndSaves/shows/edges/node/internalID
+  Possibly unused field me/followsAndSaves/shows/edges/node/name
+  Possibly unused field me/followsAndSaves/shows/edges/node/isStubShow
+  Possibly unused field me/followsAndSaves/shows/edges/node/status
+  Possibly unused field me/followsAndSaves/shows/edges/node/href
+  Possibly unused field me/followsAndSaves/shows/edges/node/is_followed
+  Possibly unused field me/followsAndSaves/shows/edges/node/exhibition_period
+  Possibly unused field me/followsAndSaves/shows/edges/node/cover_image
+  Possibly unused field me/followsAndSaves/shows/edges/node/location
+  Possibly unused field me/followsAndSaves/shows/edges/node/type
+  Possibly unused field me/followsAndSaves/shows/edges/node/start_at
+  Possibly unused field me/followsAndSaves/shows/edges/node/end_at
+  Possibly unused field me/followsAndSaves/shows/edges/node/partner
+
+⚠️  CitySectionList_city → src/lib/Scenes/City/CitySectionList.tsx:111:7
+  Possibly unused field shows/pageInfo
+  Possibly unused field shows/edges/node/slug
+  Possibly unused field shows/edges/node/internalID
+  Possibly unused field shows/edges/node/isStubShow
+  Possibly unused field shows/edges/node/is_followed
+  Possibly unused field shows/edges/node/start_at
+  Possibly unused field shows/edges/node/end_at
+  Possibly unused field shows/edges/node/status
+  Possibly unused field shows/edges/node/href
+  Possibly unused field shows/edges/node/type
+  Possibly unused field shows/edges/node/name
+  Possibly unused field shows/edges/node/cover_image
+  Possibly unused field shows/edges/node/exhibition_period
+  Possibly unused field shows/edges/node/partner
+⚠️  GlobalMap_viewer → src/lib/Scenes/Map/GlobalMap.tsx:795:5
+  Possibly unused field city/coordinates
+  Possibly unused field city/sponsoredContent/introText
+  Possibly unused field city/sponsoredContent/featuredShows
+  Possibly unused field city/sponsoredContent/shows
+  Possibly unused field city/upcomingShows/edges/node/slug
+  Possibly unused field city/upcomingShows/edges/node/internalID
+  Possibly unused field city/upcomingShows/edges/node/isStubShow
+  Possibly unused field city/upcomingShows/edges/node/name
+  Possibly unused field city/upcomingShows/edges/node/status
+  Possibly unused field city/upcomingShows/edges/node/href
+  Possibly unused field city/upcomingShows/edges/node/exhibition_period
+  Possibly unused field city/upcomingShows/edges/node/cover_image
+  Possibly unused field city/upcomingShows/edges/node/location
+  Possibly unused field city/upcomingShows/edges/node/type
+  Possibly unused field city/upcomingShows/edges/node/start_at
+  Possibly unused field city/upcomingShows/edges/node/end_at
+  Possibly unused field city/upcomingShows/edges/node/partner
+  Possibly unused field city/shows/edges/node/isStubShow
+  Possibly unused field city/shows/edges/node/status
+  Possibly unused field city/shows/edges/node/href
+  Possibly unused field city/shows/edges/node/location/coordinates/lat
+  Possibly unused field city/shows/edges/node/location/coordinates/lng
+  Possibly unused field city/shows/edges/node/type
+  Possibly unused field city/shows/edges/node/start_at
+  Ignoring node of kind IntersectionType at path city/shows/edges/node/partner.
+  Possibly unused field city/fairs/edges/node/location/coordinates/lat
+  Possibly unused field city/fairs/edges/node/location/coordinates/lng
+  Possibly unused field city/fairs/edges/node/image/image_url
+  Possibly unused field city/fairs/edges/node/image/aspect_ratio
+  Possibly unused field city/fairs/edges/node/profile/icon/internalID
+  Possibly unused field city/fairs/edges/node/profile/icon/href
+  Possibly unused field city/fairs/edges/node/profile/icon/height
+  Possibly unused field city/fairs/edges/node/profile/icon/width
+  Possibly unused field city/fairs/edges/node/profile/slug
+  Possibly unused field city/fairs/edges/node/profile/name
+  Possibly unused field city/fairs/edges/node/start_at
+  Possibly unused field city/fairs/edges/node/end_at
diff --git a/yarn.lock b/yarn.lock
index 87be799b1..eb617497b 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -1638,6 +1638,11 @@
   dependencies:
     chalk "*"
 
+"@types/dedent@^0.7.0":
+  version "0.7.0"
+  resolved "https://registry.yarnpkg.com/@types/dedent/-/dedent-0.7.0.tgz#155f339ca404e6dd90b9ce46a3f78fd69ca9b050"
+  integrity sha512-EGlKlgMhnLt/cM4DbUSafFdrkeJoC9Mvnj0PUCU7tFmTjMjNRT957kXCx0wYm3JuEq4o4ZsS5vG+NlkM2DMd2A==
+
 "@types/geojson@*":
   version "7946.0.6"
   resolved "https://registry.yarnpkg.com/@types/geojson/-/geojson-7946.0.6.tgz#416f388a06b227784a2d91a88a53f14de05cd54b"
@@ -1697,10 +1702,10 @@
   resolved "https://registry.yarnpkg.com/@types/node/-/node-11.11.4.tgz#8808bd5a82bbf6f5d412eff1c228d178e7c24bb3"
   integrity sha512-02tIL+QIi/RW4E5xILdoAMjeJ9kYq5t5S2vciUdFPXv/ikFTb0zK8q9vXkg4+WAJuYXGiVT1H28AkD2C+IkXVw==
 
-"@types/node@11.9.6":
-  version "11.9.6"
-  resolved "https://registry.yarnpkg.com/@types/node/-/node-11.9.6.tgz#c632bbcc780a1349673a6e2e9b9dfa8c369d3c74"
-  integrity sha512-4hS2K4gwo9/aXIcoYxCtHpdgd8XUeDmo1siRCAH3RziXB65JlPqUFMtfy9VPj+og7dp3w1TFjGwYga4e0m9GwA==
+"@types/node@^12.7.5":
+  version "12.7.5"
+  resolved "https://registry.yarnpkg.com/@types/node/-/node-12.7.5.tgz#e19436e7f8e9b4601005d73673b6dc4784ffcc2f"
+  integrity sha512-9fq4jZVhPNW8r+UYKnxF1e2HkDWOWKM5bC2/7c9wPV835I0aOrVbS/Hw/pWPk2uKrNXQqg9Z959Kz+IYDd5p3w==
 
 "@types/prop-types@*":
   version "15.5.6"
@@ -2138,6 +2143,11 @@ are-we-there-yet@~1.1.2:
     delegates "^1.0.0"
     readable-stream "^2.0.6"
 
+arg@^4.1.0:
+  version "4.1.1"
+  resolved "https://registry.yarnpkg.com/arg/-/arg-4.1.1.tgz#485f8e7c390ce4c5f78257dbea80d4be11feda4c"
+  integrity sha512-SlmP3fEA88MBv0PypnXZ8ZfJhwmDeIE3SP71j37AiXQBXYosPV0x6uISAaHYSlSVhmHOVkomen0tbGk6Anlebw==
+
 argparse@^1.0.7:
   version "1.0.9"
   resolved "https://registry.yarnpkg.com/argparse/-/argparse-1.0.9.tgz#73d83bc263f86e97f8cc4f6bae1b0e90a7d22c86"
@@ -5620,6 +5630,11 @@ diff@^3.2.0, diff@^3.5.0:
   resolved "https://registry.yarnpkg.com/diff/-/diff-3.5.0.tgz#800c0dd1e0a8bfbc95835c202ad220fe317e5a12"
   integrity sha512-A46qtFgd+g7pDZinpnwiRJtxbC1hpgf0uzP3iG89scHk0AUC7A1TGxf5OiiOUv/JMZR8GOt8hL900hV0bOy5xA==
 
+diff@^4.0.1:
+  version "4.0.1"
+  resolved "https://registry.yarnpkg.com/diff/-/diff-4.0.1.tgz#0c667cb467ebbb5cea7f14f135cc2dba7780a8ff"
+  integrity sha512-s2+XdvhPCOF01LRQBC8hf4vhbVmI2CGS5aZnxLJlT5FtdhPCDFq80q++zK2KlrVorVDdL5BOGZ/VfLrVtYNF+Q==
+
 diffie-hellman@^5.0.0:
   version "5.0.2"
   resolved "https://registry.yarnpkg.com/diffie-hellman/-/diffie-hellman-5.0.2.tgz#b5835739270cfe26acf632099fded2a07f209e5e"
@@ -9822,7 +9837,7 @@ make-dir@^1.1.0, make-dir@^1.3.0:
   dependencies:
     pify "^3.0.0"
 
-make-error@1.x:
+make-error@1.x, make-error@^1.1.1:
   version "1.3.5"
   resolved "https://registry.yarnpkg.com/make-error/-/make-error-1.3.5.tgz#efe4e81f6db28cadd605c70f29c831b58ef776c8"
   integrity sha512-c3sIjNUow0+8swNwVpqoH4YCShKNFkMaw6oH1mNS2haDZQqkeZFlHS3dhoeEbKKmJB4vXpJucU6oH75aDYeE9g==
@@ -15068,6 +15083,17 @@ ts-jest@24.0.0:
     semver "^5.5"
     yargs-parser "10.x"
 
+ts-node@^8.4.1:
+  version "8.4.1"
+  resolved "https://registry.yarnpkg.com/ts-node/-/ts-node-8.4.1.tgz#270b0dba16e8723c9fa4f9b4775d3810fd994b4f"
+  integrity sha512-5LpRN+mTiCs7lI5EtbXmF/HfMeCjzt7DH9CZwtkr6SywStrNQC723wG+aOWFiLNn7zT3kD/RnFqi3ZUfr4l5Qw==
+  dependencies:
+    arg "^4.1.0"
+    diff "^4.0.1"
+    make-error "^1.1.1"
+    source-map-support "^0.5.6"
+    yn "^3.0.0"
+
 tslib@^1, tslib@^1.8.0, tslib@^1.8.1, tslib@^1.9.0, tslib@^1.9.3:
   version "1.9.3"
   resolved "https://registry.yarnpkg.com/tslib/-/tslib-1.9.3.tgz#d7e4dd79245d85428c4d7e4822a79917954ca286"
@@ -16343,6 +16369,11 @@ yeoman-generator@^3.1.1:
     through2 "^3.0.0"
     yeoman-environment "^2.0.5"
 
+yn@^3.0.0:
+  version "3.1.1"
+  resolved "https://registry.yarnpkg.com/yn/-/yn-3.1.1.tgz#1e87401a09d767c1d5eab26a6e4c185182d2eb50"
+  integrity sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==
+
 zen-observable-ts@^0.8.10:
   version "0.8.10"
   resolved "https://registry.yarnpkg.com/zen-observable-ts/-/zen-observable-ts-0.8.10.tgz#18e2ce1c89fe026e9621fd83cc05168228fce829"
